<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>docker的学习笔记</title>
      <link href="posts/1ab9c6f4fb04/"/>
      <url>posts/1ab9c6f4fb04/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><blockquote><p>弱小和无知不是生存的障碍,傲慢才是</p></blockquote><h2 id="1-Docker概述"><a href="#1-Docker概述" class="headerlink" title="1.Docker概述"></a>1.Docker概述</h2><blockquote><p>Docker为什么会出现</p></blockquote><p>一款产品:开发-&gt;上先 两套环境! 应用环境,应用配置</p><p>问题:我的电脑可以运行!版本更新,导致服务不可用!</p><p>环境配置十分麻烦,docker就可以解决这个问题</p><h2 id="2-Docker思想"><a href="#2-Docker思想" class="headerlink" title="2.Docker思想"></a>2.Docker思想</h2><blockquote><p>隔离</p></blockquote><p>集装箱的每个箱子互相隔离,打包装箱</p><h2 id="3-docker的结构"><a href="#3-docker的结构" class="headerlink" title="3.docker的结构"></a>3.docker的结构</h2><table><thead><tr><th align="center"><strong>Lib App |Lib App</strong></th></tr></thead><tbody><tr><td align="center"><strong>Kernel</strong></td></tr></tbody></table><p>docker和虚拟机的不同:</p><ul><li>传统虚拟机,虚拟出硬件,运行完整的操作系统,然后在这个系统上安装和运行软件</li><li>容器内的应用直接运行宿主机的内容,容器是没有自己的内核的,也没有虚拟我们的硬件</li><li>每个容器间互相隔离</li></ul><h2 id="4-Docker的优点"><a href="#4-Docker的优点" class="headerlink" title="4.Docker的优点"></a>4.Docker的优点</h2><ul><li>应用更快速的交付和部署</li><li>更便携的升级和扩缩容</li><li>更简单的系统运维</li><li>更高效的计算资源利用</li></ul><h2 id="5-Docker的名词概念"><a href="#5-Docker的名词概念" class="headerlink" title="5.Docker的名词概念"></a>5.Docker的名词概念</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img@master/img/xxx.2oau29n92pa0.png" alt="image-20210513000000059"></p><h3 id="1-镜像-image"><a href="#1-镜像-image" class="headerlink" title="1.镜像(image):"></a>1.镜像(image):</h3><p>docker镜像就是一个模板,可以通过镜像创建多个容器.tomcat镜像-&gt;run-&gt;tomcat01容器</p><h3 id="2-容器-container"><a href="#2-容器-container" class="headerlink" title="2.容器(container)"></a>2.容器(container)</h3><p>docker利用容器技术,独立运行一个或者一组应用,它是通过镜像创建的</p><p>启动,停止,删除,基本命令</p><h3 id="3-仓库-repository"><a href="#3-仓库-repository" class="headerlink" title="3.仓库(repository)"></a>3.仓库(repository)</h3><p>存放镜像的地方</p><p>公有和私有仓库</p><h2 id="6-安装docker"><a href="#6-安装docker" class="headerlink" title="6.安装docker"></a>6.安装docker</h2><p><a href="https://docs.docker.com/engine/install/">docker安装卸载文档</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 卸载旧版本</span></span><br><span class="line">sudo yum remove docker \</span><br><span class="line">                 docker-client \</span><br><span class="line">                 docker-client-latest \</span><br><span class="line">                 docker-common \</span><br><span class="line">                 docker-latest \</span><br><span class="line">                 docker-latest-logrotate \</span><br><span class="line">                 docker-logrotate \</span><br><span class="line">                 docker-engine</span><br><span class="line"><span class="meta">#</span><span class="bash"> 需要的安装包</span>  </span><br><span class="line">sudo yum install -y yum-utils</span><br><span class="line"><span class="meta">#</span><span class="bash"> 镜像仓库</span></span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">   --add-repo \</span><br><span class="line">   http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装docker引擎</span></span><br><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><blockquote><p>阿里云镜像加速</p></blockquote><p><a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">文档</a></p><h2 id="7-docker-run流程"><a href="#7-docker-run流程" class="headerlink" title="7.docker run流程"></a>7.docker run流程</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img@master/img/xxx.1i8k22ze4rkw.png" alt="image-20210513002653977"></p><h2 id="8-底层原理"><a href="#8-底层原理" class="headerlink" title="8.底层原理"></a>8.底层原理</h2><blockquote><p>docker是怎么工作的？</p></blockquote><p>Docker是一个c/s的结构的系统，Docker的守护运行在主机上。通过Socket从客户端访问！</p><p>Docker Server接收到Docker-Client的指令,就会执行这个命令.</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img@master/img/xxx.4bni55fk5xq0.png" alt="xxx"></p><p>Docker为什么比虚拟机块？</p><ul><li>Docker有比虚拟机更少的抽象层</li><li>Docker利用的是宿主机的内核，vm需要是Guest OS</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img@master/img/xxx.6lelclt307k0.png" alt="xxx"></p><h2 id="9-Docker的常用命令"><a href="#9-Docker的常用命令" class="headerlink" title="9.Docker的常用命令"></a>9.Docker的常用命令</h2><blockquote><p>帮助命令 <a href="https://docs.docker.com/engine/reference/commandline/docker/">文档</a>      <a href="https://hub.docker.com/">下载</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker version # 显示docker的版本信息</span><br><span class="line">docker info   # 显示docker的系统信息,包括镜像和容器的数量</span><br><span class="line">docker 命令 --help # 帮助命令</span><br></pre></td></tr></table></figure><h2 id="10-镜像命令"><a href="#10-镜像命令" class="headerlink" title="10.镜像命令"></a>10.镜像命令</h2><h3 id="1-docker-images-显示所有镜像"><a href="#1-docker-images-显示所有镜像" class="headerlink" title="1.docker images(显示所有镜像)"></a>1.docker images(显示所有镜像)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">docker images --help</span><br><span class="line">Options:</span><br><span class="line">  -a, --all             Show all images (default hides intermediate images) #列出所有镜像</span><br><span class="line">      --digests         Show digests</span><br><span class="line">  -f, --filter filter   Filter output based on conditions provided</span><br><span class="line">      --format string   Pretty-print images using a Go template</span><br><span class="line">      --no-trunc        Don&#x27;t truncate output</span><br><span class="line">  -q, --quiet           Only show image IDs# 只显示镜像的id</span><br><span class="line"></span><br><span class="line">docker images</span><br><span class="line"><span class="meta">#</span><span class="bash"> REPOSITORY    TAG       IMAGE ID       CREATED        SIZE</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 镜像仓库源 标签         id           创建时间         大小</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img@master/img/xxx.76mvcdjibww0.png" alt="xxx"></p><h3 id="2-docker-search-镜像搜索"><a href="#2-docker-search-镜像搜索" class="headerlink" title="2.docker search(镜像搜索)"></a>2.docker search(镜像搜索)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker search mysql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">可选性</span> </span><br><span class="line">--filter=starts=3000</span><br></pre></td></tr></table></figure><h3 id="3-docker-pull-拉取镜像"><a href="#3-docker-pull-拉取镜像" class="headerlink" title="3.docker pull(拉取镜像)"></a>3.docker pull(拉取镜像)</h3><blockquote><p>不写tag就是latest 最新版本</p><p>分层下载</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql</span><br><span class="line"><span class="meta">#</span><span class="bash"> 等价于</span></span><br><span class="line">docker pull docker.io/library/mysql:latest</span><br></pre></td></tr></table></figure><h3 id="4-docker-rmi-删除镜像"><a href="#4-docker-rmi-删除镜像" class="headerlink" title="4.docker rmi(删除镜像)"></a>4.docker rmi(删除镜像)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 通过id删除</span></span><br><span class="line">docker rmi -f id</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除所有</span></span><br><span class="line">docker rmi -f $(docker images -aq)</span><br></pre></td></tr></table></figure><h2 id="11-容器命令"><a href="#11-容器命令" class="headerlink" title="11.容器命令"></a>11.容器命令</h2><blockquote><p>有了镜像才可以创建容器</p></blockquote><p>新建容器并启动</p><h3 id="1-docker-run-容器启动"><a href="#1-docker-run-容器启动" class="headerlink" title="1.docker run(容器启动)"></a>1.docker run(容器启动)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">docker run [可选参数] image</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 参数说明</span></span><br><span class="line">--name=&quot;Name&quot; 容器名字</span><br><span class="line">-d 后台启动</span><br><span class="line">-it 交互方式运行,进入容器查看内容</span><br><span class="line">-p 制定端口 -p8080:8080</span><br><span class="line">1.主机:容器</span><br><span class="line">2.容器</span><br><span class="line">3.ip:容器端口</span><br><span class="line"><span class="meta">#</span><span class="bash"> 交互进行</span></span><br><span class="line">docker run -it centos /bin/bash</span><br><span class="line"><span class="meta">#</span><span class="bash"> 退出停止</span></span><br><span class="line">exit</span><br><span class="line"><span class="meta">#</span><span class="bash"> 退出不停止</span></span><br><span class="line">ctrl+p+q</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-查看运行的容器"><a href="#2-查看运行的容器" class="headerlink" title="2.查看运行的容器"></a>2.查看运行的容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 正在运行</span></span><br><span class="line">docker ps</span><br><span class="line"><span class="meta">#</span><span class="bash"> 全部</span></span><br><span class="line">docker ps -a</span><br><span class="line"><span class="meta">#</span><span class="bash"> -n=?  显示最近创建的容器 ?为个数</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -q 只显示id</span></span><br></pre></td></tr></table></figure><h3 id="3-删除容器"><a href="#3-删除容器" class="headerlink" title="3.删除容器"></a>3.删除容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker rm 容器id</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除所有容器(可以删除活动的容器)</span></span><br><span class="line">docker rm -f $(docker ps -aq)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 下面等价</span></span><br><span class="line">docker ps -a -q|xargs docker rm</span><br></pre></td></tr></table></figure><h3 id="4-启动停止操作"><a href="#4-启动停止操作" class="headerlink" title="4.启动停止操作"></a>4.启动停止操作</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker start id</span><br><span class="line">docker restart id</span><br><span class="line">docker stop id</span><br><span class="line">docker kill id</span><br></pre></td></tr></table></figure><h2 id="12-其他命令"><a href="#12-其他命令" class="headerlink" title="12.其他命令"></a>12.其他命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d centos</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 为什么centos停止了?</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> docker 后台运行需要一个前台进程,docker发现没有应用,就会自动停止</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-查看日志"><a href="#1-查看日志" class="headerlink" title="1.查看日志"></a>1.查看日志</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker logs --help</span><br><span class="line"></span><br><span class="line">dockers log -tf --tail 10 id</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-查看容器进程信息"><a href="#2-查看容器进程信息" class="headerlink" title="2.查看容器进程信息"></a>2.查看容器进程信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker top id</span><br></pre></td></tr></table></figure><h3 id="3-查看容器元数据"><a href="#3-查看容器元数据" class="headerlink" title="3.查看容器元数据"></a>3.查看容器元数据</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect id</span><br></pre></td></tr></table></figure><h3 id="4-进入正在运行的容器"><a href="#4-进入正在运行的容器" class="headerlink" title="4.进入正在运行的容器"></a>4.进入正在运行的容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 新窗口</span></span><br><span class="line">docker exec -it id [/bin/bash]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 旧窗口,进入正在执行的终端</span></span><br><span class="line">docker attach -it id [/bin/bash]</span><br></pre></td></tr></table></figure><h3 id="5-容器拷贝数据到主机"><a href="#5-容器拷贝数据到主机" class="headerlink" title="5.容器拷贝数据到主机"></a>5.容器拷贝数据到主机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp id:/home/xx /home</span><br></pre></td></tr></table></figure><h2 id="13-Docker镜像详解"><a href="#13-Docker镜像详解" class="headerlink" title="13.Docker镜像详解"></a>13.Docker镜像详解</h2><blockquote><p>镜像就是一个独立的软件包</p></blockquote><h3 id="1-UoionFS-联合文件系统"><a href="#1-UoionFS-联合文件系统" class="headerlink" title="1.UoionFS(联合文件系统)"></a>1.UoionFS(联合文件系统)</h3><blockquote><p>一次性加载多个文件系统,但从外面看,只能看到一个文件系统,联合加载会把各层的文件系统叠加起来,这样最终的文件系统会包含所有的底层的文件和目录</p></blockquote><h3 id="2-docker镜像加载"><a href="#2-docker镜像加载" class="headerlink" title="2.docker镜像加载"></a>2.docker镜像加载</h3><blockquote><p>bootfs引导加载</p></blockquote><blockquote><p>rootfs linux系统标准目录和文件,rootfs就是不同操作系统的发行版</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="C:\Users\CodeLorin\Desktop\cloud\文档\img\image-20210513182104650.png" alt="image-20210513182104650"></p><h3 id="3-分层理解"><a href="#3-分层理解" class="headerlink" title="3.分层理解"></a>3.分层理解</h3><p>所有的docker镜像都始于一个基础镜像层,当修改和增加新的内容之后,就会再当今镜像层上,创建新的镜像层<img src= "/img/loading.gif" data-lazy-src="C:\Users\CodeLorin\Desktop\cloud\文档\img\image-20210513182549708.png" alt="image-20210513182549708"></p><p>docker镜像都是只读的,当容器启动后,一个新的可读写层被加载到镜像的顶部</p><p>(这一层就是我们说的镜像层,镜像层以下都叫做容器层)</p><h3 id="4-commit镜像"><a href="#4-commit镜像" class="headerlink" title="4.commit镜像"></a>4.commit镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker commit # 提交容器成为一个新的版本</span><br><span class="line">docker commit -m=&quot;描述信息&quot; -a=&quot;作者&quot; 容器id 目标镜像名称:[tag]</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动一个默认的tomcat</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 发现这个tomcat没有webapps应用</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 我自己做了一些操作</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 提交</span></span><br><span class="line">docker commit -a=&quot;codelorin&quot; -m=&quot;add webapps&quot; 容器id 目标镜像名称:版本</span><br></pre></td></tr></table></figure><h2 id="14-容器数据卷"><a href="#14-容器数据卷" class="headerlink" title="14.容器数据卷"></a>14.容器数据卷</h2><blockquote><p>数据可以持久化</p><p>Mysql的数据可以储存在本地</p><p>容器之间可以有一个数据共享的功能</p></blockquote><h3 id="1-使用"><a href="#1-使用" class="headerlink" title="1.使用"></a>1.使用</h3><blockquote><p>直接使用命令挂载</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -v 主机目录:容器目录</span><br></pre></td></tr></table></figure><h3 id="2-实战同步mysql"><a href="#2-实战同步mysql" class="headerlink" title="2.实战同步mysql"></a>2.实战同步mysql</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:5.7</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动mysql</span></span><br><span class="line">docker run -d -p 3306:3306 -v /home/mysql/conf:/etc/mysql/conf.d -v /home/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=密码 --name mysql5.7 mysql:5.7</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash">-d 后台</span></span><br><span class="line">-p 端口映射</span><br><span class="line">-v 卷挂载</span><br><span class="line">-e 环境配置</span><br><span class="line">--name 名字</span><br></pre></td></tr></table></figure><h3 id="3-具名挂载和匿名挂载"><a href="#3-具名挂载和匿名挂载" class="headerlink" title="3.具名挂载和匿名挂载"></a>3.具名挂载和匿名挂载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 匿名挂载 只写了容器内的路径</span></span><br><span class="line">-v 容器内路径</span><br><span class="line">docker run -d -P --name nginx01 -v /etc/nginx nginx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看所有数据卷的情况</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> docker volume</span></span><br><span class="line">create</span><br><span class="line">inspect 查看</span><br><span class="line">ls</span><br><span class="line">prune</span><br><span class="line">rm</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 具名挂载</span></span><br><span class="line">docker run -d -P --name nginx01 -v juming-nginx:/etc/nginx nginx</span><br></pre></td></tr></table></figure><blockquote><p>扩展 可以使用:ro :rw 改变读写权限</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p --name nginx -v juming-nginx:/etc/nginx:ro nginx</span><br><span class="line"><span class="meta">#</span><span class="bash"> ro只能通过宿主机改变,容器无法操作</span></span><br></pre></td></tr></table></figure><h2 id="15-DockerFile"><a href="#15-DockerFile" class="headerlink" title="15.DockerFile"></a>15.DockerFile</h2><h3 id="1-初见dockerfile"><a href="#1-初见dockerfile" class="headerlink" title="1.初见dockerfile"></a>1.初见dockerfile</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> [<span class="string">&quot;volume01&quot;</span>,<span class="string">&quot;volume02&quot;</span>]</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> <span class="built_in">echo</span> <span class="string">&quot;-----end-----&quot;</span></span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> /bin/bash</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -f dockerfile -t ./centos:1.0</span><br></pre></td></tr></table></figure><h3 id="2-数据卷容器"><a href="#2-数据卷容器" class="headerlink" title="2.数据卷容器"></a>2.数据卷容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name docker02 --volumes-from docker01</span><br><span class="line"><span class="meta">#</span><span class="bash"> 这样docker01 02会自动同步</span></span><br></pre></td></tr></table></figure><blockquote><p>容器数据卷的生命周期一直持续到没有容器使用为止</p></blockquote><h3 id="3-构建步骤"><a href="#3-构建步骤" class="headerlink" title="3.构建步骤"></a>3.构建步骤</h3><ul><li>编写一个dockerfile文件</li><li>docker build 构建成为一个镜像</li><li>docker run 运行镜像</li><li>docker push 发布镜像(Docker Hub或者阿里云镜像仓库)</li></ul><p>基础知识:</p><ul><li>指令是大写字母</li><li>#注释</li><li>每个指令都会创建提交一个新的镜像层</li></ul><blockquote><p>指令</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">FROM xxx  # 基础镜像,一切从这里开始构建</span><br><span class="line">MAINTAINER # 名字+邮箱</span><br><span class="line">RUN # docker构建需要运行的命令</span><br><span class="line">ADD # 步骤:tomcat镜像,tomcat压缩包</span><br><span class="line">WORKDIR # 镜像的工作目录</span><br><span class="line">VOLUME # 挂载的目录</span><br><span class="line">EXPOSE # 指定暴露端口</span><br><span class="line">CMD # 指定容器启动需要运行的命令,只有最后一个会生效,可被替代</span><br><span class="line">ENTRYPOINT # 指定容器运行的命令,可以追加命令</span><br><span class="line">ONBUILD # 当构建一个被继承Dockerfile 就会运行ONBUILD的指令,触发指令</span><br><span class="line">COPY # 类型ADD,将我们文件拷贝到镜像中</span><br><span class="line">ENV # 设置环境变量</span><br></pre></td></tr></table></figure><h3 id="4-实战构建centos"><a href="#4-实战构建centos" class="headerlink" title="4.实战构建centos"></a>4.实战构建centos</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">MAINTAINER</span> codelorin&lt;codelorin@<span class="number">163</span>.com&gt;</span><br><span class="line"><span class="keyword">ENV</span> MYPATH /<span class="keyword">user</span>/local</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> <span class="variable">$MYPATH</span></span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum -y install vim</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum -y install net-tools</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> <span class="built_in">echo</span> <span class="variable">$MYPATH</span></span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> <span class="built_in">echo</span> <span class="string">&quot;END!!&quot;</span></span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> /bin/bash</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -f dockerfile -t mycentos:0.1 .</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker history 容器id</span><br></pre></td></tr></table></figure><h3 id="5-CMD和ENTRYPOINT的区别"><a href="#5-CMD和ENTRYPOINT的区别" class="headerlink" title="5.CMD和ENTRYPOINT的区别"></a>5.CMD和ENTRYPOINT的区别</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CMD # 指定容器启动需要运行的命令,只有最后一个会生效,可被替代</span><br><span class="line">ENTRYPOINT # 指定容器运行的命令,可以追加命令</span><br></pre></td></tr></table></figure><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;ls&quot;</span>,<span class="string">&quot;-a&quot;</span>]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run id -l</span><br><span class="line"><span class="meta">#</span><span class="bash"> 报错CMD使用-l替代了ls-a</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ENTRYPOINT则会在末尾追加-l</span></span><br></pre></td></tr></table></figure><h3 id="6-制作tomcat镜像"><a href="#6-制作tomcat镜像" class="headerlink" title="6.制作tomcat镜像"></a>6.制作tomcat镜像</h3><h4 id="1-准备tomcat-jdk压缩包"><a href="#1-准备tomcat-jdk压缩包" class="headerlink" title="1.准备tomcat,jdk压缩包"></a>1.准备tomcat,jdk压缩包</h4><h4 id="2-编写dockerfile-官方建议-Dockerfile"><a href="#2-编写dockerfile-官方建议-Dockerfile" class="headerlink" title="2.编写dockerfile 官方建议:Dockerfile"></a>2.编写dockerfile 官方建议:Dockerfile</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">MAINTAINER</span> codelorin&lt;codelorin@<span class="number">163</span>.com&gt;</span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> readme.md /user/<span class="built_in">local</span>/readme.md</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> jdk.tar.gz</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> tomcat.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum -y install vim</span></span><br><span class="line"><span class="keyword">ENV</span> MYPATH /<span class="keyword">user</span>/local</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> <span class="variable">$MYPATH</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> JAVA_HOME /<span class="keyword">user</span>/local/jdk1.<span class="number">8</span></span><br><span class="line"><span class="keyword">ENV</span> CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line"><span class="keyword">ENV</span> CATALINA_HOME /<span class="keyword">user</span>/local/apache-tomcat</span><br><span class="line"><span class="keyword">ENV</span> CATALINA_BASH /<span class="keyword">user</span>/local/apache-tomcat</span><br><span class="line"><span class="keyword">ENV</span> PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin</span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> /user/<span class="built_in">local</span>/apache-tomcat/bin/startup.sh &amp;&amp; tail -F /usr/<span class="built_in">local</span>/apache-tomcat/bin/logs/catalina.out</span></span><br></pre></td></tr></table></figure><h3 id="7-Docker-Hub发布镜像"><a href="#7-Docker-Hub发布镜像" class="headerlink" title="7.Docker-Hub发布镜像"></a>7.Docker-Hub发布镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker login -u bylorin -p xxx</span><br><span class="line">docker tag id codelorin/tomcat:1.0</span><br><span class="line">docker push codelorin/tomcat</span><br></pre></td></tr></table></figure><h3 id="8-阿里云发布镜像"><a href="#8-阿里云发布镜像" class="headerlink" title="8.阿里云发布镜像"></a>8.阿里云发布镜像</h3><blockquote><p>详见阿里云镜像官网</p></blockquote><h4 id="1-创建命名空间"><a href="#1-创建命名空间" class="headerlink" title="1.创建命名空间"></a>1.创建命名空间</h4><h4 id="2-创建容器镜像"><a href="#2-创建容器镜像" class="headerlink" title="2.创建容器镜像"></a>2.创建容器镜像</h4><h2 id="16-Docker网络"><a href="#16-Docker网络" class="headerlink" title="16.Docker网络"></a>16.Docker网络</h2><blockquote><p>待更新</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI框架学习</title>
      <link href="posts/21ed4f6cc7dd/"/>
      <url>posts/21ed4f6cc7dd/</url>
      
        <content type="html"><![CDATA[<h2 id="1-主要特点"><a href="#1-主要特点" class="headerlink" title="1.主要特点"></a>1.主要特点</h2><ul><li>性能优越</li><li>异步</li><li>开发效率高</li><li>自带开发文档</li></ul><h2 id="2-Pydantic"><a href="#2-Pydantic" class="headerlink" title="2.Pydantic"></a>2.Pydantic</h2><blockquote><p>基于python 类型提示来自定义数据验证,序列化和文档的库</p></blockquote><h2 id="3-Starlette"><a href="#3-Starlette" class="headerlink" title="3.Starlette"></a>3.Starlette</h2><blockquote><p>轻量级的ASGI框架/工具包,是构建高性能Asyncio服务的理想选择</p></blockquote><h2 id="4-ASGI"><a href="#4-ASGI" class="headerlink" title="4.ASGI"></a>4.ASGI</h2><ul><li>Uvicorn</li><li>Hypercorn</li><li>Daphne</li></ul><h2 id="5-Demo"><a href="#5-Demo" class="headerlink" title="5.Demo"></a>5.Demo</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"></span><br><span class="line">app = FastAPI()  <span class="comment"># 这里不一定是app，名字随意</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CityInfo</span>(<span class="params">BaseModel</span>):</span></span><br><span class="line">    province: <span class="built_in">str</span></span><br><span class="line">    country: <span class="built_in">str</span></span><br><span class="line">    is_affected: <span class="type">Optional</span>[<span class="built_in">bool</span>] = <span class="literal">None</span>  <span class="comment"># 与bool的区别是可以不传，默认是null</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># @app.get(&#x27;/&#x27;)</span></span><br><span class="line"><span class="comment"># def hello_world():</span></span><br><span class="line"><span class="comment">#     return &#123;&#x27;hello&#x27;: &#x27;world&#x27;&#125;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># @app.get(&#x27;/city/&#123;city&#125;&#x27;)</span></span><br><span class="line"><span class="comment"># def result(city: str, query_string: Optional[str] = None):</span></span><br><span class="line"><span class="comment">#     return &#123;&#x27;city&#x27;: city, &#x27;query_string&#x27;: query_string&#125;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># @app.put(&#x27;/city/&#123;city&#125;&#x27;)</span></span><br><span class="line"><span class="comment"># def result(city: str, city_info: CityInfo):</span></span><br><span class="line"><span class="comment">#     return &#123;&#x27;city&#x27;: city, &#x27;country&#x27;: city_info.country, &#x27;is_affected&#x27;: city_info.is_affected&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">hello_world</span>():</span></span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;hello&#x27;</span>: <span class="string">&#x27;world&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&#x27;/city/&#123;city&#125;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">result</span>(<span class="params">city: <span class="built_in">str</span>, query_string: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;city&#x27;</span>: city, <span class="string">&#x27;query_string&#x27;</span>: query_string&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.put(<span class="params"><span class="string">&#x27;/city/&#123;city&#125;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">result</span>(<span class="params">city: <span class="built_in">str</span>, city_info: CityInfo</span>):</span></span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;city&#x27;</span>: city, <span class="string">&#x27;country&#x27;</span>: city_info.country, <span class="string">&#x27;is_affected&#x27;</span>: city_info.is_affected&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动命令  uvicorn hello_world:app --reload</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Python </category>
          
          <category> FastAPI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 后端 </tag>
            
            <tag> FastAPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql数据库</title>
      <link href="posts/c40ae4b5eafd/"/>
      <url>posts/c40ae4b5eafd/</url>
      
        <content type="html"><![CDATA[<h2 id="1-数据库介绍"><a href="#1-数据库介绍" class="headerlink" title="1.数据库介绍"></a>1.数据库介绍</h2><blockquote><p>数据库是安装在操作系统,可以系统性的存储大量数据的软件.</p><p>作用:存储数据,管理数据</p></blockquote><h2 id="2-数据库的分类"><a href="#2-数据库的分类" class="headerlink" title="2.数据库的分类"></a>2.数据库的分类</h2><ul><li><p>SQL 关系型数据库</p><ul><li>Mysql ,Ocacle,Sql Server,DB2,SQLite</li><li>通过表和表,列和列的关系进行数据的存储</li></ul></li><li><p>NOSQL 非关系型数据库</p><ul><li>Redis,MongDB</li><li>非关系型数据库,对象存储,类型JSON或者字典方式存储数据</li></ul></li></ul><h2 id="3-命令行初见Mysql"><a href="#3-命令行初见Mysql" class="headerlink" title="3.命令行初见Mysql"></a>3.命令行初见Mysql</h2><h3 id="1-登录"><a href="#1-登录" class="headerlink" title="1.登录"></a>1.登录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p123456</span><br><span class="line">//-u用户名 -p密码</span><br></pre></td></tr></table></figure><p>命令都是以;结尾的</p><h3 id="2-查看数据库"><a href="#2-查看数据库" class="headerlink" title="2.查看数据库"></a>2.查看数据库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><h3 id="3-切换数据库"><a href="#3-切换数据库" class="headerlink" title="3.切换数据库"></a>3.切换数据库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use xxx;</span><br></pre></td></tr></table></figure><h3 id="4-查看数据库中的所有表"><a href="#4-查看数据库中的所有表" class="headerlink" title="4.查看数据库中的所有表"></a>4.查看数据库中的所有表</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure><h3 id="5-显示数据库中所有表的消息"><a href="#5-显示数据库中所有表的消息" class="headerlink" title="5.显示数据库中所有表的消息"></a>5.显示数据库中所有表的消息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">describe student;</span><br></pre></td></tr></table></figure><h3 id="6-退出"><a href="#6-退出" class="headerlink" title="6.退出"></a>6.退出</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit;</span><br></pre></td></tr></table></figure><h2 id="4-操作数据库"><a href="#4-操作数据库" class="headerlink" title="4.操作数据库"></a>4.操作数据库</h2><blockquote><p>小提示,如果你的表名或者字段是一个特殊字符需要用``包起来</p><p>数据库-&gt;数据表&gt;数据</p></blockquote><h3 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1.创建数据库"></a>1.创建数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE hello;</span><br><span class="line">CREATE DATABASE IF NOT EXISTS hello;</span><br></pre></td></tr></table></figure><h3 id="2-删除数据库"><a href="#2-删除数据库" class="headerlink" title="2.删除数据库"></a>2.删除数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP DATABASE IF EXISTS hello;</span><br></pre></td></tr></table></figure><h2 id="5-数据库的列类型"><a href="#5-数据库的列类型" class="headerlink" title="5.数据库的列类型"></a>5.数据库的列类型</h2><blockquote><p>数值</p></blockquote><table><thead><tr><th align="center">名称</th><th align="center">存储数据的大小</th><th align="center">占用的字节大小</th></tr></thead><tbody><tr><td align="center">tinyint</td><td align="center">十分小的数据</td><td align="center">1</td></tr><tr><td align="center">smallint</td><td align="center">较小的数据</td><td align="center">2</td></tr><tr><td align="center">mediumint</td><td align="center">中等大小的数据</td><td align="center">3</td></tr><tr><td align="center">int</td><td align="center">标准的整数(常用)</td><td align="center">4</td></tr><tr><td align="center">bigint</td><td align="center">较大的数据</td><td align="center">8</td></tr><tr><td align="center">float</td><td align="center">浮点数</td><td align="center">4</td></tr><tr><td align="center">double</td><td align="center">浮点数(精度问题)</td><td align="center">8</td></tr><tr><td align="center">decimal</td><td align="center">字符串形式的浮点数(金融)</td><td align="center">9</td></tr></tbody></table><blockquote><p>字符串</p></blockquote><table><thead><tr><th align="center">名称</th><th align="center">特点</th><th align="center">长度范围</th></tr></thead><tbody><tr><td align="center">char</td><td align="center">字符串固定大小的</td><td align="center">0-255</td></tr><tr><td align="center">varchar</td><td align="center">可变字符串(常用)</td><td align="center">0-65535</td></tr><tr><td align="center">tinytext</td><td align="center">微型文本</td><td align="center">2^8-1</td></tr><tr><td align="center">text</td><td align="center">文本串</td><td align="center">2^16-1</td></tr></tbody></table><blockquote><p>时间日期</p></blockquote><table><thead><tr><th align="center">名称</th><th align="center">格式</th></tr></thead><tbody><tr><td align="center">date</td><td align="center">YYYY-MM-DD</td></tr><tr><td align="center">time</td><td align="center">HH:MM:SS</td></tr><tr><td align="center">datetime</td><td align="center">YYYY-MM-DD HH:MM:SS(常用)</td></tr><tr><td align="center">timestamp</td><td align="center">时间戳(1970.1.1到现在的毫秒数 常用)</td></tr></tbody></table><blockquote><p>null</p></blockquote><ul><li>没有值,未知</li><li>==注意,不要使用NULL进行运算</li></ul><h2 id="6-数据库的字段属性"><a href="#6-数据库的字段属性" class="headerlink" title="6.数据库的字段属性"></a>6.数据库的字段属性</h2><p>Unsigned:</p><ul><li>无符号的整数</li><li>声明了该列不能声明为负数</li></ul><p>zerofill:</p><ul><li>0填充</li><li>不足的位数,使用0来填充,int(3), 5-&gt;005</li></ul><p>自增:</p><pre><code>*  自动在是一条记录的基础上+1*  通常来设置唯一的主键 index,必须是整数类型*  可以自定义设置主键初始值和步长</code></pre><p>非空 NULL not null:</p><ul><li> 如果不给他赋值,就会报错</li></ul><p>默认:</p><ul><li>设置默认的值</li></ul><p><strong>规范</strong></p><p>每个表都必须存在以下五个字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id 主键</span><br><span class="line">&#96;version&#96; 乐观锁</span><br><span class="line">is_delete 伪删除</span><br><span class="line">gmt_create 创建时间</span><br><span class="line">gmt_update 修改时间</span><br></pre></td></tr></table></figure><h2 id="7-创建数据表"><a href="#7-创建数据表" class="headerlink" title="7.创建数据表"></a>7.创建数据表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS &#96;student&#96;(</span><br><span class="line">   &#96;id&#96; INT(4) NOT NULL AUTO_INCREMENT COMMENT &#39;学号&#39;,</span><br><span class="line">   &#96;name&#96; VARCHAR(20) NOT NULL DEFAULT &#39;匿名&#39; COMMENT &#39;姓名&#39;,</span><br><span class="line">   &#96;pwd&#96; VARCHAR(20) NOT NULL DEFAULT &#39;123456&#39; COMMENT &#39;密码&#39;,</span><br><span class="line">   &#96;birthday&#96; DATETIME DEFAULT NULL COMMENT &#39;出事日期&#39;,</span><br><span class="line">   PRIMARY KEY ( &#96;id&#96; )</span><br><span class="line">)ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;</span><br><span class="line"></span><br><span class="line">CREATE TABLE [IF NOT EXISTS] &#96;表名&#96;(</span><br><span class="line">&#96;字段名&#96; 列类型 [属性] [索引] [注释],</span><br><span class="line">)[表类型][字符集设置][注释]</span><br></pre></td></tr></table></figure><blockquote><p>查看创建数据库的语句</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW CREATE DATABASE xxx;</span><br></pre></td></tr></table></figure><blockquote><p>查看创建数据表的定义语句</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">SHOW CREATE TABLE xxx;</span><br></pre></td></tr></table></figure><blockquote><p>显示表的结构</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DESC xxx;</span><br></pre></td></tr></table></figure><h2 id="8-数据库引擎的区别"><a href="#8-数据库引擎的区别" class="headerlink" title="8.数据库引擎的区别"></a>8.数据库引擎的区别</h2><ul><li>INNODB 默认使用</li><li>MYISAM 早些年使用的</li></ul><table><thead><tr><th align="center">特性</th><th align="center">MYISAM</th><th align="center">INNODB</th></tr></thead><tbody><tr><td align="center">事务支持</td><td align="center">不支持</td><td align="center">支持</td></tr><tr><td align="center">数据行锁定</td><td align="center">不支持</td><td align="center">支持</td></tr><tr><td align="center">外键约束</td><td align="center">不支持</td><td align="center">支持</td></tr><tr><td align="center">全文索引</td><td align="center">支持</td><td align="center">不支持</td></tr><tr><td align="center">表空间的大小</td><td align="center">较小</td><td align="center">较大，为两倍</td></tr></tbody></table><p>常规使用操作：</p><ul><li>MYISAM 节约空间，速度较快</li><li>INNODB 安全性高，事务的处理，多表多用户操作</li></ul><blockquote><p>在物理空间存在的位置</p></blockquote><p>所有数据库文件都存储在data目录下,一个文件夹对应一个数据库</p><p>本质还是文件存储</p><p>MySQL引擎在物理文件上的区别</p><ul><li>INNODB 在数据库表中只有一个*.frm文件，以及上级目录下的ibdata1文件</li><li>MYISAM 对应文件<ul><li>*.frm - 表结构的定义文件</li><li>*.MYD 数据文件(data)</li><li>*.MYI  索引文件(index)</li></ul></li></ul><blockquote><p>设置数据库的字符集</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CHARSET&#x3D;utf8</span><br></pre></td></tr></table></figure><h2 id="9-修改和删除表"><a href="#9-修改和删除表" class="headerlink" title="9.修改和删除表"></a>9.修改和删除表</h2><h3 id="1-修改表名"><a href="#1-修改表名" class="headerlink" title="1.修改表名"></a>1.修改表名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE student RENAME lorin</span><br></pre></td></tr></table></figure><h3 id="2-增加表的字段"><a href="#2-增加表的字段" class="headerlink" title="2.增加表的字段"></a>2.增加表的字段</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE student ADD age INT(11)</span><br></pre></td></tr></table></figure><h3 id="3-修改表的字段"><a href="#3-修改表的字段" class="headerlink" title="3.修改表的字段"></a>3.修改表的字段</h3><ul><li>重命名</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE student CHANGE age age1 int(1)</span><br></pre></td></tr></table></figure><ul><li>修改约束</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE student MODIFY age VARVHAR(11)</span><br></pre></td></tr></table></figure><h3 id="4-删除表的字段"><a href="#4-删除表的字段" class="headerlink" title="4.删除表的字段"></a>4.删除表的字段</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE student DROP age</span><br></pre></td></tr></table></figure><h3 id="5-删除表"><a href="#5-删除表" class="headerlink" title="5.删除表"></a>5.删除表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE IF EXISTS student</span><br></pre></td></tr></table></figure><p>注意:</p><ul><li>字段名为了安全使用``包裹起来</li><li>注释     –</li><li>sql关键字大小写不敏感,建议大家写小写</li></ul><h2 id="10-MySQL数据库管理"><a href="#10-MySQL数据库管理" class="headerlink" title="10.MySQL数据库管理"></a>10.MySQL数据库管理</h2><h3 id="1-外键-了解即可"><a href="#1-外键-了解即可" class="headerlink" title="1.外键(了解即可)"></a>1.外键(了解即可)</h3><blockquote><p>保证数据库的一致性,但是设置数据库层的外键会导致逻辑混乱.建议在应用层解决.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 定义外键key</span><br><span class="line">KEY &#96;FK_gradeid&#96; (&#96;gradeid&#96;)</span><br><span class="line">-- 给这个外键添加约束(执行引用) 到哪个表的那个键</span><br><span class="line">CONSTRAINT &#96;FK_gradeid&#96; FOREIGN KEY ( &#96;gradeid&#96; ) REFERENCES &#96;grade&#96; ( &#96;gradeid&#96; ) </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 创建好表折后添加</span><br><span class="line">ALTER TABLE &#96;student&#96; ADD CONSTRAINT &#96;FK_gradeid&#96; FOREIGN KEY(&#96;gradeid&#96;) REFERENCES &#96;grade&#96;(&#96;gradeid&#96;)</span><br></pre></td></tr></table></figure><h3 id="2-DML语言-全部记住"><a href="#2-DML语言-全部记住" class="headerlink" title="2.DML语言(全部记住)"></a>2.DML语言(全部记住)</h3><h4 id="1-添加"><a href="#1-添加" class="headerlink" title="1.添加"></a>1.添加</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- INSERT INTO 表名([字段1,字段2]) VALUES(&#39;值1&#39;,&#39;值2&#39;)</span><br><span class="line">-- 插入一条</span><br><span class="line">INSERT INTO &#96;grade&#96; (&#96;gradename&#96;) VALUES(&#39;大四&#39;)</span><br><span class="line">-- 插入多条</span><br><span class="line">INSERT INTO &#96;grade&#96; (&#96;gradename&#96;) VALUES(&#39;大一&#39;),(&#39;大三&#39;)</span><br></pre></td></tr></table></figure><h4 id="2-更新"><a href="#2-更新" class="headerlink" title="2.更新"></a>2.更新</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-- UPDATE &#96;表名&#96; SET &#96;字段&#96;&#x3D;&#39;codelorin&#39; WHERE 字段&#x3D;1;</span><br><span class="line">UPDATE &#96;grade&#96; SET &#96;gradename&#96;&#x3D;&#39;codelorin&#39; WHERE gradeid&#x3D;1;</span><br><span class="line">-- UPDATE &#96;表名&#96; SET &#96;字段&#96;&#x3D;&#39;codelorin&#39;</span><br><span class="line">-- 这样会修改所有的值</span><br><span class="line"></span><br><span class="line">-- 修改多个</span><br><span class="line">UPDATE &#96;grade&#96; SET &#96;gradename&#96;&#x3D;&#39;codelorin&#39;,xxx&#x3D;xxx WHERE gradeid&#x3D;1;</span><br></pre></td></tr></table></figure><p>where子句</p><table><thead><tr><th align="center">操作符</th><th align="center">含义</th><th align="center">范围</th><th align="center">结果</th></tr></thead><tbody><tr><td align="center">=</td><td align="center">等于</td><td align="center">5=6</td><td align="center">false</td></tr><tr><td align="center">&lt;&gt;或者!=</td><td align="center">不低于</td><td align="center">5&lt;&gt;6</td><td align="center">true</td></tr><tr><td align="center">&gt;</td><td align="center">大于</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">&lt;</td><td align="center">小于</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">&lt;=</td><td align="center">小于等于</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">BETWEEN…AND…</td><td align="center">在某个范围内</td><td align="center">[2,5]闭区间</td><td align="center"></td></tr><tr><td align="center">AND</td><td align="center">&amp;&amp;</td><td align="center">5&gt;1and 1&gt;2</td><td align="center">false</td></tr><tr><td align="center">OR</td><td align="center">||</td><td align="center"></td><td align="center"></td></tr></tbody></table><p>注意:</p><ul><li>数据库的列尽量带上``</li><li>条件没有指定会修改所有的列</li><li>value是一个具体的值也可以是变量(一般用于时间)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">UPDATE &#96;grade&#96; SET &#96;birthday&#96;&#x3D;CURRENT_TIME WHERE gradeid&#x3D;1;</span><br><span class="line">-- CURRENT_TIME当前时间</span><br></pre></td></tr></table></figure><h4 id="3-删除"><a href="#3-删除" class="headerlink" title="3.删除"></a>3.删除</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-- </span><br><span class="line">DELETE FROM grade WHERE gradeid &#x3D;1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 删除所有数据</span><br><span class="line">TRUNCATE &#96;grade&#96;</span><br><span class="line">TRUNCATE &#96;表名&#96;</span><br><span class="line">-- 删除所有数据</span><br><span class="line">DELETE FROM grade</span><br></pre></td></tr></table></figure><blockquote><p>DELETE和TRUNCATE的区别</p></blockquote><ul><li>相同点:都能删除数据,都不会删除表结构</li><li>不同点:<ul><li>TRUNCATE重新设置自增列 计数器会归零</li><li>TRUNCATE 不会影响事务</li></ul></li></ul><h3 id="3-DQL查询数据-最重点"><a href="#3-DQL查询数据-最重点" class="headerlink" title="3.DQL查询数据(最重点)"></a>3.DQL查询数据(最重点)</h3><blockquote><p>Data Query LANGUAGE: 数据库查询语言</p></blockquote><ul><li>最重要,频率最高的语句</li></ul><blockquote><p>完整语法</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select xxx from xxx</span><br><span class="line">join</span><br><span class="line">where</span><br><span class="line">group by 分组</span><br><span class="line">having过滤</span><br><span class="line">order by 排序</span><br><span class="line">limit限制</span><br></pre></td></tr></table></figure><h4 id="1-全部"><a href="#1-全部" class="headerlink" title="1.全部"></a>1.全部</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM &#96;subject&#96;</span><br></pre></td></tr></table></figure><h4 id="2-制定字段"><a href="#2-制定字段" class="headerlink" title="2.制定字段"></a>2.制定字段</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM &#96;subject&#96; WHERE &#96;gradeid&#96;&#x3D;1</span><br></pre></td></tr></table></figure><h4 id="3-别名"><a href="#3-别名" class="headerlink" title="3. 别名"></a>3. 别名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- AS起别名</span><br><span class="line">SELECT &#96;studentno&#96; AS 学号,&#96;loginpwd&#96; AS 密码 FROM student </span><br></pre></td></tr></table></figure><h4 id="4-函数"><a href="#4-函数" class="headerlink" title="4.函数"></a>4.函数</h4><blockquote><p>Concat 连接字符串</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT CONCAT(&#39;姓名:&#39;,studentname) AS 新名字 FROM student</span><br></pre></td></tr></table></figure><blockquote><p>系统版本</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT VERSION()</span><br></pre></td></tr></table></figure><h4 id="5-变量"><a href="#5-变量" class="headerlink" title="5.变量"></a>5.变量</h4><blockquote><p>自增</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT @@auto_increment_increment FROM &#96;grade&#96; </span><br></pre></td></tr></table></figure><h4 id="6-去重"><a href="#6-去重" class="headerlink" title="6.去重"></a>6.去重</h4><blockquote><p>distinct</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT &#96;studentno&#96; FROM result</span><br></pre></td></tr></table></figure><h4 id="7-where条件子句"><a href="#7-where条件子句" class="headerlink" title="7.where条件子句"></a>7.where条件子句</h4><blockquote><p>逻辑运算符</p></blockquote><ul><li>and &amp;&amp;</li><li>or ||</li><li>not !</li></ul><h4 id="8-模糊查询"><a href="#8-模糊查询" class="headerlink" title="8.模糊查询"></a>8.模糊查询</h4><blockquote><p>重点</p></blockquote><table><thead><tr><th align="center">运算符</th><th align="center">语法</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">IS NULL</td><td align="center">a is null</td><td align="center">如果操作符为NULL,结果为真</td></tr><tr><td align="center">IS NOT NULL</td><td align="center">a is not null</td><td align="center">如果操作符不为NULL,结果为真</td></tr><tr><td align="center">BETWEEN</td><td align="center">a between b and c</td><td align="center">若a在b和c之间,则结果为真</td></tr><tr><td align="center">LIKE</td><td align="center">a like b</td><td align="center">a相似匹配b</td></tr><tr><td align="center">IN</td><td align="center">a in(a1,a2)</td><td align="center">假设a在a1或a2其中的某一个,结果为真</td></tr></tbody></table><blockquote><p>like结合 %(匹配0到任意一个字符) _(一个字符)</p></blockquote><h4 id="9-联表查询"><a href="#9-联表查询" class="headerlink" title="9.联表查询"></a>9.联表查询</h4><blockquote><p>JOIN</p></blockquote><blockquote><p>on和where的区别</p><p>on 是关联条件,where 则是查询条件 </p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/20210429234339.png" alt="image-20210429234331783"></p><ul><li><p>inner join</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT s.studentno,&#96;studentname&#96;,&#96;subjectno&#96;,&#96;studentresult&#96; FROM student as s INNER JOIN result as r WHERE s.studentno&#x3D;r.studentno</span><br></pre></td></tr></table></figure></li><li><p>left join</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT s.studentno,&#96;studentname&#96;,&#96;subjectno&#96;,&#96;studentresult&#96; FROM student as s left JOIN result as r ON s.studentno&#x3D;r.studentno</span><br></pre></td></tr></table></figure></li><li><p>right join</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT s.studentno,&#96;studentname&#96;,&#96;subjectno&#96;,&#96;studentresult&#96; FROM student as s RIGHT JOIN result as r ON s.studentno&#x3D;r.studentno</span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th align="center">操作</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">inner join</td><td align="center">两个表的数据都可以拿到</td></tr><tr><td align="center">left join</td><td align="center">会从左表返回所有的值,即使右表中没有匹配</td></tr><tr><td align="center">right join</td><td align="center">会从右表中返回所有的值,即使左表没有匹配</td></tr></tbody></table><blockquote><p>没有匹配实践</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT s.studentno,&#96;studentname&#96;,&#96;subjectno&#96;,&#96;studentresult&#96; FROM student as s RIGHT JOIN result as r ON s.studentno&#x3D;r.studentno where studentresult is NULL</span><br></pre></td></tr></table></figure><h4 id="10-自连接"><a href="#10-自连接" class="headerlink" title="10.自连接"></a>10.自连接</h4><blockquote><p>自己的表和自己的表连接,核心:一张表拆为两张一样的表即可</p></blockquote><p>父类</p><table><thead><tr><th align="center">categoryid</th><th align="center">categoryname</th></tr></thead><tbody><tr><td align="center">2</td><td align="center">信息技术</td></tr><tr><td align="center">3</td><td align="center">软件开发</td></tr><tr><td align="center">5</td><td align="center">美术设计</td></tr></tbody></table><p>子类</p><table><thead><tr><th align="center">pid</th><th align="center">categoryid</th><th align="center">categoryname</th></tr></thead><tbody><tr><td align="center">3</td><td align="center">4</td><td align="center">数据库</td></tr><tr><td align="center">2</td><td align="center">8</td><td align="center">办公信息</td></tr><tr><td align="center">3</td><td align="center">6</td><td align="center">web开发</td></tr><tr><td align="center">5</td><td align="center">7</td><td align="center">pas技术</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT a.&#96;categoryname&#96; as &#39;father&#39;,b.&#96;categoryname&#96; as &#39;son&#39; FROM &#96;category&#96; as a,&#96;category&#96; as b WHERE a.&#96;categoryid&#96;&#x3D;b.&#96;pid&#96;</span><br></pre></td></tr></table></figure><h4 id="11-分页和排序"><a href="#11-分页和排序" class="headerlink" title="11.分页和排序"></a>11.分页和排序</h4><blockquote><p>order by ASC升序 DESC降序</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * from result ORDER BY studentresult DESC</span><br></pre></td></tr></table></figure><blockquote><p>分页 limit(下标,要几个)</p><p>规律: (n-1)*page size,page size</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT * from result</span><br><span class="line">LIMIT 0,2</span><br></pre></td></tr></table></figure><h4 id="12-子查询"><a href="#12-子查询" class="headerlink" title="12.子查询"></a>12.子查询</h4><blockquote><p>where这个值是计算出来的</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select xx from xx where xx&#x3D;(</span><br><span class="line">select xx form xx where </span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="13-函数"><a href="#13-函数" class="headerlink" title="13.函数"></a>13.函数</h4><blockquote><p>绝对值</p></blockquote><p>​    ABS()</p><blockquote><p>向上取整</p></blockquote><p>​    CEILING() </p><blockquote><p>向下取整</p></blockquote><p>​    FLOOR()</p><blockquote><p>0-1的随机数</p></blockquote><p>​    RAND()</p><blockquote><p>判断一个数的符号 负数返回-1正数返回1</p></blockquote><p>​    SIGN()</p><blockquote><p>字符串长度 </p></blockquote><p>​    CHAR_LENGTH()</p><blockquote><p>字符串拼接</p></blockquote><p>​    CONCAT()</p><blockquote><p>当前时间</p></blockquote><p> CURRENT_DATE()</p><blockquote><p>当前日期</p></blockquote><p>​    CURRENT()</p><blockquote><p>当前时间</p></blockquote><p>​    NOW()</p><blockquote><p>本地时间</p></blockquote><p>​    LOCALTIME()</p><h4 id="14-聚合函数"><a href="#14-聚合函数" class="headerlink" title="14.聚合函数"></a>14.聚合函数</h4><table><thead><tr><th align="center">函数名称</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">COUNT()</td><td align="center">计数</td></tr><tr><td align="center">SUM()</td><td align="center">求和</td></tr><tr><td align="center">AVG()</td><td align="center">平均值</td></tr><tr><td align="center">MAX()</td><td align="center">最大值</td></tr><tr><td align="center">MIN()</td><td align="center">最小值</td></tr></tbody></table><blockquote><p>count()</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">count(xx) 会忽略null</span><br><span class="line">count(*)  不会忽略null</span><br><span class="line">count(1)  不会忽略null</span><br></pre></td></tr></table></figure><blockquote><p>分组过滤 group by </p><p>having</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT studentno,SUM(studentresult) 总成绩 FROM &#96;result&#96; GROUP BY studentno HAVING studentno!&#x3D;1002</span><br></pre></td></tr></table></figure><h4 id="15-数据库级别的md5加密"><a href="#15-数据库级别的md5加密" class="headerlink" title="15.数据库级别的md5加密"></a>15.数据库级别的md5加密</h4><blockquote><p>md5(xxx)</p></blockquote><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>select 去重 字段 from 表</p><p>xx join 连接表 on 等值判断</p><p>where</p><p>group by 分组</p><p>having 过滤</p><p>order by 排序</p><p>limit 限制</p><h2 id="11-事务"><a href="#11-事务" class="headerlink" title="11.事务"></a>11.事务</h2><blockquote><p>要不都成功,要不都失败</p><p> 将一组sql放入一个批次中去执行</p></blockquote><blockquote><p>事务原则: ACID原则 脏读,幻读</p></blockquote><ul><li>原子性<ul><li>要不都成功,要不都失败</li></ul>A给B转账,B收到A转的钱,要不都成功,要不都失败</li><li>一致性<ul><li>事务前后的数据完整性要保持一致</li></ul>A有800元,B有200元无论怎么转,总价是1000</li><li>持久性<ul><li>事务结束后数据不随着外部原因导致数据丢失</li></ul>事务没有提交就恢复到原状,提交了就持久化到数据库</li><li>隔离性<ul><li>多个用户访问数据库时,为每个用户开启事务,事务间互相隔离</li></ul></li></ul><blockquote><p>隔离的问题</p></blockquote><p>脏读:</p><p>指一个事务读取了另外一个事务没有提交的数据</p><p>不可重复读:</p><p>一个事务多次读取结果不同,不一定是错误可能是场合不同</p><p>虚读(幻读):</p><p>一个事物读取别的事务插入的数据,导致前后读取不一致</p><p>事务在sql层面的操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">set autocommit &#x3D; -- 0 关闭事务</span><br><span class="line">set autocommit &#x3D; -- 1 开启事务(默认的)</span><br><span class="line"></span><br><span class="line">start transaction -- 标记一个事务的开启,一下执行的所有sql都在一个事务内</span><br><span class="line"></span><br><span class="line">insert xx</span><br><span class="line"></span><br><span class="line">-- 提交 持久化(成功)</span><br><span class="line">commit</span><br><span class="line">-- 回滚 回到原来的状态(失败)</span><br><span class="line">rollback</span><br><span class="line">-- 事务结束</span><br><span class="line">set autocommit &#x3D; 1 -- 自动提交</span><br><span class="line"></span><br><span class="line">-- 了解</span><br><span class="line">savepoint -- 设置一个事务的保存点</span><br><span class="line">rollback to savepoint -- 回滚到保存点</span><br><span class="line">release savepoint -- 撤销保存点</span><br></pre></td></tr></table></figure><h2 id="12-索引"><a href="#12-索引" class="headerlink" title="12.索引"></a>12.索引</h2><blockquote><p>索引是帮助mysql实现高效获取数据的<strong>数据结构</strong></p></blockquote><h3 id="1-索引的分类"><a href="#1-索引的分类" class="headerlink" title="1.索引的分类"></a>1.索引的分类</h3><ul><li>主键索引(PRIMARY KEY)<ul><li>唯一的标识,不可重复</li></ul></li><li>唯一索引(UNIQUE KEY)<ul><li>避免重复的列出现,唯一索引可以重复,多个列标识位</li></ul></li><li>常规索引(KEY/INDEX)<ul><li>默认的,index key关键字来设定</li></ul></li><li>全文索引(FullText)<ul><li>快速定位数据</li></ul></li></ul><p>用法:</p><p>索引名(列名)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table xxx add fulltext index &#96;studentName&#96; (&#96;studentName&#96;)</span><br></pre></td></tr></table></figure><h3 id="2-分析sql执行状况"><a href="#2-分析sql执行状况" class="headerlink" title="2.分析sql执行状况"></a>2.分析sql执行状况</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">explain xxxsql语句</span><br><span class="line">explain select * from xx where match(studentName) against(&#39;liu&#39;)</span><br></pre></td></tr></table></figure><blockquote><p>插入100万条数据测试</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE &#96;app_user&#96; (</span><br><span class="line">&#96;id&#96; BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT,</span><br><span class="line">&#96;name&#96; VARCHAR(50) DEFAULT &#39;&#39; COMMENT &#39;用户昵称&#39;,</span><br><span class="line">&#96;email&#96; VARCHAR(50) NOT NULL COMMENT &#39;用户邮箱&#39;,</span><br><span class="line">&#96;phone&#96; VARCHAR(20) DEFAULT &#39;&#39; COMMENT &#39;手机号&#39;,</span><br><span class="line">&#96;gender&#96; TINYINT(4) UNSIGNED DEFAULT 0 COMMENT &#39;性别（0：男;1:女）&#39;,</span><br><span class="line">&#96;password&#96; VARCHAR(100) NOT NULL COMMENT &#39;密码&#39;,</span><br><span class="line">&#96;age&#96; TINYINT(4) DEFAULT 0  COMMENT &#39;年龄&#39;,</span><br><span class="line">&#96;create_time&#96; DATETIME DEFAULT CURRENT_TIMESTAMP,</span><br><span class="line">&#96;update_time&#96; TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,</span><br><span class="line">PRIMARY KEY (&#96;id&#96;)</span><br><span class="line">) ENGINE&#x3D;INNODB DEFAULT CHARSET&#x3D;utf8 COMMENT &#x3D; &#39;app用户表&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line">CREATE FUNCTION mock_data()</span><br><span class="line">RETURNS INT</span><br><span class="line">BEGIN</span><br><span class="line">DECLARE num INT DEFAULT 1000000;</span><br><span class="line">DECLARE i INT DEFAULT 0;</span><br><span class="line">WHILE i&lt;num DO</span><br><span class="line">INSERT INTO &#96;app_user&#96;(&#96;name&#96;,&#96;email&#96;,&#96;phone&#96;,&#96;gender&#96;,&#96;PASSWORD&#96;,&#96;age&#96;)VALUES(CONCAT(&#39;用户&#39;,i),&#39;19224305@qq.com&#39;,123456789,FLOOR(RAND()*2),UUID(),FLOOR(RAND()*100));</span><br><span class="line">SET i&#x3D;i+1;</span><br><span class="line">END WHILE;</span><br><span class="line">RETURN i;</span><br><span class="line">END;</span><br><span class="line"></span><br><span class="line">SELECT mock_data() -- 执行此函数 生成一百万条数据</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 创建索引查看时间差别,数据结构yyds</span><br><span class="line">SELECT * FROM app_user WHERE &#96;name&#96;&#x3D;&#39;用户999999&#39;</span><br><span class="line">CREATE INDEX id_app_user_name ON app_user(&#96;name&#96;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>索引不是越多越好</li><li>不要对经常变动的数据增加索引</li><li>小数据的表不需要加索引</li><li>索引一般常用来查询的字段上</li></ul><blockquote><p>索引的数据结构</p></blockquote><p>Btree: InnoDB默认的数据类型</p><h2 id="13-权限管理"><a href="#13-权限管理" class="headerlink" title="13.权限管理"></a>13.权限管理</h2><h3 id="1-用户管理"><a href="#1-用户管理" class="headerlink" title="1.用户管理"></a>1.用户管理</h3><blockquote><p>本质是修改mysql下的user表</p></blockquote><ul><li>创建</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER lorin IDENTIFIED BY &#39;123456&#39;</span><br></pre></td></tr></table></figure><ul><li>修改当前用户</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set password &#x3D; password(&#39;123456&#39;)</span><br></pre></td></tr></table></figure><ul><li>修改制定用户</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set password for lorin&#x3D;password(&#39;123456&#39;)</span><br></pre></td></tr></table></figure><ul><li>修改用户名</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename user xxx to xxxx</span><br></pre></td></tr></table></figure><ul><li>授予用户全部权限</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO xxx</span><br></pre></td></tr></table></figure><ul><li>查询权限</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW GRANTS FOR root @localhost</span><br></pre></td></tr></table></figure><ul><li>撤销权限</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REMOVE ALL PRIVILEGES ON *.* FROM xxx</span><br></pre></td></tr></table></figure><h2 id="14-数据库的备份"><a href="#14-数据库的备份" class="headerlink" title="14.数据库的备份"></a>14.数据库的备份</h2><blockquote><p>保证重要的数据不丢失</p><p>数据转移</p></blockquote><p>数据库命令行备份</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -hlocalhost -uroot -p123456 数据库名称 表 &gt; D:&#x2F;1.sql</span><br></pre></td></tr></table></figure><p>数据库加载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">source d:&#x2F;1.sql</span><br><span class="line">mysql -uroot -p123456 库名&lt;备份文件</span><br></pre></td></tr></table></figure><h2 id="15-数据库的设计"><a href="#15-数据库的设计" class="headerlink" title="15.数据库的设计"></a>15.数据库的设计</h2><blockquote><p>当数据库比较复杂的时候</p></blockquote><p>设计数据库步骤:</p><ul><li>收集信息,分析需求<ul><li>用户表(用户登录注销,用户个人信息,写博客,创建分类)</li><li>分类表(文章分类,谁创建的)</li><li>文章表(文章的信息)</li><li>友链表(友链信息)</li></ul></li><li>标识实体(把需求落实到每个字段)</li><li>标识实体之间的关系<ul><li>写博客:user-&gt;blog</li><li>创建分类: user-&gt;category</li><li>关注:user-&gt;user</li><li>友链: links</li><li>评论: user-&gt;user-&gt;blog</li></ul></li></ul><h2 id="16-三大范式"><a href="#16-三大范式" class="headerlink" title="16.三大范式"></a>16.三大范式</h2><blockquote><p>数据规范化</p></blockquote><h3 id="1-第一范式"><a href="#1-第一范式" class="headerlink" title="1.第一范式"></a>1.第一范式</h3><blockquote><p>原子性:要求每一列都是不可分割的最小原子数据项</p></blockquote><h3 id="2-第二范式"><a href="#2-第二范式" class="headerlink" title="2.第二范式"></a>2.第二范式</h3><blockquote><p>前提满足第一范式</p><p>需要保证数据库的每一列都和主键相关,而不能只和主键的某一部分相关</p><p>每张表只做一件事</p></blockquote><h3 id="3-第三范式"><a href="#3-第三范式" class="headerlink" title="3.第三范式"></a>3.第三范式</h3><blockquote><p>满足第一,二范式</p><p>每一列数据都和主键直接相关而不能间接相关</p></blockquote><p>关联查询的表不能超过三张表</p><ul><li>数据库性能在某些情况更加重要</li><li>规范性</li><li>故意给表增加一些冗余的字段(多表-&gt;单表)</li><li>故意增加一些计算列(索引)</li></ul><h2 id="17-JDBC-重点"><a href="#17-JDBC-重点" class="headerlink" title="17.JDBC(重点)"></a>17.JDBC(重点)</h2><blockquote><p>数据库驱动</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/imgimgimage-20210430135328117.png" alt="image-20210430135328117"></p><h3 id="1-导入数据库驱动"><a href="#1-导入数据库驱动" class="headerlink" title="1.导入数据库驱动"></a>1.导入数据库驱动</h3><p>新建lib目录</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img@master/img/xxx.1ncl3xyml8e8.png" alt="image-20210430163719364"></p><p>可以展开即是导入成功</p><h3 id="2-代码demo"><a href="#2-代码demo" class="headerlink" title="2.代码demo"></a>2.代码demo</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codeloirn.jdbc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/1/30 16:40</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException </span>&#123;</span><br><span class="line">        <span class="comment">//1.加载驱动(固定写法)</span></span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.用户信息和url</span></span><br><span class="line">        String url = <span class="string">&quot;jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&quot;</span>;</span><br><span class="line">        <span class="comment">//3.连接成功,数据库对象</span></span><br><span class="line">        String username = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        String password = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        Connection connection = DriverManager.getConnection(url, username, password);</span><br><span class="line">        <span class="comment">//4.执行sql的对象</span></span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        <span class="comment">//5.执行sql的对象去执行sql,如果存在结果则返回</span></span><br><span class="line">        String sql = <span class="string">&quot;SELECT * FROM users&quot;</span>;</span><br><span class="line">        ResultSet resultSet = statement.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;id=&quot;</span> + resultSet.getObject(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;NAME=&quot;</span> + resultSet.getObject(<span class="string">&quot;NAME&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;PASSWORD=&quot;</span> + resultSet.getObject(<span class="string">&quot;PASSWORD&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;email=&quot;</span> + resultSet.getObject(<span class="string">&quot;email&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;birthday=&quot;</span> + resultSet.getObject(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//6.释放连接</span></span><br><span class="line">        resultSet.close();</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>connection</p></blockquote><p>代表数据库</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">connection.setAutoCommit();<span class="comment">//设置自动提交</span></span><br><span class="line">connection.commit();<span class="comment">//事务提交  </span></span><br><span class="line">connection.rollback();<span class="comment">//事务回滚 </span></span><br></pre></td></tr></table></figure><blockquote><p>statement</p></blockquote><p>执行sql</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">statement.executeQuery();<span class="comment">//查询操作返回ResultSet</span></span><br><span class="line">statement.execute();<span class="comment">//执行任何sql</span></span><br><span class="line">statement.executeUpdate();<span class="comment">//更新插入删除,返回收到影响的行数</span></span><br></pre></td></tr></table></figure><blockquote><p>ResultSet</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">resultset.getObjest();<span class="comment">//不知道类型</span></span><br><span class="line"></span><br><span class="line">resultset.getString();<span class="comment">//知道类型</span></span><br><span class="line">resultset.getDate();</span><br></pre></td></tr></table></figure><blockquote><p>close 释放连接</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">resultSet.close();</span><br><span class="line">statement.close();</span><br><span class="line">connection.close();</span><br></pre></td></tr></table></figure><h3 id="3-CURD"><a href="#3-CURD" class="headerlink" title="3.CURD"></a>3.CURD</h3><h4 id="1-create"><a href="#1-create" class="headerlink" title="1.create"></a>1.create</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Statement statement = connection.createStatement();</span><br><span class="line">String sql = <span class="string">&quot;insert into user() values()&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> num = statement.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;success!&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-update"><a href="#2-update" class="headerlink" title="2.update"></a>2.update</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Statement statement = connection.createStatement();</span><br><span class="line">String sql = <span class="string">&quot;update user set name =&#x27;&#x27; where name =&#x27;&#x27;&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> num = statement.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;success!&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-read"><a href="#3-read" class="headerlink" title="3.read"></a>3.read</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Statement statement = connection.createStatement();</span><br><span class="line">String sql = <span class="string">&quot;SELECT * FROM users&quot;</span>;</span><br><span class="line">ResultSet resultSet = statement.executeQuery(sql);</span><br><span class="line"><span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="4-delete"><a href="#4-delete" class="headerlink" title="4.delete"></a>4.delete</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Statement statement = connection.createStatement();</span><br><span class="line">String sql = <span class="string">&quot;delete from user where id=1&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> num = statement.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;success!&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-提取工具类"><a href="#4-提取工具类" class="headerlink" title="4.提取工具类"></a>4.提取工具类</h3><blockquote><p>properties</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">root</span></span><br></pre></td></tr></table></figure><blockquote><p>Utils</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.codeloirn.jdbc2.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String username = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream inputStream = JdbcUtils.class.getClassLoader().getResourceAsStream(<span class="string">&quot;db.properties&quot;</span>);</span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            properties.load(inputStream);</span><br><span class="line">            driver = properties.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">            url = properties.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">            username = properties.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">            password = properties.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">            Class.forName(driver);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException | ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(url, username, password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(Connection conn, Statement st, ResultSet rs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                rs.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (st != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                st.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                conn.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>main</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.codeloirn.jdbc2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codeloirn.jdbc2.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcStudy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        Statement st = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line">            st = conn.createStatement();</span><br><span class="line">            String sql = <span class="string">&quot;INSERT users VALUES(7,&#x27;codelorin&#x27;,123,&#x27;admin@l.cn&#x27;,&#x27;1980-12-04&#x27;)&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> i = st.executeUpdate(sql);</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;success!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn, st, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-sql注入"><a href="#5-sql注入" class="headerlink" title="5.sql注入"></a>5.sql注入</h3><blockquote><p>安全问题</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codeloirn.jdbc2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codeloirn.jdbc2.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcStudy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String username = <span class="string">&quot;&#x27;or&#x27; 1=1&quot;</span>; <span class="comment">//&#x27; or &#x27; 1=1 &#x27;-- &#x27;</span></span><br><span class="line">        String password = <span class="string">&quot;&#x27;or&#x27; 1=1&quot;</span>;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        Statement st = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line">            st = conn.createStatement();</span><br><span class="line">            String sql = <span class="string">&quot;SELECT * FROM `users` WHERE `name`=&#x27;&quot;</span> + username + <span class="string">&quot;&#x27; and `password` =&#x27;&quot;</span> + password + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">            ResultSet resultSet = st.executeQuery(sql);</span><br><span class="line">            <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">                System.out.println(resultSet.getObject(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">                System.out.println(resultSet.getObject(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn, st, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>由于sql的逻辑运算符的原因,存在sql注入漏洞,会被攻击导致数据泄露.</p></blockquote><h3 id="6-解决sql注入问题"><a href="#6-解决sql注入问题" class="headerlink" title="6.解决sql注入问题"></a>6.解决sql注入问题</h3><blockquote><p>增删改</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codeloirn.jdbc3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codeloirn.jdbc2.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//st</span></span><br><span class="line">        PreparedStatement st = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">//预编译</span></span><br><span class="line">            String sql = <span class="string">&quot;INSERT INTO users(id,`name`,`password`,`email`,`birthday`) VALUES(?,?,?,?,?)&quot;</span>;</span><br><span class="line">            st = conn.prepareStatement(sql);</span><br><span class="line">            st.setInt(<span class="number">1</span>, <span class="number">10</span>);</span><br><span class="line">            st.setString(<span class="number">2</span>, <span class="string">&quot;lorin&quot;</span>);</span><br><span class="line">            st.setString(<span class="number">3</span>, <span class="string">&quot;123321&quot;</span>);</span><br><span class="line">            st.setString(<span class="number">4</span>, <span class="string">&quot;codelorin@163.com&quot;</span>);</span><br><span class="line">            st.setDate(<span class="number">5</span>, <span class="keyword">new</span> java.sql.Date(<span class="keyword">new</span> Date().getTime()));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> i = st.executeUpdate();</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;success!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn, st, <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>查</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codeloirn.jdbc2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codeloirn.jdbc2.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcStudy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String username = <span class="string">&quot;codelorin&quot;</span>;</span><br><span class="line">        String password = <span class="string">&quot;123&quot;</span>;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//st</span></span><br><span class="line">        PreparedStatement st = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line"><span class="comment">//预编译</span></span><br><span class="line">            String sql = <span class="string">&quot;SELECT * FROM `users` WHERE `name`=? and `password`=?&quot;</span>;</span><br><span class="line">            st = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">            st.setString(<span class="number">1</span>, username);</span><br><span class="line">            st.setString(<span class="number">2</span>, password);</span><br><span class="line">            rs = st.executeQuery();</span><br><span class="line">            <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">                System.out.println(rs.getObject(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">                System.out.println(rs.getObject(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn, st, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="18-事务问题"><a href="#18-事务问题" class="headerlink" title="18.事务问题"></a>18.事务问题</h2><blockquote><p>ACID原则</p></blockquote><p>原子性:要不都完成,要不都失败</p><p>一致性:总数不变</p><p>隔离性:多个进程互补干扰</p><p>持久性:一旦提交不可逆,持久化到数据库了</p><blockquote><p>隔离性的问题</p></blockquote><p>脏读:一个事务读取了另外一个没有提交的事务</p><p>不可重复读:在同一个事务内,重复读取表中的数据,表数据发生了改变</p><p>虚读(幻读):在一个事务内,读取到了别人插入的数据,导致前后读出来的结果不一致</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codeloirn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codeloirn.jdbc2.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/4/30 23:56</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TransactionDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement st = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">//关闭自动提交,开启事务</span></span><br><span class="line">            conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">            String sql1 = <span class="string">&quot;update account set money = money-100 where name =&#x27;A&#x27;&quot;</span>;</span><br><span class="line">            st = conn.prepareStatement(sql1);</span><br><span class="line">            st.executeUpdate();</span><br><span class="line">            String sql2 = <span class="string">&quot;update account set money = money+100 where name =&#x27;B&#x27;&quot;</span>;</span><br><span class="line">            st = conn.prepareStatement(sql2);</span><br><span class="line">            st.executeUpdate();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//业务完成,提交事务</span></span><br><span class="line">            conn.commit();</span><br><span class="line">            System.out.println(<span class="string">&quot;success&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//失败回滚</span></span><br><span class="line">                conn.rollback();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e1) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn, st, <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="19-数据库连接池"><a href="#19-数据库连接池" class="headerlink" title="19.数据库连接池"></a>19.数据库连接池</h2><blockquote><p>数据库连接完毕,执行完毕,释放</p><p>连接释放十分浪费资源</p></blockquote><p><strong>池化技术:准备一些预先的资源,过来就连接预先准备好的</strong></p><p>最小连接数:10</p><p>最大连接数:15</p><p>等待超时:100ms</p><p>编写连接池,实现DataSource接口</p><p>DBCP</p><p>C3P0</p><p>Druid:阿里巴巴</p><p>使用这些数据库连接池,我们就不需要编写连接数据库的代码了!</p><blockquote><p>DBCP</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#连接设置</span></span><br><span class="line"><span class="attr">driverClassName</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">root</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!-- 初始化连接 --</span></span><br><span class="line"><span class="attr">initialSize</span>=<span class="string">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#最大连接数量</span></span><br><span class="line"><span class="attr">maxActive</span>=<span class="string">50</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!-- 最大空闲连接 --</span></span><br><span class="line"><span class="attr">maxIdle</span>=<span class="string">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!-- 最小空闲连接 --</span></span><br><span class="line"><span class="attr">minIdle</span>=<span class="string">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!-- 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 --</span></span><br><span class="line"><span class="attr">maxWait</span>=<span class="string">60000</span></span><br><span class="line"><span class="comment">#JDBC驱动建立连接时附带的连接属性属性的格式必须为这样：【属性名=property;】</span></span><br><span class="line"><span class="comment">#注意：user 与 password 两个属性会被明确地传递，因此这里不需要包含他们。</span></span><br><span class="line"><span class="attr">connectionProperties</span>=<span class="string">useUnicode=true;characterEncoding=UTF8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#指定由连接池所创建的连接的自动提交（auto-commit）状态。</span></span><br><span class="line"><span class="attr">defaultAutoCommit</span>=<span class="string">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#driver default 指定由连接池所创建的连接的只读（read-only）状态。</span></span><br><span class="line"><span class="comment">#如果没有设置该值，则“setReadOnly”方法将不被调用。（某些驱动并不支持只读模式，如：Informix）</span></span><br><span class="line"><span class="attr">defaultReadOnly</span>=<span class="string"></span></span><br><span class="line"></span><br><span class="line"><span class="comment">#driver default 指定由连接池所创建的连接的事务级别（TransactionIsolation）。</span></span><br><span class="line"><span class="comment">#可用值为下列之一：（详情可见javadoc。）NONE,READ_UNCOMMITTED, READ_COMMITTED, REPEATABLE_READ, SERIALIZABLE</span></span><br><span class="line"><span class="attr">defaultTransactionIsolation</span>=<span class="string">READ_UNCOMMITTED</span></span><br></pre></td></tr></table></figure><blockquote><p>Dbcp工具类实现</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codeloirn.dbcp.utils;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbcp.BasicDataSourceFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/4/30 17:41</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtilsDbcp</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DataSource dataSource = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream inputStream = JdbcUtilsDbcp.class.getClassLoader().getResourceAsStream(<span class="string">&quot;dbcpconfig.properties&quot;</span>);</span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            properties.load(inputStream);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//创建数据源</span></span><br><span class="line">            dataSource = BasicDataSourceFactory.createDataSource(properties);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(Connection conn, Statement st, ResultSet rs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                rs.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (st != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                st.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                conn.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>demo</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codeloirn.dbcp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codeloirn.dbcp.utils.JdbcUtilsDbcp;</span><br><span class="line"><span class="keyword">import</span> com.codeloirn.jdbc2.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/4/30 20:05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement st = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtilsDbcp.getConnection();</span><br><span class="line">            String sql = <span class="string">&quot;INSERT INTO users(id,`name`,`password`,`email`,`birthday`) VALUES(?,?,?,?,?)&quot;</span>;</span><br><span class="line">            st = conn.prepareStatement(sql);</span><br><span class="line">            st.setInt(<span class="number">1</span>, <span class="number">12</span>);</span><br><span class="line">            st.setString(<span class="number">2</span>, <span class="string">&quot;lorin111&quot;</span>);</span><br><span class="line">            st.setString(<span class="number">3</span>, <span class="string">&quot;123321&quot;</span>);</span><br><span class="line">            st.setString(<span class="number">4</span>, <span class="string">&quot;codelorin@163.com&quot;</span>);</span><br><span class="line">            st.setDate(<span class="number">5</span>, <span class="keyword">new</span> java.sql.Date(<span class="keyword">new</span> Date().getTime()));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> i = st.executeUpdate();</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;success!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtilsDbcp.release(conn, st, <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> Mysql </tag>
            
            <tag> JDBC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式</title>
      <link href="posts/4dc97b6bc1ae/"/>
      <url>posts/4dc97b6bc1ae/</url>
      
        <content type="html"><![CDATA[<h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><h2 id="1-定义re对象"><a href="#1-定义re对象" class="headerlink" title="1.定义re对象"></a>1.定义re对象</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;正则表达式&quot;</span>,<span class="string">&quot;匹配模式&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/正则表达式/</span>匹配模式</span><br><span class="line">i 忽略大小写</span><br><span class="line">g 全局匹配</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210427113220376.png" alt="image-20210427113220376"></p><h2 id="2-匹配"><a href="#2-匹配" class="headerlink" title="2.匹配"></a>2.匹配</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[^]除了</span><br><span class="line">/^/开头</span><br><span class="line">/$/结尾</span><br></pre></td></tr></table></figure><h2 id="3-方法"><a href="#3-方法" class="headerlink" title="3.方法"></a>3.方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">正则表达式的方法:</span><br><span class="line">test()</span><br><span class="line">使用这个方法可以用来检查一个字符串是否符合正则表达式的规则</span><br><span class="line">如果符合则返回<span class="literal">true</span>,否则返回fa1se</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">split</span><br><span class="line">replace</span><br><span class="line">search</span><br><span class="line">match</span><br></pre></td></tr></table></figure><h2 id="4-练习"><a href="#4-练习" class="headerlink" title="4.练习"></a>4.练习</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">手机号</span><br><span class="line"><span class="number">13467891234</span></span><br><span class="line">/^<span class="number">1</span>[<span class="number">3</span>-<span class="number">9</span>][<span class="number">0</span>-<span class="number">9</span>]&#123;<span class="number">9</span>&#125;$/</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">/^\s*|\s*$/</span><br><span class="line">开头或结尾的空格</span><br><span class="line"></span><br><span class="line">邮箱</span><br><span class="line">^\w&#123;<span class="number">3</span>,&#125;(\.\w+)*@[A-z0-<span class="number">9</span>]+(\[A-z]&#123;<span class="number">2</span>,<span class="number">5</span>&#125;)&#123;<span class="number">1</span>,<span class="number">2</span>&#125;$</span><br></pre></td></tr></table></figure><h2 id="5-查询图"><a href="#5-查询图" class="headerlink" title="5.查询图"></a>5.查询图</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210224182118499.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210224182307245.png" alt="image-20210224182307245"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210224183645544.png" alt="image-20210224183645544"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210224184729165.png" alt="image-20210224184729165"></p>]]></content>
      
      
      <categories>
          
          <category> 编程技能 </category>
          
          <category> 正则表达式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程技能 </tag>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java多线程</title>
      <link href="posts/def272cea73f/"/>
      <url>posts/def272cea73f/</url>
      
        <content type="html"><![CDATA[<h1 id="java多线程"><a href="#java多线程" class="headerlink" title="java多线程"></a>java多线程</h1><h2 id="一-多线程-多进程"><a href="#一-多线程-多进程" class="headerlink" title="一.多线程,多进程"></a>一.多线程,多进程</h2><blockquote><p>一个进程可以有多个线程</p></blockquote><h2 id="二-线程的创建"><a href="#二-线程的创建" class="headerlink" title="二.线程的创建"></a>二.线程的创建</h2><h3 id="1-Thread-class"><a href="#1-Thread-class" class="headerlink" title="1.Thread class"></a>1.Thread class</h3><p>(继承自Thread类 重点)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorni.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在看代码&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TestThread testThread = <span class="keyword">new</span> TestThread();</span><br><span class="line">        testThread.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在学习多线程&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-Runnable接口"><a href="#2-Runnable接口" class="headerlink" title="2.Runnable接口"></a>2.Runnable接口</h3><p>(实现 Runnable 接口 重点)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorni.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">200</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在看代码&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TestThread testThread = <span class="keyword">new</span> TestThread();</span><br><span class="line">        <span class="comment">//通过线程对象开启我们的线程,代理</span></span><br><span class="line"><span class="comment">//        Thread thread = new Thread(testThread);</span></span><br><span class="line"><span class="comment">//        thread.start();</span></span><br><span class="line">        <span class="comment">//等价于下面</span></span><br><span class="line">        <span class="keyword">new</span> Thread(testThread).start();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在学习多线程&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-Callable-接口"><a href="#3-Callable-接口" class="headerlink" title="3.Callable 接口"></a>3.Callable 接口</h3><p>(实现 Callable接口 了解)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorni.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Future;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread</span> <span class="keyword">implements</span> <span class="title">Callable</span>&lt;<span class="title">Boolean</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TestThread testThread = <span class="keyword">new</span> TestThread();</span><br><span class="line"><span class="comment">//执行创建任务</span></span><br><span class="line">        ExecutorService ser = Executors.newFixedThreadPool(<span class="number">3</span>);</span><br><span class="line"><span class="comment">//提交执行</span></span><br><span class="line">        Future&lt;Boolean&gt; result = ser.submit(testThread);</span><br><span class="line">        <span class="comment">//获取结果</span></span><br><span class="line">        <span class="keyword">boolean</span> r1 = result.get();</span><br><span class="line">        <span class="comment">//结束</span></span><br><span class="line">        ser.shutdownNow();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="三-并发问题"><a href="#三-并发问题" class="headerlink" title="三.并发问题"></a>三.并发问题</h2><h3 id="1-初时并发问题"><a href="#1-初时并发问题" class="headerlink" title="1.初时并发问题"></a>1.初时并发问题</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorni.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> ticketNums = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (ticketNums &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">200</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;拿到了第&quot;</span> + ticketNums-- + <span class="string">&quot;张票&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TestThread testThread = <span class="keyword">new</span> TestThread();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(testThread, <span class="string">&quot;小明&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(testThread, <span class="string">&quot;小李&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(testThread, <span class="string">&quot;小张&quot;</span>).start();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//多个线程操作同一个资源,线程不安全,数据紊乱</span></span><br></pre></td></tr></table></figure><h2 id="四-静态代理模式"><a href="#四-静态代理模式" class="headerlink" title="四.静态代理模式"></a>四.静态代理模式</h2><ol><li>真实对象和代理对象都要实现同一个接口</li><li>代理对象要代理真实对象</li><li>代理对象可以做真实对象做不了的事情</li><li>真实对象专注做自己的事情</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorni.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticProxy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MarryProxy marryProxy = <span class="keyword">new</span> MarryProxy(<span class="keyword">new</span> You());</span><br><span class="line">        marryProxy.happyMarry();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Marry</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">happyMarry</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">You</span> <span class="keyword">implements</span> <span class="title">Marry</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">happyMarry</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;happy marry!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MarryProxy</span> <span class="keyword">implements</span> <span class="title">Marry</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Marry target;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MarryProxy</span><span class="params">(Marry target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.target = target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">happyMarry</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        before();</span><br><span class="line">        <span class="keyword">this</span>.target.happyMarry();</span><br><span class="line">        after();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;before&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;after&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="五-Lambda表达式"><a href="#五-Lambda表达式" class="headerlink" title="五.Lambda表达式"></a>五.Lambda表达式</h2><ul><li>避免匿名内部类定义过多</li><li>可以让你的代码开起来很简洁</li><li>去掉了一堆没有意义的代码</li></ul><blockquote><p>接口只包含一个抽象方法,那么它就是函数式接口</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorni.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestLambda</span> </span>&#123;</span><br><span class="line">    <span class="comment">//静态内部类</span></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Like2</span> <span class="keyword">implements</span> <span class="title">ILike</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;i like lambda2!!!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Like like = <span class="keyword">new</span> Like();</span><br><span class="line">        like.lambda();</span><br><span class="line"></span><br><span class="line">        Like2 like2 = <span class="keyword">new</span> Like2();</span><br><span class="line">        like2.lambda();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//局部内部类</span></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Like3</span> <span class="keyword">implements</span> <span class="title">ILike</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;i like lambda3!!!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Like3 like3 = <span class="keyword">new</span> Like3();</span><br><span class="line">        like3.lambda();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//匿名内部类</span></span><br><span class="line">       ILike like4 = <span class="keyword">new</span> ILike() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;i like lambda4!!!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">       like4.lambda();</span><br><span class="line"></span><br><span class="line"><span class="comment">//        lambda</span></span><br><span class="line">        ILike like5 = () -&gt; &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;i like lambda3!!!&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        like5.lambda();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">ILike</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Like</span> <span class="keyword">implements</span> <span class="title">ILike</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;i like lambda!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
          <category> 多线程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>less学习</title>
      <link href="posts/b12955a527b0/"/>
      <url>posts/b12955a527b0/</url>
      
        <content type="html"><![CDATA[<h1 id="less学习"><a href="#less学习" class="headerlink" title="less学习"></a>less学习</h1><h2 id="一-变量"><a href="#一-变量" class="headerlink" title="一.变量"></a>一.变量</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">--<span class="attribute">color</span>:<span class="number">#bfa</span>; //定义</span><br><span class="line"><span class="selector-tag">var</span>(--<span class="attribute">color</span>) //使用</span><br><span class="line">calc()计算函数</span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;./index.css&quot;</span>;</span><br><span class="line">上面为css支持的</span><br></pre></td></tr></table></figure><h2 id="二-入门"><a href="#二-入门" class="headerlink" title="二.入门"></a>二.入门</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@变量名:<span class="selector-tag">xxx</span>; <span class="comment">//定义</span></span><br><span class="line">@变量名 <span class="comment">//使用</span></span><br><span class="line"></span><br><span class="line">可以嵌套选择器 子代用&gt; <span class="selector-tag">&amp;</span>表示外层的父级元素</span><br><span class="line"></span><br><span class="line">作为类名或者一部分值使用需要@&#123;&#125;</span><br><span class="line"></span><br><span class="line">$color 可以去属性对应的值</span><br></pre></td></tr></table></figure><h2 id="三-进阶"><a href="#三-进阶" class="headerlink" title="三.进阶"></a>三.进阶</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">继承: <span class="selector-class">.p2</span><span class="selector-class">.extend</span>(.p1)</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p1</span>() 直接引用<span class="selector-tag">p1</span>的样式</span><br><span class="line"></span><br><span class="line">函数</span><br><span class="line">使用类选择器可以加个()创建了一个类似于函数(mixins) 直接使用<span class="selector-class">.p1</span>使用</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p1</span>(<span class="variable">@w</span>)</span><br><span class="line">可以传送参数</span><br></pre></td></tr></table></figure><h2 id="四-内置函数"><a href="#四-内置函数" class="headerlink" title="四.内置函数"></a>四.内置函数</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">darken(<span class="selector-id">#bfa</span>,<span class="number">10%</span>) 比传入的颜色深一定比例</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> css </category>
          
          <category> less </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> css </tag>
            
            <tag> less </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flask框架快速入门</title>
      <link href="posts/93ceb07fd09c/"/>
      <url>posts/93ceb07fd09c/</url>
      
        <content type="html"><![CDATA[<h1 id="flask框架"><a href="#flask框架" class="headerlink" title="flask框架"></a>flask框架</h1><h2 id="一-入门"><a href="#一-入门" class="headerlink" title="一.入门"></a>一.入门</h2><h2 id="1-demo"><a href="#1-demo" class="headerlink" title="1.demo"></a>1.demo</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello, World!&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="2-可变参数"><a href="#2-可变参数" class="headerlink" title="2.可变参数"></a>2.可变参数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&lt;user&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span>(<span class="params">user</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(user)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210408102134741.png" alt="image-20210408102134741"></p><h2 id="3-唯一url和重定向"><a href="#3-唯一url和重定向" class="headerlink" title="3.唯一url和重定向"></a>3.唯一url和重定向</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// @app.route(<span class="string">&#x27;/project&#x27;</span>) @app.route(<span class="string">&#x27;/project/&#x27;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">projects</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;project1&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="4-url-for"><a href="#4-url-for" class="headerlink" title="4.url_for()"></a>4.url_for()</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, url_for</span><br><span class="line"><span class="keyword">from</span> markupsafe <span class="keyword">import</span> escape</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;index&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;login&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/user/&lt;username&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">profile</span>(<span class="params">username</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#123;&#125;\&#x27;s profile&#x27;</span>.<span class="built_in">format</span>(escape(username))</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> app.test_request_context():</span><br><span class="line">    <span class="built_in">print</span>(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(url_for(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(url_for(<span class="string">&#x27;login&#x27;</span>, <span class="built_in">next</span>=<span class="string">&#x27;/&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(url_for(<span class="string">&#x27;profile&#x27;</span>, username=<span class="string">&#x27;John Doe&#x27;</span>))</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"> <span class="comment"># 静态文件:</span></span><br><span class="line">    url_for(<span class="string">&#x27;static&#x27;</span>, filename=<span class="string">&#x27;style.css&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="5-http方法"><a href="#5-http方法" class="headerlink" title="5.http方法"></a>5.http方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> do_the_login()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> show_the_login_form()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取提交的数据</span></span><br><span class="line">    User = request.args.get(‘nm’)</span><br><span class="line">user = request.form[<span class="string">&#x27;nm&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="6-模板"><a href="#6-模板" class="headerlink" title="6.模板"></a>6.模板</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello/&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello/&lt;name&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span>(<span class="params">name=<span class="literal">None</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;hello.html&#x27;</span>, name=name)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello from Flask<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&#123;% if name %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello &#123;&#123; name &#125;&#125;!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h2 id="7-cookie"><a href="#7-cookie" class="headerlink" title="7.cookie"></a>7.cookie</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置</span></span><br><span class="line">resp = make_response(<span class="string">&quot;success&quot;</span>)   <span class="comment"># 设置响应体</span></span><br><span class="line">resp.set_cookie(<span class="string">&quot;w3cshool&quot;</span>, <span class="string">&quot;w3cshool&quot;</span>, max_age=<span class="number">3600</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取</span></span><br><span class="line">cookie_1 = request.cookies.get(<span class="string">&quot;w3cshool&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">resp = make_response(<span class="string">&quot;del success&quot;</span>)  <span class="comment"># 设置响应体</span></span><br><span class="line">resp.delete_cookie(<span class="string">&quot;w3cshool&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, make_response, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/set_cookies&quot;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_cookie</span>():</span></span><br><span class="line">    resp = make_response(<span class="string">&quot;success&quot;</span>)</span><br><span class="line">    resp.set_cookie(<span class="string">&quot;w3cshool&quot;</span>, <span class="string">&quot;w3cshool&quot;</span>,max_age=<span class="number">3600</span>)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/get_cookies&quot;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_cookie</span>():</span></span><br><span class="line">    cookie_1 = request.cookies.get(<span class="string">&quot;w3cshool&quot;</span>)  <span class="comment"># 获取名字为Itcast_1对应cookie的值</span></span><br><span class="line">    <span class="keyword">return</span> cookie_1</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/delete_cookies&quot;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_cookie</span>():</span></span><br><span class="line">    resp = make_response(<span class="string">&quot;del success&quot;</span>)</span><br><span class="line">    resp.delete_cookie(<span class="string">&quot;w3cshool&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h2 id="8-session"><a href="#8-session" class="headerlink" title="8.session"></a>8.session</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置</span></span><br><span class="line">Session[‘username’] = ’admin’</span><br><span class="line"><span class="comment"># 释放</span></span><br><span class="line">session.pop(<span class="string">&#x27;username&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line"><span class="comment"># </span></span><br></pre></td></tr></table></figure><p>9.重定向和错误</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, redirect, url_for, render_template, request</span><br><span class="line"><span class="comment"># Initialize the Flask application</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">   <span class="keyword">return</span> render_template(<span class="string">&#x27;log_in.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>,methods = [<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line">   <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span> <span class="keyword">and</span></span><br><span class="line">       request.form[<span class="string">&#x27;username&#x27;</span>] == <span class="string">&#x27;admin&#x27;</span> :</span><br><span class="line">           <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;success&#x27;</span>))</span><br><span class="line">           <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/success&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">success</span>():</span></span><br><span class="line">   <span class="keyword">return</span> <span class="string">&#x27;logged in successfully&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">   app.run(debug = <span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 错误</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, redirect, url_for, render_template, request, abort</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">   <span class="keyword">return</span> render_template(<span class="string">&#x27;log_in.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>,methods = [<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line">   <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">      <span class="keyword">if</span> request.form[<span class="string">&#x27;username&#x27;</span>] == <span class="string">&#x27;admin&#x27;</span> :</span><br><span class="line">         <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;success&#x27;</span>))</span><br><span class="line">      <span class="keyword">else</span>:</span><br><span class="line">         abort(<span class="number">401</span>)</span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">      <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/success&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">success</span>():</span></span><br><span class="line">   <span class="keyword">return</span> <span class="string">&#x27;logged in successfully&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">   app.run(debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h2 id="9-文件上传"><a href="#9-文件上传" class="headerlink" title="9.文件上传"></a>9.文件上传</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;File Upload&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;http://localhost:5000/uploader&quot;</span> method=<span class="string">&quot;POST&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">        &lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file&quot;</span> accept=<span class="string">&quot;.jpg,.png&quot;</span> /&gt;</span><br><span class="line">        &lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="comment"># python代码</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request</span><br><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> secure_filename</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>] = <span class="string">&#x27;upload/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/upload&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload_file</span>():</span></span><br><span class="line">   <span class="keyword">return</span> render_template(<span class="string">&#x27;upload.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/uploader&#x27;</span>, methods = [<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">uploader</span>():</span></span><br><span class="line">   <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">      f = request.files[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line">      f.save(os.path.join(app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>],secure_filename(f.filename)))</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&#x27;file uploaded successfully&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">   app.run()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Python </category>
          
          <category> flask </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 后端 </tag>
            
            <tag> flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>async和await语法糖的使用</title>
      <link href="posts/6323576fa6a5/"/>
      <url>posts/6323576fa6a5/</url>
      
        <content type="html"><![CDATA[<h1 id="1-async"><a href="#1-async" class="headerlink" title="1.async"></a>1.async</h1><ul><li>返回值是一个promise对象</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> result = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">21</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(result());</span><br></pre></td></tr></table></figure><h1 id="2-await"><a href="#2-await" class="headerlink" title="2.await"></a>2.await</h1><ul><li>右侧表达式为promise对象,但也可以是其他的值</li><li>表达式为promise对象则为成功的值</li><li>其他值,则直接将此值作为await的返回值</li></ul><blockquote><p>注意</p><p>1.await必须写在async函数中,但async函数可以没有await</p><p>2.await的promise对象失败了,则会抛出异常,需要通过try catch进行捕获</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> result = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, rejsct</span>) =&gt;</span> &#123;</span><br><span class="line">        resolve(<span class="string">&quot;ok&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">let</span> res = <span class="keyword">await</span> p;</span><br><span class="line">    <span class="built_in">console</span>.log(res);</span><br><span class="line">&#125;;</span><br><span class="line">result();</span><br></pre></td></tr></table></figure><h1 id="3-结合实践"><a href="#3-结合实践" class="headerlink" title="3.结合实践"></a>3.结合实践</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">btn.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">               <span class="keyword">let</span> duanzi = <span class="keyword">await</span> sendAJAX(<span class="string">&quot;https://api.apiopen.top/getJoke&quot;</span>);</span><br><span class="line">               <span class="built_in">console</span>.log(duanzi);</span><br><span class="line">           &#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> ajax </category>
          
          <category> promise </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> ajax </tag>
            
            <tag> 前后端交互 </tag>
            
            <tag> promise </tag>
            
            <tag> vue.js </tag>
            
            <tag> jQuery </tag>
            
            <tag> axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AJAX在各种框架下的使用</title>
      <link href="posts/60229e7c7527/"/>
      <url>posts/60229e7c7527/</url>
      
        <content type="html"><![CDATA[<h1 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h1><h2 id="1-ajax"><a href="#1-ajax" class="headerlink" title="1.ajax"></a>1.ajax</h2><blockquote><p>不刷新的情况下,向服务器发起请求</p></blockquote><h3 id="1-优点"><a href="#1-优点" class="headerlink" title="1.优点:"></a>1.优点:</h3><ul><li>无需刷新</li><li>事件触发更新部分内容</li></ul><h3 id="2-缺点"><a href="#2-缺点" class="headerlink" title="2.缺点:"></a>2.缺点:</h3><ul><li>没有浏览历史,不能回退</li><li>跨域问题</li><li>SEO不友好</li></ul><h2 id="2-使用ajax原生"><a href="#2-使用ajax原生" class="headerlink" title="2.使用ajax原生"></a>2.使用ajax原生</h2><h3 id="1-get-post"><a href="#1-get-post" class="headerlink" title="1.get/post"></a>1.get/post</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取button元素</span></span><br><span class="line">  <span class="keyword">const</span> btn = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;button&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">const</span> result = <span class="built_in">document</span>.getElementById(<span class="string">&quot;result&quot;</span>)</span><br><span class="line">  <span class="comment">//绑定事件</span></span><br><span class="line">  btn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">//1. 创建对象</span></span><br><span class="line">      <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest()</span><br><span class="line">      <span class="comment">//2. 初始化 设置请求方法和 url</span></span><br><span class="line">      xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;http://127.0.0.1:8000/server?a=100&amp;b=200&amp;c=300&quot;</span>)</span><br><span class="line">      <span class="comment">//3. 发送</span></span><br><span class="line">      xhr.send()</span><br><span class="line">      <span class="comment">//4. 事件绑定 处理服务端返回的结果</span></span><br><span class="line">      <span class="comment">// on  when 当....时候</span></span><br><span class="line">      <span class="comment">// readystate 是 xhr 对象中的属性, 表示状态 0 1 2 3 4</span></span><br><span class="line">      <span class="comment">// change  改变</span></span><br><span class="line">      xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="comment">//判断 (服务端返回了所有的结果)</span></span><br><span class="line">          <span class="keyword">if</span> (xhr.readyState === <span class="number">4</span>) &#123;</span><br><span class="line">              <span class="comment">//判断响应状态码 200  404  403 401 500</span></span><br><span class="line">              <span class="comment">// 2xx 成功</span></span><br><span class="line">              <span class="keyword">if</span> (xhr.status &gt;= <span class="number">200</span> &amp;&amp; xhr.status &lt; <span class="number">300</span>) &#123;</span><br><span class="line">                  <span class="comment">//处理结果  行 头 空行 体</span></span><br><span class="line">                  <span class="comment">//响应</span></span><br><span class="line">                  <span class="comment">// console.log(xhr.status);//状态码</span></span><br><span class="line">                  <span class="comment">// console.log(xhr.statusText);//状态字符串</span></span><br><span class="line">                  <span class="comment">// console.log(xhr.getAllResponseHeaders());//所有响应头</span></span><br><span class="line">                  <span class="comment">// console.log(xhr.response);//响应体</span></span><br><span class="line">                  <span class="comment">//设置 result 的文本</span></span><br><span class="line">                  result.innerHTML = xhr.response</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  xhr.open(<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;http://127.0.0.1:8000/server&#x27;</span>);</span><br><span class="line">  <span class="comment">//设置请求头</span></span><br><span class="line">  xhr.setRequestHeader(<span class="string">&#x27;Content-Type&#x27;</span>,<span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span><br><span class="line">  xhr.setRequestHeader(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;atguigu&#x27;</span>);</span><br><span class="line">  <span class="comment">//3. 发送</span></span><br><span class="line">  xhr.send(<span class="string">&#x27;a=100&amp;b=200&amp;c=300&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="2-设置返回json"><a href="#2-设置返回json" class="headerlink" title="2.设置返回json"></a>2.设置返回json</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">xhr.responseType = <span class="string">&#x27;json&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 手动对数据转化</span></span><br><span class="line"><span class="comment">// let data = JSON.parse(xhr.response);</span></span><br><span class="line"><span class="comment">// console.log(data);</span></span><br><span class="line"><span class="comment">// result.innerHTML = data.name;</span></span><br><span class="line"><span class="comment">// 2. 自动转换</span></span><br><span class="line"><span class="built_in">console</span>.log(xhr.response);</span><br><span class="line">result.innerHTML = xhr.response.name;</span><br><span class="line"></span><br><span class="line"><span class="comment">//后端</span></span><br><span class="line"><span class="keyword">const</span> data = &#123;</span><br><span class="line">    name: <span class="string">&#x27;atguigu&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//对对象进行字符串转换</span></span><br><span class="line"><span class="keyword">let</span> str = <span class="built_in">JSON</span>.stringify(data);</span><br></pre></td></tr></table></figure><h3 id="3-IE缓存问题"><a href="#3-IE缓存问题" class="headerlink" title="3.IE缓存问题"></a>3.IE缓存问题</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;http://127.0.0.1:8000/?t=&quot;</span> + <span class="built_in">Date</span>.now())</span><br></pre></td></tr></table></figure><h3 id="4-请求超时和网络超时处理"><a href="#4-请求超时和网络超时处理" class="headerlink" title="4.请求超时和网络超时处理"></a>4.请求超时和网络超时处理</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//超时设置 2s 设置</span></span><br><span class="line">xhr.timeout = <span class="number">2000</span>;</span><br><span class="line"><span class="comment">//超时回调</span></span><br><span class="line">xhr.ontimeout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">&quot;网络异常, 请稍后重试!!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//网络异常回调</span></span><br><span class="line">xhr.onerror = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">&quot;你的网络似乎出了一些问题!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-取消请求"><a href="#5-取消请求" class="headerlink" title="5.取消请求"></a>5.取消请求</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x.abort();</span><br></pre></td></tr></table></figure><h3 id="6-重复请求"><a href="#6-重复请求" class="headerlink" title="6.重复请求"></a>6.重复请求</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取元素对象</span></span><br><span class="line"><span class="keyword">const</span> btns = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> x = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">//标识变量</span></span><br><span class="line"><span class="keyword">let</span> isSending = <span class="literal">false</span>; <span class="comment">// 是否正在发送AJAX请求</span></span><br><span class="line"></span><br><span class="line">btns[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//判断标识变量</span></span><br><span class="line">    <span class="keyword">if</span>(isSending) x.abort();<span class="comment">// 如果正在发送, 则取消该请求, 创建一个新的请求</span></span><br><span class="line">    x = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    <span class="comment">//修改 标识变量的值</span></span><br><span class="line">    isSending = <span class="literal">true</span>;</span><br><span class="line">    x.open(<span class="string">&quot;GET&quot;</span>,<span class="string">&#x27;http://127.0.0.1:8000/delay&#x27;</span>);</span><br><span class="line">    x.send();</span><br><span class="line">    x.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(x.readyState === <span class="number">4</span>)&#123;</span><br><span class="line">            <span class="comment">//修改标识变量</span></span><br><span class="line">            isSending = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// abort</span></span><br><span class="line">btns[<span class="number">1</span>].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    x.abort();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-jquery"><a href="#3-jquery" class="headerlink" title="3.jquery"></a>3.jquery</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           $.get(<span class="string">&#x27;http://127.0.0.1:8000/jquery-server&#x27;</span>, &#123;<span class="attr">a</span>:<span class="number">100</span>, <span class="attr">b</span>:<span class="number">200</span>&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">               <span class="built_in">console</span>.log(data);</span><br><span class="line">           &#125;,<span class="string">&#x27;json&#x27;</span>);</span><br><span class="line">       &#125;);</span><br><span class="line"></span><br><span class="line">       $(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">1</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           $.post(<span class="string">&#x27;http://127.0.0.1:8000/jquery-server&#x27;</span>, &#123;<span class="attr">a</span>:<span class="number">100</span>, <span class="attr">b</span>:<span class="number">200</span>&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">               <span class="built_in">console</span>.log(data);</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;);</span><br><span class="line"></span><br><span class="line">       $(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">2</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           $.ajax(&#123;</span><br><span class="line">               <span class="comment">//url</span></span><br><span class="line">               url: <span class="string">&#x27;http://127.0.0.1:8000/jquery-server&#x27;</span>,</span><br><span class="line">               <span class="comment">//参数</span></span><br><span class="line">               data: &#123;<span class="attr">a</span>:<span class="number">100</span>, <span class="attr">b</span>:<span class="number">200</span>&#125;,</span><br><span class="line">               <span class="comment">//请求类型</span></span><br><span class="line">               type: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">               <span class="comment">//响应体结果</span></span><br><span class="line">               dataType: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">               <span class="comment">//成功的回调</span></span><br><span class="line">               success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">                   <span class="built_in">console</span>.log(data);</span><br><span class="line">               &#125;,</span><br><span class="line">               <span class="comment">//超时时间</span></span><br><span class="line">               timeout: <span class="number">2000</span>,</span><br><span class="line">               <span class="comment">//失败的回调</span></span><br><span class="line">               error: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                   <span class="built_in">console</span>.log(<span class="string">&#x27;出错啦!!&#x27;</span>);</span><br><span class="line">               &#125;,</span><br><span class="line">               <span class="comment">//头信息</span></span><br><span class="line">               headers: &#123;</span><br><span class="line">                   c:<span class="number">300</span>,</span><br><span class="line">                   d:<span class="number">400</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure><h2 id="4-axios"><a href="#4-axios" class="headerlink" title="4.axios"></a>4.axios</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">axios.defaults.baseURL = <span class="string">&#x27;http://127.0.0.1:8000&#x27;</span>;</span><br><span class="line"></span><br><span class="line">       btns[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="comment">//GET 请求</span></span><br><span class="line">           axios.get(<span class="string">&#x27;/axios-server&#x27;</span>, &#123;</span><br><span class="line">               <span class="comment">//url 参数</span></span><br><span class="line">               params: &#123;</span><br><span class="line">                   id: <span class="number">100</span>,</span><br><span class="line">                   vip: <span class="number">7</span></span><br><span class="line">               &#125;,</span><br><span class="line">               <span class="comment">//请求头信息</span></span><br><span class="line">               headers: &#123;</span><br><span class="line">                   name: <span class="string">&#x27;atguigu&#x27;</span>,</span><br><span class="line">                   age: <span class="number">20</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;).then(<span class="function"><span class="params">value</span> =&gt;</span> &#123;</span><br><span class="line">               <span class="built_in">console</span>.log(value);</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       btns[<span class="number">1</span>].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           axios.post(<span class="string">&#x27;/axios-server&#x27;</span>, &#123;</span><br><span class="line">               username: <span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">               password: <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">           &#125;, &#123;</span><br><span class="line">               <span class="comment">//url </span></span><br><span class="line">               params: &#123;</span><br><span class="line">                   id: <span class="number">200</span>,</span><br><span class="line">                   vip: <span class="number">9</span></span><br><span class="line">               &#125;,</span><br><span class="line">               <span class="comment">//请求头参数</span></span><br><span class="line">               headers: &#123;</span><br><span class="line">                   height: <span class="number">180</span>,</span><br><span class="line">                   weight: <span class="number">180</span>,</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line">   </span><br><span class="line">       btns[<span class="number">2</span>].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           axios(&#123;</span><br><span class="line">               <span class="comment">//请求方法</span></span><br><span class="line">               method : <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">               <span class="comment">//url</span></span><br><span class="line">               url: <span class="string">&#x27;/axios-server&#x27;</span>,</span><br><span class="line">               <span class="comment">//url参数</span></span><br><span class="line">               params: &#123;</span><br><span class="line">                   vip:<span class="number">10</span>,</span><br><span class="line">                   level:<span class="number">30</span></span><br><span class="line">               &#125;,</span><br><span class="line">               <span class="comment">//头信息</span></span><br><span class="line">               headers: &#123;</span><br><span class="line">                   a:<span class="number">100</span>,</span><br><span class="line">                   b:<span class="number">200</span></span><br><span class="line">               &#125;,</span><br><span class="line">               <span class="comment">//请求体参数</span></span><br><span class="line">               data: &#123;</span><br><span class="line">                   username: <span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">                   password: <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;).then(<span class="function"><span class="params">response</span>=&gt;</span>&#123;</span><br><span class="line">               <span class="comment">//响应状态码</span></span><br><span class="line">               <span class="built_in">console</span>.log(response.status);</span><br><span class="line">               <span class="comment">//响应状态字符串</span></span><br><span class="line">               <span class="built_in">console</span>.log(response.statusText);</span><br><span class="line">               <span class="comment">//响应头信息</span></span><br><span class="line">               <span class="built_in">console</span>.log(response.headers);</span><br><span class="line">               <span class="comment">//响应体</span></span><br><span class="line">               <span class="built_in">console</span>.log(response.data);</span><br><span class="line">           &#125;)</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h2 id="5-fetch"><a href="#5-fetch" class="headerlink" title="5.fetch"></a>5.fetch</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;fetch 发送 AJAX请求&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;AJAX请求&lt;/button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">//文档地址</span></span><br><span class="line">        <span class="comment">//https://developer.mozilla.org/zh-CN/docs/Web/API/WindowOrWorkerGlobalScope/fetch</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">const</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            fetch(<span class="string">&#x27;http://127.0.0.1:8000/fetch-server?vip=10&#x27;</span>, &#123;</span><br><span class="line">                <span class="comment">//请求方法</span></span><br><span class="line">                method: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">                <span class="comment">//请求头</span></span><br><span class="line">                headers: &#123;</span><br><span class="line">                    name:<span class="string">&#x27;atguigu&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="comment">//请求体</span></span><br><span class="line">                body: <span class="string">&#x27;username=admin&amp;password=admin&#x27;</span></span><br><span class="line">            &#125;).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="comment">// return response.text();</span></span><br><span class="line">                <span class="keyword">return</span> response.json();</span><br><span class="line">            &#125;).then(<span class="function"><span class="params">response</span>=&gt;</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(response);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="6-同源策略"><a href="#6-同源策略" class="headerlink" title="6.同源策略"></a>6.同源策略</h2><blockquote><p>浏览器的安全机制</p><p>协议,域名,端口号必须完全相同</p></blockquote><h2 id="7-jsonp"><a href="#7-jsonp" class="headerlink" title="7.jsonp"></a>7.jsonp</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    用户名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//获取 input 元素</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> input = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> p = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;p&#x27;</span>);</span></span><br><span class="line">        </span><br><span class="line"><span class="javascript">        <span class="comment">//声明 handle 函数</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params">data</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            input.style.border = <span class="string">&quot;solid 1px #f00&quot;</span>;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//修改 p 标签的提示文本</span></span></span><br><span class="line">            p.innerHTML = data.msg;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//绑定事件</span></span></span><br><span class="line"><span class="javascript">        input.onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//获取用户的输入值</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> username = <span class="built_in">this</span>.value;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//向服务器端发送请求 检测用户名是否存在</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//1. 创建 script 标签</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> script = <span class="built_in">document</span>.createElement(<span class="string">&#x27;script&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="comment">//2. 设置标签的 src 属性</span></span></span><br><span class="line"><span class="javascript">            script.src = <span class="string">&#x27;http://127.0.0.1:8000/check-username&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//3. 将 script 插入到文档中</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.body.appendChild(script);</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;jQuery-jsonp&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        #result&#123;</span><br><span class="line">            width:300px;</span><br><span class="line">            height:100px;</span><br><span class="line">            border:solid 1px #089;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">    &lt;script crossorigin=<span class="string">&quot;anonymous&quot;</span> src=<span class="string">&#x27;https://cdn.bootcss.com/jquery/3.5.0/jquery.min.js&#x27;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;点击发送 jsonp 请求&lt;/button&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;result&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            $.getJSON(<span class="string">&#x27;http://127.0.0.1:8000/jquery-jsonp-server?callback=?&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">                $(<span class="string">&#x27;#result&#x27;</span>).html(<span class="string">`</span></span><br><span class="line"><span class="string">                    名称: <span class="subst">$&#123;data.name&#125;</span>&lt;br&gt;</span></span><br><span class="line"><span class="string">                    校区: <span class="subst">$&#123;data.city&#125;</span></span></span><br><span class="line"><span class="string">                `</span>)</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="8-CROS"><a href="#8-CROS" class="headerlink" title="8.CROS"></a>8.CROS</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CORS<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        #result&#123;</span><br><span class="line"><span class="css">            <span class="attribute">width</span>:<span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>:<span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>:solid <span class="number">1px</span> <span class="number">#90b</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;button&#x27;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//1. 创建对象</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> x = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">            <span class="comment">//2. 初始化设置</span></span></span><br><span class="line"><span class="javascript">            x.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;http://127.0.0.1:8000/cors-server&quot;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="comment">//3. 发送</span></span></span><br><span class="line">            x.send();</span><br><span class="line"><span class="javascript">            <span class="comment">//4. 绑定事件</span></span></span><br><span class="line"><span class="javascript">            x.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">                if(x.readyState === 4)&#123;</span><br><span class="line">                    if(x.status &gt;= 200 &amp;&amp; x.status &lt; 300)&#123;</span><br><span class="line"><span class="javascript">                        <span class="comment">//输出响应体</span></span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(x.response);</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> ajax </category>
          
          <category> promise </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> ajax </tag>
            
            <tag> 前后端交互 </tag>
            
            <tag> promise </tag>
            
            <tag> vue.js </tag>
            
            <tag> jQuery </tag>
            
            <tag> axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue.js基础学习</title>
      <link href="posts/6275c3b43a36/"/>
      <url>posts/6275c3b43a36/</url>
      
        <content type="html"><![CDATA[<h2 id="一-vue入门"><a href="#一-vue入门" class="headerlink" title="一.vue入门"></a>一.vue入门</h2><h3 id="1-HelloWorld"><a href="#1-HelloWorld" class="headerlink" title="1.HelloWorld"></a>1.HelloWorld</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">声明式编程</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">                data: &#123;</span><br><span class="line"><span class="javascript">                    message: <span class="string">&quot;Hello World!&quot;</span>,</span></span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-声明式编程"><a href="#2-声明式编程" class="headerlink" title="2.声明式编程"></a>2.声明式编程</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                只需要声明这种结构</span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;items in movies&quot;</span>&gt;</span>&#123;&#123;items&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">                data: &#123;</span><br><span class="line"><span class="javascript">                    message: <span class="string">&quot;Hello World!&quot;</span>,</span></span><br><span class="line">                    movies: [1, 2, 3, 4, 5],</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-小案例"><a href="#3-小案例" class="headerlink" title="3.小案例"></a>3.小案例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前计数 &#123;&#123;counter&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sub&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">              el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">              data: &#123;</span><br><span class="line">                  counter: 0,</span><br><span class="line">              &#125;,</span><br><span class="line">              methods: &#123;</span><br><span class="line"><span class="javascript">                  add: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                      <span class="built_in">this</span>.counter++;</span></span><br><span class="line">                  &#125;,</span><br><span class="line"><span class="javascript">                  sub: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                      <span class="built_in">this</span>.counter--;</span></span><br><span class="line">                  &#125;,</span><br><span class="line">              &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">      <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-options"><a href="#4-options" class="headerlink" title="4.options"></a>4.options</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">el:</span><br><span class="line">类型 : string或者HTMLElement</span><br><span class="line">作用 : 决定vue实例会管理哪一个DOM</span><br><span class="line"></span><br><span class="line">data:</span><br><span class="line">类型 : Object|Function(组件当中data必须是一个函数)</span><br><span class="line">作用 : vue实例对应的数据对象</span><br><span class="line"></span><br><span class="line">methods:</span><br><span class="line">类型 : &#123;[key:string]:Function&#125;</span><br><span class="line">作用 : 定义属于Vue的一些方法,可以在其他地方调用,也可以在指令中调用</span><br></pre></td></tr></table></figure><h3 id="5-vue生命周期"><a href="#5-vue生命周期" class="headerlink" title="5.vue生命周期"></a>5.vue生命周期</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210225152951630.png" alt="image-20210225152951630"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">事物从诞生到消亡的过程</span><br><span class="line"></span><br><span class="line">生命周期函数</span><br><span class="line">1.created</span><br><span class="line">2.mounted</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="6-es6语法"><a href="#6-es6语法" class="headerlink" title="6.es6语法"></a>6.es6语法</h3><h4 id="1-let和const"><a href="#1-let和const" class="headerlink" title="1.let和const"></a>1.let和const</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> 块级作用域</span><br><span class="line"><span class="keyword">const</span> 常量</span><br><span class="line">不可以被修改,定义的时候必须赋值</span><br><span class="line">常量的含义是指向的对象不能被修改,但是可以改变对象内部的属性</span><br><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">    name:<span class="string">&#x27;codelorin&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-对象"><a href="#2-对象" class="headerlink" title="2.对象"></a>2.对象</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj &#123;</span><br><span class="line">name,age,height</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-函数"><a href="#3-函数" class="headerlink" title="3.函数"></a>3.函数</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj &#123;</span><br><span class="line"><span class="function"><span class="title">run</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">响应式参数</span><br><span class="line"><span class="function"><span class="title">run</span>(<span class="params">...num</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-js遍历"><a href="#4-js遍历" class="headerlink" title="4.js遍历"></a>4.js遍历</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i <span class="keyword">in</span> arr</span><br><span class="line">i就是下标</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> i <span class="keyword">of</span> arr</span><br><span class="line"> i就是取出的一个个对象</span><br></pre></td></tr></table></figure><h4 id="5-js高阶函数"><a href="#5-js高阶函数" class="headerlink" title="5.js高阶函数"></a>5.js高阶函数</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">1.filter必须返回一个boolean值,true自动加到数组,false则过滤掉</span><br><span class="line">const nums = [1,2,3,4,5]</span><br><span class="line">let newNums = nums.filter(</span><br><span class="line">function(n)&#123;</span><br><span class="line">return n&lt;2;</span><br><span class="line">&#125;)</span><br><span class="line">                </span><br><span class="line">2.map               </span><br><span class="line">let newNums = nums.map(function(n)&#123;</span><br><span class="line">        return n*2;</span><br><span class="line">                &#125;)</span><br><span class="line">3.reduce</span><br><span class="line">对数组中的内容进行汇总</span><br><span class="line"> 第一个值回调函数</span><br><span class="line"> 第二个preValue初始值</span><br><span class="line">let total = nums.reduce(function(preValue,n)&#123;</span><br><span class="line">        return preValue+n</span><br><span class="line">                &#125;,0)     </span><br><span class="line">                </span><br><span class="line">                </span><br><span class="line">   let total = nums</span><br><span class="line">  .filter(function (n) &#123;</span><br><span class="line">    return n &lt; 100;</span><br><span class="line">  &#125;)</span><br><span class="line">  .map(function (n) &#123;</span><br><span class="line">    return n * 2;</span><br><span class="line">  &#125;)</span><br><span class="line">  .reduce(function (preValue, n) &#123;</span><br><span class="line">    return preValue + n;</span><br><span class="line">  &#125;, 0);</span><br><span class="line"></span><br><span class="line">let total = nums</span><br><span class="line">  .filter((n) =&gt; n &lt; 100)</span><br><span class="line">  .map((n) =&gt; n * 2)</span><br><span class="line">  .reduce((preValue, n) =&gt; preValue + n);  </span><br></pre></td></tr></table></figure><h2 id="二-语法"><a href="#二-语法" class="headerlink" title="二.语法"></a>二.语法</h2><h3 id="1-插值操作"><a href="#1-插值操作" class="headerlink" title="1.插值操作"></a>1.插值操作</h3><h4 id="1-双括号"><a href="#1-双括号" class="headerlink" title="(1).双括号"></a>(1).双括号</h4><h4 id="2-v-once"><a href="#2-v-once" class="headerlink" title="(2).v-once"></a>(2).v-once</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;firstName+&quot; &quot;+lastName&#125;&#125;</span><br><span class="line">&#123;&#123;message&#125;&#125;</span><br><span class="line">&#123;&#123;firstName&#125;&#125;&#123;&#123;lastName&#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-once</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">v-once不会响应式的变化</span><br></pre></td></tr></table></figure><h4 id="3-v-html"><a href="#3-v-html" class="headerlink" title="(3).v-html"></a>(3).v-html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span> v-html=&quot;url&quot;&gt;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">会渲染html代码</span><br></pre></td></tr></table></figure><h4 id="4-v-text"><a href="#4-v-text" class="headerlink" title="(4).v-text"></a>(4).v-text</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">v-text=&quot;message&quot;</span><br><span class="line">不够灵活</span><br></pre></td></tr></table></figure><h4 id="5-v-pre"><a href="#5-v-pre" class="headerlink" title="(5).v-pre"></a>(5).v-pre</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-pre</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">不做任何处理直接输出</span><br></pre></td></tr></table></figure><h4 id="6-v-cloak"><a href="#6-v-cloak" class="headerlink" title="(6).v-cloak"></a>(6).v-cloak</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">在vue解析之前,div中有一个属性v-cloak</span><br><span class="line">在vue 解析之后,div中没有一个属性v-cloak</span><br><span class="line">所以我们可以通过可以属性</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">            <span class="selector-attr">[v-cloak]</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">display</span>: none;</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">v-cloak</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                    el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">                    data: &#123;</span><br><span class="line"><span class="javascript">                        message: <span class="string">&quot;你好啊&quot;</span>,</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    methods: &#123;&#125;,</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;, 1000);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-属性v-bind"><a href="#2-属性v-bind" class="headerlink" title="2.属性v-bind"></a>2.属性v-bind</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;url&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">语法糖</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;url&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">class的是否取决于boolean</span><br><span class="line">对象语法</span><br><span class="line"> <span class="tag">&lt;<span class="name">h2</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;类名1:boolean,类名2:boolean&#125;&quot;</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;active: isActive,line:isLine&#125;&quot;</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">                data: &#123;</span><br><span class="line"><span class="javascript">                    message: <span class="string">&quot;你好啊&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    isActive: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">                    isLine: <span class="literal">true</span>,</span></span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">可以写一个固定的属性在前面,classes太长可以在函数中返回</span><br><span class="line"><span class="javascript">&lt;h2 <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;title&quot;</span> :<span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;classes&quot;</span>&gt;Hello World&lt;/h2&gt;</span></span><br><span class="line"></span><br><span class="line">数组语法</span><br><span class="line"><span class="javascript">&lt;h2 <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;title&quot;</span> :<span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;[active,line]&quot;</span>&gt;Hello World&lt;/h2&gt;</span></span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">练习</span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line">                &lt;li</span><br><span class="line"><span class="javascript">                    v-<span class="keyword">for</span>=<span class="string">&quot;(item,index) in message&quot;</span></span></span><br><span class="line"><span class="javascript">                    @click=<span class="string">&quot;clickIndex=index&quot;</span></span></span><br><span class="line"><span class="javascript">                    :<span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;&#123;active:clickIndex==index&#125;&quot;</span></span></span><br><span class="line">                &gt;</span><br><span class="line"><span class="handlebars"><span class="xml">                    </span><span class="template-variable">&#123;&#123;<span class="name">item</span>&#125;&#125;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">                data: &#123;</span><br><span class="line"><span class="javascript">                    message: [<span class="string">&quot;海王&quot;</span>, <span class="string">&quot;海尔兄弟&quot;</span>, <span class="string">&quot;火影忍者&quot;</span>, <span class="string">&quot;进击的巨人&quot;</span>],</span></span><br><span class="line">                    clickIndex: -1,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">绑定sytle</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;fontSize:finSize+&#x27;px&#x27;&#125;&quot;</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">                data: &#123;</span><br><span class="line"><span class="javascript">                    message: <span class="string">&quot;Hello&quot;</span>,</span></span><br><span class="line">                    finSize: 100,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> &quot; <span class="attr">:style</span>=<span class="string">&quot;[active,line]&quot;</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-计算属性"><a href="#3-计算属性" class="headerlink" title="3.计算属性"></a>3.计算属性</h3><h4 id="1-基本操作"><a href="#1-基本操作" class="headerlink" title="(1).基本操作"></a>(1).基本操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line"> fullName: function () &#123;</span><br><span class="line">return this.firstName + &quot; &quot; + this.lastName;</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br></pre></td></tr></table></figure><h4 id="2-复杂操作"><a href="#2-复杂操作" class="headerlink" title="(2).复杂操作"></a>(2).复杂操作</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">      totalPrice: function () &#123;</span><br><span class="line">      let result = 0;</span><br><span class="line">      for (let i = 0; i &lt; this.books.length; i++) &#123;</span><br><span class="line">               result += this.books[i].price;</span><br><span class="line">                      &#125;</span><br><span class="line">                      return result;</span><br><span class="line">                  &#125;,</span><br><span class="line">              &#125;,</span><br></pre></td></tr></table></figure><h4 id="3-setter-getter"><a href="#3-setter-getter" class="headerlink" title="(3).setter / getter"></a>(3).setter / getter</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> computed: &#123;</span><br><span class="line">                    fullName: &#123;</span><br><span class="line">//一般没有set方法,只读属性 set: function () &#123;&#125;,</span><br><span class="line">                        </span><br><span class="line">                        get: function () &#123;</span><br><span class="line">                            return this.firstName + &quot; &quot; + lastName;</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">get方法的简写</span><br><span class="line"> computed: &#123;</span><br><span class="line">                    fullName: function () &#123;</span><br><span class="line">                            return this.firstName + &quot; &quot; + lastName;</span><br><span class="line">                        &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line"></span><br><span class="line">set方法</span><br><span class="line">set: function (newValue) &#123;</span><br><span class="line">const names = newValue.split(&#x27; &#x27;)</span><br><span class="line"></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="4-计算属性的缓存"><a href="#4-计算属性的缓存" class="headerlink" title="(4).计算属性的缓存"></a>(4).计算属性的缓存</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">计算属性会有缓存,运行次数会变少</span><br></pre></td></tr></table></figure><h3 id="4-v-on"><a href="#4-v-on" class="headerlink" title="4.v-on"></a>4.v-on</h3><h4 id="1-使用"><a href="#1-使用" class="headerlink" title="(1).使用"></a>(1).使用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@click=&quot;方法&quot;</span><br><span class="line">1.</span><br><span class="line">vue会将event对象作为参数传递到方法当中</span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;test&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">test(event)&#123;&#125;</span><br><span class="line"></span><br><span class="line">2.有时候我们除了event对象还需要传入其他参数</span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;test(abc,$event)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">test(abc,event)&#123;&#125;</span><br></pre></td></tr></table></figure><h4 id="2-修饰符"><a href="#2-修饰符" class="headerlink" title="(2).修饰符"></a>(2).修饰符</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">阻止冒泡-&gt;stop</span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.stop</span>=<span class="string">&quot;test&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">阻止默认事件-&gt;prevent</span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;test&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">监听键盘点击-&gt;keyup keyup.enter回车 </span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">keyup</span>=<span class="string">&quot;test&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">只触发一次回调-&gt;once </span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">&quot;test&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-v-if"><a href="#5-v-if" class="headerlink" title="5.v-if"></a>5.v-if</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;false&quot;</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;false&quot;</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">h3</span> <span class="attr">v-else</span>&gt;</span>false<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;score&gt;90&quot;</span>&gt;</span>优秀<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-else-if</span>=<span class="string">&quot;score&gt;60&quot;</span>&gt;</span>良好<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">v-else</span>&gt;</span>及格<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line">加入key可以让vue不复用dom</span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span>用户账号<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;账号登录&quot;</span> <span class="attr">key</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span>邮箱登录<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;邮箱登录&quot;</span> <span class="attr">key</span>=<span class="string">&quot;email&quot;</span> /&gt;</span></span><br><span class="line">                </span><br></pre></td></tr></table></figure><h3 id="6-v-show"><a href="#6-v-show" class="headerlink" title="6.v-show"></a>6.v-show</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;flag&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span>用户账号<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;账号登录&quot;</span> <span class="attr">key</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">v-if是操作dom树</span><br><span class="line">v-show是通过内联样式设置display=none隐藏</span><br><span class="line">如果是切换频繁的元素,建议v-show</span><br></pre></td></tr></table></figure><h3 id="7-v-for"><a href="#7-v-for" class="headerlink" title="7.v-for"></a>7.v-for</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">遍历数组</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in arr&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in arr&quot;</span>&gt;</span>&#123;&#123;index+1&#125;&#125; &#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">遍历对象</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;value in arr&quot;</span>&gt;</span>&#123;&#123;value&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value,key) in arr&quot;</span>&gt;</span>&#123;&#123;key&#125;&#125; &#123;&#123;value&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value,key,index) in arr&quot;</span>&gt;</span>&#123;&#123;key&#125;&#125; &#123;&#123;value&#125;&#125; &#123;&#123;index&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">绑定key使得dom效率更高</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in info&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-数组的响应式"><a href="#1-数组的响应式" class="headerlink" title="(1).数组的响应式"></a>(1).数组的响应式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">响应式</span><br><span class="line">push</span><br><span class="line">splice</span><br><span class="line">unshift</span><br><span class="line">shift</span><br><span class="line">sort</span><br><span class="line">reverse</span><br><span class="line">非响应式</span><br><span class="line">索引值修改元素</span><br><span class="line"></span><br><span class="line">vue的方式 set</span><br><span class="line">Vue.set(this.letter,0,&#x27;修改后的值&#x27;)</span><br></pre></td></tr></table></figure><h3 id="8-过滤器"><a href="#8-过滤器" class="headerlink" title="8.过滤器"></a>8.过滤器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">可以对一些东西进行一些操作</span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.price|showPrice&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">filters: &#123;</span><br><span class="line">                    showPrice(price) &#123;</span><br><span class="line">                        return &quot;$&quot; + price.toFixed(2);</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br></pre></td></tr></table></figure><h3 id="9-练习"><a href="#9-练习" class="headerlink" title="9.练习"></a>9.练习</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./style.css&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">            <span class="selector-attr">[v-cloak]</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">display</span>: none;</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">v-cloak</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>书籍名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>出版日期<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>价格<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>购买数量<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in books&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.date&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.price|showPrice&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sub(index)&quot;</span> <span class="attr">:disabled</span>=<span class="string">&quot;item.count &lt;=1&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                            &#123;&#123;item.count&#125;&#125;</span><br><span class="line">                            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add(index)&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;removeBook(index)&quot;</span>&gt;</span>移出<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>总价: &#123;&#123;totalPrice|showPrice&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">                data: &#123;</span><br><span class="line">                    books: [</span><br><span class="line"><span class="javascript">                        &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&quot;《算法导论》&quot;</span>, <span class="attr">date</span>: <span class="string">&quot;2006-9&quot;</span>, <span class="attr">price</span>: <span class="number">85.0</span>, <span class="attr">count</span>: <span class="number">1</span> &#125;,</span></span><br><span class="line"><span class="javascript">                        &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&quot;《JAVA》&quot;</span>, <span class="attr">date</span>: <span class="string">&quot;2006-1&quot;</span>, <span class="attr">price</span>: <span class="number">59.0</span>, <span class="attr">count</span>: <span class="number">1</span> &#125;,</span></span><br><span class="line"><span class="javascript">                        &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&quot;《编程珠玑》&quot;</span>, <span class="attr">date</span>: <span class="string">&quot;2006-10&quot;</span>, <span class="attr">price</span>: <span class="number">39.0</span>, <span class="attr">count</span>: <span class="number">1</span> &#125;,</span></span><br><span class="line"><span class="javascript">                        &#123; <span class="attr">id</span>: <span class="number">4</span>, <span class="attr">name</span>: <span class="string">&quot;《代码大全》&quot;</span>, <span class="attr">date</span>: <span class="string">&quot;2016-9&quot;</span>, <span class="attr">price</span>: <span class="number">128.0</span>, <span class="attr">count</span>: <span class="number">2</span> &#125;,</span></span><br><span class="line">                    ],</span><br><span class="line">                &#125;,</span><br><span class="line">                methods: &#123;</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">add</span>(<span class="params">index</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.books[index].count++;</span></span><br><span class="line">                    &#125;,</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">sub</span>(<span class="params">index</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.books[index].count--;</span></span><br><span class="line">                    &#125;,</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">removeBook</span>(<span class="params">index</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.books.splice(index, <span class="number">1</span>);</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">                computed: &#123;</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">totalPrice</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> temp = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> <span class="built_in">this</span>.books) &#123;</span></span><br><span class="line">                            temp += i.price * i.count;</span><br><span class="line">                        &#125;</span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> temp;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">                filters: &#123;</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">showPrice</span>(<span class="params">price</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> <span class="string">&quot;$&quot;</span> + price.toFixed(<span class="number">2</span>);</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="10-v-model"><a href="#10-v-model" class="headerlink" title="10.v-model"></a>10.v-model</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据的双向绑定</span><br><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> v-model=<span class="string">&quot;message&quot;</span> /&gt;</span><br><span class="line">    </span><br><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> :value=<span class="string">&quot;message&quot;</span> @input=<span class="string">&quot;message=$event.target.value&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><h4 id="1-radio"><a href="#1-radio" class="headerlink" title="1.radio"></a>1.radio</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="tag">                &gt;</span>男<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="tag">                &gt;</span>女<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123&quot;</span> /&gt;</span></span><br><span class="line">message: &quot;男&quot;,</span><br></pre></td></tr></table></figure><h4 id="2-checkbox"><a href="#2-checkbox" class="headerlink" title="2.checkbox"></a>2.checkbox</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span> /&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span> /&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span> /&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span> /&gt;</span></span><br><span class="line">message: [],</span><br></pre></td></tr></table></figure><h4 id="3-select"><a href="#3-select" class="headerlink" title="3.select"></a>3.select</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">单选            </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;123&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;fruit&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">多选         <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;123&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;fruit&quot;</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-值绑定"><a href="#4-值绑定" class="headerlink" title="4.值绑定"></a>4.值绑定</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">:for</span>=<span class="string">&quot;item&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;item in originHobbies&quot;</span></span></span><br><span class="line"><span class="tag">                &gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;item&quot;</span> <span class="attr">:id</span>=<span class="string">&quot;item&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;hobby&quot;</span> /&gt;</span>&#123;&#123;item&#125;&#125;&lt;/label</span><br><span class="line">&gt;</span><br><span class="line"></span><br><span class="line">originHobbies: [&quot;篮球&quot;, &quot;足球&quot;, &quot;乒乓球&quot;],</span><br><span class="line">hobby: [],</span><br></pre></td></tr></table></figure><h4 id="5-修饰符"><a href="#5-修饰符" class="headerlink" title="5.修饰符"></a>5.修饰符</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">lazy 失去焦点或者回车才记载数据</span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;&quot;</span>&gt;</span>输入: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.lazy</span>=<span class="string">&quot;hobby&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">number 输入数字</span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;&quot;</span>&gt;</span>输入: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.number</span>=<span class="string">&quot;hobby&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">trim去除两边空格</span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;&quot;</span>&gt;</span>输入: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.trim</span>=<span class="string">&quot;hobby&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="三-组件化"><a href="#三-组件化" class="headerlink" title="三.组件化"></a>三.组件化</h2><h3 id="1-创建组件构造器"><a href="#1-创建组件构造器" class="headerlink" title="1.创建组件构造器"></a>1.创建组件构造器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">const cpnC = Vue.extend(&#123;</span><br><span class="line">                template: `</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>titile<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                `,</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-注册组件"><a href="#2-注册组件" class="headerlink" title="2.注册组件"></a>2.注册组件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">全局注册,可以在多个vue实例下使用</span><br><span class="line"> Vue.component(&quot;cpn&quot;, cpnC);</span><br><span class="line">第一个参数为为组件标签名,第二个为组件构造器</span><br><span class="line"></span><br><span class="line">局部组件</span><br><span class="line">const app &#x3D; new Vue(&#123;</span><br><span class="line">                el: &quot;#app&quot;,</span><br><span class="line">                data: &#123;&#125;,</span><br><span class="line">                methods: &#123;&#125;,</span><br><span class="line">                components: &#123;</span><br><span class="line">                    cpn: cpnC,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">注册组件的语法糖</span><br><span class="line"> Vue.component(&quot;cpn&quot;, &#123;</span><br><span class="line">                template: &#96;</span><br><span class="line">                &lt;div&gt;</span><br><span class="line">                &lt;h2&gt;titile&lt;&#x2F;h2&gt;</span><br><span class="line">                &lt;p&gt;我是内容1&lt;&#x2F;p&gt;</span><br><span class="line">                &lt;p&gt;我是内容2&lt;&#x2F;p&gt;</span><br><span class="line">                &lt;&#x2F;div&gt;</span><br><span class="line">                &#96;,</span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure><h3 id="3-使用组件"><a href="#3-使用组件" class="headerlink" title="3.使用组件"></a>3.使用组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">必须挂载到vue实例下</span><br></pre></td></tr></table></figure><h4 id="3-1-最佳"><a href="#3-1-最佳" class="headerlink" title="3-1.最佳"></a>3-1.最佳</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">const</span> cpn = &#123;</span></span><br><span class="line"><span class="javascript">              template: <span class="string">&quot;#cpn&quot;</span>,</span></span><br><span class="line">          &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">          <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">              el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">              data: &#123;  &#125;,</span><br><span class="line">              methods: &#123;&#125;,</span><br><span class="line">              components: &#123;</span><br><span class="line">                  cpn,</span><br><span class="line">              &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">      <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-父子组件"><a href="#4-父子组件" class="headerlink" title="4.父子组件"></a>4.父子组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">         const cpnC1 = Vue.extend(&#123;</span><br><span class="line">             template: `</span><br><span class="line">             <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">h2</span>&gt;</span>titile<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是儿子<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">             `,</span><br><span class="line">         &#125;);</span><br><span class="line">         const cpnC2 = Vue.extend(&#123;</span><br><span class="line">             template: `</span><br><span class="line">             <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">h2</span>&gt;</span>titile<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是父亲<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">cpn1</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn1</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">             `,</span><br><span class="line">             components: &#123;</span><br><span class="line">                 cpn1: cpnC1,</span><br><span class="line">             &#125;,</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root组件</span><br><span class="line">         const app = new Vue(&#123;</span><br><span class="line">             el: &quot;#app&quot;,</span><br><span class="line">             data: &#123;&#125;,</span><br><span class="line">             methods: &#123;&#125;,</span><br><span class="line">             components: &#123;</span><br><span class="line">                 cpn2: cpnC2,</span><br><span class="line">             &#125;,</span><br><span class="line">         &#125;);</span><br></pre></td></tr></table></figure><h3 id="5-组件模板"><a href="#5-组件模板" class="headerlink" title="5.组件模板"></a>5.组件模板</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1.        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/x-template&quot;</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>titile<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是哈哈哈<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">2.</span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>titile<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是哈哈哈<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-组件的data为什么必须是函数"><a href="#6-组件的data为什么必须是函数" class="headerlink" title="6.组件的data为什么必须是函数"></a>6.组件的data为什么必须是函数</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"> const cpnC1 = Vue.extend(&#123;</span><br><span class="line">                template: cpn,</span><br><span class="line">                data() &#123;</span><br><span class="line">                    return &#123;</span><br><span class="line">                        title: &quot;我是title&quot;,</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">      Vue.component(&quot;cpn&quot;, &#123;</span><br><span class="line">        template: &quot;#cpn&quot;,</span><br><span class="line">           data() &#123;</span><br><span class="line">          return &#123;</span><br><span class="line">            counter: 0,</span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">如果返回的是一个对象,那组件用的都是一个对象的内容,会造成连锁反应</span><br><span class="line"></span><br><span class="line">如果需要返回同一个对象,可以使用下面的写法</span><br><span class="line">const obj = &#123;</span><br><span class="line">        counter: 0,</span><br><span class="line">      &#125;;</span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">        data() &#123;</span><br><span class="line">          return obj;</span><br><span class="line">        &#125;,</span><br></pre></td></tr></table></figure><h3 id="7-父子组件之间的通信"><a href="#7-父子组件之间的通信" class="headerlink" title="7.父子组件之间的通信"></a>7.父子组件之间的通信</h3><h4 id="1-父向子通信"><a href="#1-父向子通信" class="headerlink" title="1.父向子通信"></a>1.父向子通信</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">props</span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">cpn1</span> <span class="attr">:cmovies</span>=<span class="string">&quot;movies&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in cmovies&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">1.使用数组</span><br><span class="line"> props: [&quot;cmovies&quot;],</span><br><span class="line"></span><br><span class="line">2.使用对象</span><br><span class="line">props: &#123;</span><br><span class="line">cmovies: Array,</span><br><span class="line"> &#125;,</span><br><span class="line"></span><br><span class="line">字符串</span><br><span class="line">props: &#123;</span><br><span class="line">cmovies: &#123;</span><br><span class="line">type: String,</span><br><span class="line">default: &quot;aaaa&quot;,</span><br><span class="line">required: true,</span><br><span class="line"> &#125;,</span><br><span class="line"> &#125;,</span><br><span class="line">对象或者数组 默认值必须以工厂函数返回一个默认值</span><br><span class="line">props: &#123;</span><br><span class="line">cmovies: &#123;</span><br><span class="line">type: Array,</span><br><span class="line">default() &#123;</span><br><span class="line">        return [];</span><br><span class="line">        &#125;</span><br><span class="line">required: true,</span><br><span class="line"> &#125;,</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><h4 id="2-子向父通信"><a href="#2-子向父通信" class="headerlink" title="2.子向父通信"></a>2.子向父通信</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">自定义事件</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">      //接受子组件过来的事件</span><br><span class="line">            <span class="tag">&lt;<span class="name">cpn</span> @<span class="attr">item-click</span>=<span class="string">&quot;cpnClick&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-for</span>=<span class="string">&quot;item in categories&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;btnClick(item)&quot;</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> cpn = &#123;</span></span><br><span class="line"><span class="javascript">                template: <span class="string">&quot;#cpn&quot;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> &#123;</span></span><br><span class="line">                        categories: [</span><br><span class="line">                            &#123;</span><br><span class="line"><span class="javascript">                                id: <span class="string">&quot;1&quot;</span>,</span></span><br><span class="line"><span class="javascript">                                name: <span class="string">&quot;热门推荐&quot;</span>,</span></span><br><span class="line">                            &#125;,</span><br><span class="line">                            &#123;</span><br><span class="line"><span class="javascript">                                id: <span class="string">&quot;2&quot;</span>,</span></span><br><span class="line"><span class="javascript">                                name: <span class="string">&quot;手机数码&quot;</span>,</span></span><br><span class="line">                            &#125;,</span><br><span class="line">                            &#123;</span><br><span class="line"><span class="javascript">                                id: <span class="string">&quot;3&quot;</span>,</span></span><br><span class="line"><span class="javascript">                                name: <span class="string">&quot;家用家电&quot;</span>,</span></span><br><span class="line">                            &#125;,</span><br><span class="line">                            &#123;</span><br><span class="line"><span class="javascript">                                id: <span class="string">&quot;4&quot;</span>,</span></span><br><span class="line"><span class="javascript">                                name: <span class="string">&quot;电脑办公&quot;</span>,</span></span><br><span class="line">                            &#125;,</span><br><span class="line">                        ],</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;,</span><br><span class="line">                methods: &#123;</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">btnClick</span>(<span class="params">item</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">//发射到父组件</span></span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.$emit(<span class="string">&quot;item-click&quot;</span>, item);</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">                data: &#123; movies: [1, 2, 3, 4, 5] &#125;,</span><br><span class="line">                methods: &#123;</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">cpnClick</span>(<span class="params">item</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(item.name);</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">                components: &#123;</span><br><span class="line">                    cpn,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-父访问子"><a href="#3-父访问子" class="headerlink" title="3.父访问子"></a>3.父访问子</h4><h5 id="1-children"><a href="#1-children" class="headerlink" title="(1).$children"></a>(1).$children</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">const app = new Vue(&#123;</span><br><span class="line">               el: &quot;#app&quot;,</span><br><span class="line">               data: &#123;</span><br><span class="line">                   message: &quot;&quot;,</span><br><span class="line">               &#125;,</span><br><span class="line">               methods: &#123;</span><br><span class="line">                   btnClick() &#123;</span><br><span class="line">                       console.log(this.$children);</span><br><span class="line"></span><br><span class="line">                       for (let i of this.$children) &#123;</span><br><span class="line">                           console.log(i.name);</span><br><span class="line">                           i.showMessage();</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;,</span><br><span class="line">               &#125;,</span><br><span class="line">               components: &#123;</span><br><span class="line">                   cpn: &#123;</span><br><span class="line">                       template: &quot;#cpn&quot;,</span><br><span class="line">                       data() &#123;</span><br><span class="line">                           return &#123;</span><br><span class="line">                               name: &quot;woshi cpn&quot;,</span><br><span class="line">                           &#125;;</span><br><span class="line">                       &#125;,</span><br><span class="line">                       methods: &#123;</span><br><span class="line">                           showMessage() &#123;</span><br><span class="line">                               console.log(&quot;123&quot;);</span><br><span class="line">                           &#125;,</span><br><span class="line">                       &#125;,</span><br><span class="line">                   &#125;,</span><br><span class="line">               &#125;,</span><br><span class="line">           &#125;);</span><br></pre></td></tr></table></figure><h5 id="2-refs"><a href="#2-refs" class="headerlink" title="(2).$refs"></a>(2).$refs</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cpn</span> <span class="attr">ref</span>=<span class="string">&quot;aaa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">默认是一个空对象,必须在组件标签加入ref=&quot;aaa&quot;</span><br><span class="line">const app = new Vue(&#123;</span><br><span class="line">                el: &quot;#app&quot;,</span><br><span class="line">                data: &#123;</span><br><span class="line">                    message: &quot;&quot;,</span><br><span class="line">                &#125;,</span><br><span class="line">                methods: &#123;</span><br><span class="line">                    btnClick() &#123;</span><br><span class="line">                        console.log(this.$refs);</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">                components: &#123;</span><br><span class="line">                    cpn: &#123;</span><br><span class="line">                        template: &quot;#cpn&quot;,</span><br><span class="line">                        data() &#123;</span><br><span class="line">                            return &#123;</span><br><span class="line">                                name: &quot;woshi cpn&quot;,</span><br><span class="line">                            &#125;;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        methods: &#123;</span><br><span class="line">                            showMessage() &#123;</span><br><span class="line">                                console.log(&quot;123&quot;);</span><br><span class="line">                            &#125;,</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br></pre></td></tr></table></figure><h4 id="4-子访问父"><a href="#4-子访问父" class="headerlink" title="4.子访问父"></a>4.子访问父</h4><h5 id="1-parent"><a href="#1-parent" class="headerlink" title="(1).parent"></a>(1).parent</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">const app = new Vue(&#123;</span><br><span class="line">               el: &quot;#app&quot;,</span><br><span class="line">               data: &#123;</span><br><span class="line">                   message: &quot;123&quot;,</span><br><span class="line">               &#125;,</span><br><span class="line">               methods: &#123;&#125;,</span><br><span class="line">               components: &#123;</span><br><span class="line">                   cpn: &#123;</span><br><span class="line">                       template: &quot;#cpn&quot;,</span><br><span class="line"></span><br><span class="line">                       methods: &#123;</span><br><span class="line">                           btnClick() &#123;</span><br><span class="line">                               console.log(this.$parent);</span><br><span class="line">                           &#125;,</span><br><span class="line">                       &#125;,</span><br><span class="line">                   &#125;,</span><br><span class="line">               &#125;,</span><br><span class="line">           &#125;);</span><br></pre></td></tr></table></figure><h3 id="8-插槽slot"><a href="#8-插槽slot" class="headerlink" title="8.插槽slot"></a>8.插槽slot</h3><h4 id="1-基本使用"><a href="#1-基本使用" class="headerlink" title="1.基本使用"></a>1.基本使用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">为了让我们的组件有更好的扩展性</span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>我是组件<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">slot可以设置一个默认值</span><br><span class="line"><span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;<span class="name">button</span>&gt;</span>插槽<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-具名插槽的使用"><a href="#2-具名插槽的使用" class="headerlink" title="2.具名插槽的使用"></a>2.具名插槽的使用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">使用</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Here might be a page title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:default</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>A paragraph for the main content.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>And another one.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Here&#x27;s some contact info<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">模板</span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">显示</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Here might be a page title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>A paragraph for the main content.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>And another one.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Here&#x27;s some contact info<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-编译作用域"><a href="#3-编译作用域" class="headerlink" title="3.编译作用域"></a>3.编译作用域</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在哪里使用,作用域就在哪里</span><br><span class="line">父找父 子找子</span><br></pre></td></tr></table></figure><h4 id="4-作用域插槽的使用"><a href="#4-作用域插槽的使用" class="headerlink" title="4.作用域插槽的使用"></a>4.作用域插槽的使用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">父组件替换插槽的标签,但是内容由子组件来提供</span><br><span class="line"><span class="tag">&lt;<span class="name">current-user</span>&gt;</span></span><br><span class="line">    子组件</span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">slot</span> <span class="attr">:user</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; user.lastName &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">current-user</span>&gt;</span></span><br><span class="line"></span><br><span class="line">使用</span><br><span class="line"><span class="tag">&lt;<span class="name">current-user</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot</span>=<span class="string">&quot;slotProps&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; slotProps.user.firstName &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">current-user</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="四-模块化开发"><a href="#四-模块化开发" class="headerlink" title="四.模块化开发"></a>四.模块化开发</h2><h3 id="1-匿名函数解决"><a href="#1-匿名函数解决" class="headerlink" title="1.匿名函数解决"></a>1.匿名函数解决</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">(function()&#123;</span><br><span class="line">&#125;)()</span><br><span class="line">会造成无法复用一些代码段</span><br><span class="line"></span><br><span class="line">导出对象</span><br><span class="line">let obj = &#123;&#125;;</span><br><span class="line">obj.flag = flag;</span><br><span class="line">obj.sun = sun;</span><br><span class="line">return obj</span><br><span class="line">然后就可以使用对象里面的东西了</span><br><span class="line">我们只需要保证模块名称不一样</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-commonJs"><a href="#2-commonJs" class="headerlink" title="2.commonJs"></a>2.commonJs</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">导出</span><br><span class="line">module.exports = &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">导入</span><br><span class="line">let &#123;xx,xx&#125; = require(&quot;文件名&quot;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-ES"><a href="#3-ES" class="headerlink" title="3.ES"></a>3.ES</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">需要设置html代码引入js文件的类型设置为module</span><br><span class="line">export &#123;</span><br><span class="line">flag,sum</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import &#123; &#125; from &quot;文件名&quot;;</span><br></pre></td></tr></table></figure><h2 id="五-webpack"><a href="#五-webpack" class="headerlink" title="五.webpack"></a>五.webpack</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">模块化打包工具</span><br><span class="line"></span><br><span class="line">webpack .\src\main.js dist/bundle.js</span><br></pre></td></tr></table></figure><h3 id="1-config"><a href="#1-config" class="headerlink" title="1.config"></a>1.config</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">npm install webpack@<span class="number">3.6</span><span class="number">.0</span> -g 全局安装</span><br><span class="line"></span><br><span class="line">npm init 初始化</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: <span class="string">&quot;./src/main.js&quot;</span>,</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.join(__dirname, <span class="string">&quot;dist&quot;</span>),</span><br><span class="line">        filename: <span class="string">&quot;bundle.js&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">配置 npm run build</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;meetwevpack&quot;</span>,</span><br><span class="line">  <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">  <span class="string">&quot;description&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;main&quot;</span>: <span class="string">&quot;index.js&quot;</span>,</span><br><span class="line">  <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;test&quot;</span>: <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build&quot;</span>: <span class="string">&quot;webpack&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;author&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;license&quot;</span>: <span class="string">&quot;ISC&quot;</span>,</span><br><span class="line">  <span class="string">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;webpack&quot;</span>: <span class="string">&quot;^3.6.0&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">npm install webpack@<span class="number">3.6</span><span class="number">.0</span> --save--dev 局部安装</span><br></pre></td></tr></table></figure><h3 id="2-loader"><a href="#2-loader" class="headerlink" title="2.loader"></a>2.loader</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">&quot;./src/main.js&quot;</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    path: path.resolve(__dirname, <span class="string">&quot;dist&quot;</span>),</span><br><span class="line">    filename: <span class="string">&quot;bundle.js&quot;</span>,</span><br><span class="line">    <span class="comment">// 涉及到url自动添加路径</span></span><br><span class="line">    publicPath: <span class="string">&quot;dist/&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 转义. 匹配所有css文件</span></span><br><span class="line">        test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        <span class="comment">// css-loader只负责将css文件进行加载</span></span><br><span class="line">        <span class="comment">// style-loader负责将样式添加到DOM中</span></span><br><span class="line">        <span class="comment">// 使用多个loader的时候，从右向左读取</span></span><br><span class="line">        use: [<span class="string">&quot;style-loader&quot;</span>, <span class="string">&quot;css-loader&quot;</span>],</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">&quot;style-loader&quot;</span>, <span class="comment">// 从 JS 中创建样式节点</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">&quot;css-loader&quot;</span>, <span class="comment">// 转化 CSS 为 CommonJS</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">&quot;less-loader&quot;</span>, <span class="comment">// 编译 Less 为 CSS</span></span><br><span class="line">          &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.(png|jpg|gif)$/i</span>,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">&quot;url-loader&quot;</span>,</span><br><span class="line">            options: &#123;</span><br><span class="line">              <span class="comment">// 当加载的图片小于limit时，会将图片编译成base64字符串形式</span></span><br><span class="line">              <span class="comment">// 大于的话会报错，Cannot find module &#x27;file-loader&#x27;</span></span><br><span class="line">              <span class="comment">// npm install file-loader --save-dev</span></span><br><span class="line">              <span class="comment">// 没有显示？报错文件找不到 路径 b939991dba660315bb66570ce2e58b6b.jpg</span></span><br><span class="line">              <span class="comment">// base64不需要单独的文件进行存储</span></span><br><span class="line">              <span class="comment">// 文件需要打包 添加publicPath</span></span><br><span class="line">              limit: <span class="number">8000</span>,</span><br><span class="line">              <span class="comment">// 命名规范</span></span><br><span class="line">              name: <span class="string">&quot;img/[name].[hash:8].[ext]&quot;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.m?js$/</span>,</span><br><span class="line">        <span class="comment">// 排除</span></span><br><span class="line">        exclude: <span class="regexp">/(node_modules|bower_components)/</span>,</span><br><span class="line">        use: &#123;</span><br><span class="line">          loader: <span class="string">&quot;babel-loader&quot;</span>,</span><br><span class="line">          options: &#123;</span><br><span class="line">            presets: [<span class="string">&quot;es2015&quot;</span>],</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  resolve: &#123;</span><br><span class="line">        <span class="comment">// 扩展名省略</span></span><br><span class="line">        extensions: [<span class="string">&quot;.js&quot;</span>, <span class="string">&quot;.css&quot;</span>, <span class="string">&quot;.vue&quot;</span>],</span><br><span class="line">        alias: &#123;</span><br><span class="line">            vue$: <span class="string">&quot;vue/dist/vue.esm.js&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> webpack.BannerPlugin(<span class="string">&quot;最终版权归aaa所有&quot;</span>),</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: <span class="string">&quot;index.html&quot;</span>,</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="comment">// 开发阶段不推荐打开 js代码压缩</span></span><br><span class="line">        <span class="comment">// new UglifyjsWebpackPlugin(),</span></span><br><span class="line">    ],</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        <span class="comment">//为哪一个文件进行服务</span></span><br><span class="line">        contentBase: <span class="string">&quot;./dist&quot;</span>,</span><br><span class="line">        <span class="comment">// 是否实时更新</span></span><br><span class="line">        inline: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h2 id="六-Vue-cli"><a href="#六-Vue-cli" class="headerlink" title="六.Vue-cli"></a>六.Vue-cli</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue&#x2F;li</span><br><span class="line"> npm install @vue&#x2F;cli-init -g</span><br><span class="line"></span><br><span class="line">vue init webpack demo 项目初始化</span><br><span class="line"></span><br><span class="line">vue create xxx</span><br></pre></td></tr></table></figure><h2 id="七-vue-router"><a href="#七-vue-router" class="headerlink" title="七.vue-router"></a>七.vue-router</h2><h4 id="1-路由操作"><a href="#1-路由操作" class="headerlink" title="1.路由操作"></a>1.路由操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">location.hash &#x3D; &#39;&#39;</span><br><span class="line">location.href &#x3D; &#39;&#39;</span><br><span class="line">history.pushState.(&#123;&#125;,&#39;&#39;,&#39;home&#39;)</span><br><span class="line">history.foward()</span><br><span class="line">history.back()</span><br><span class="line">任意回退</span><br><span class="line">history.go()</span><br><span class="line">回退不可以点击</span><br><span class="line">histrory.repalceState(&#123;&#125;,&#39;&#39;,&#39;about&#39;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-vue-router"><a href="#2-vue-router" class="headerlink" title="2.vue-router"></a>2.vue-router</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link to&#x3D;&quot;&#x2F;home&quot;&gt;Home&lt;&#x2F;router-link&gt; |</span><br><span class="line">&lt;router-link to&#x3D;&quot;&#x2F;about&quot;&gt;About&lt;&#x2F;router-link&gt;</span><br><span class="line"></span><br><span class="line">显示的标签</span><br><span class="line">&lt;router-view&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">改为history模式</span><br><span class="line">const router &#x3D; new VueRouter(&#123;</span><br><span class="line">  routes,</span><br><span class="line">  mode: &quot;history&quot;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">botton</span><br><span class="line">    &lt;router-link to&#x3D;&quot;&#x2F;home&quot; tag&#x3D;&quot;button&quot;&gt;首页&lt;&#x2F;router-link&gt;</span><br><span class="line">    &lt;router-link to&#x3D;&quot;&#x2F;about&quot; tag&#x3D;&quot;button&quot;&gt;关于&lt;&#x2F;router-link&gt;</span><br><span class="line"></span><br><span class="line">不能返回</span><br><span class="line"> &lt;router-link to&#x3D;&quot;&#x2F;home&quot; tag&#x3D;&quot;button&quot; replace&gt;首页&lt;&#x2F;router-link&gt;</span><br><span class="line">    &lt;router-link to&#x3D;&quot;&#x2F;about&quot; tag&#x3D;&quot;button&quot; replace&gt;关于&lt;&#x2F;router-link&gt;</span><br><span class="line"></span><br><span class="line">活跃状态的class</span><br><span class="line"> &lt;router-link to&#x3D;&quot;&#x2F;home&quot; tag&#x3D;&quot;button&quot; replace active-class&#x3D;&quot;active&quot;&gt;首页&lt;&#x2F;router-link&gt;</span><br><span class="line">    &lt;router-link to&#x3D;&quot;&#x2F;about&quot; tag&#x3D;&quot;button&quot; replace active-class&#x3D;&quot;active&quot;&gt;关于&lt;&#x2F;router-link&gt;</span><br><span class="line">    或者统一在路由中修改</span><br><span class="line">      routes,</span><br><span class="line">      mode: &quot;history&quot;,</span><br><span class="line">      linkActiveClass: &quot;active&quot;</span><br><span class="line">自己写标签修改路由</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;button @click&#x3D;&quot;home()&quot;&gt;首页&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;button @click&#x3D;&quot;about()&quot;&gt;关于&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;router-view&#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;App&#39;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    home()&#123;</span><br><span class="line">      this.$router.replace(&#39;&#x2F;home&#39;);</span><br><span class="line">    &#125;,about()&#123;</span><br><span class="line">      this.$router.replace(&#39;&#x2F;about&#39;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="3-动态路由"><a href="#3-动态路由" class="headerlink" title="3.动态路由"></a>3.动态路由</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">  &#123;</span><br><span class="line">    path: &quot;&#x2F;user&#x2F;:userid&quot;,</span><br><span class="line">    component: User</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&lt;router-link :to&#x3D;&quot;&#39;&#x2F;user&#x2F;&#39;+userid&quot; &gt;首页&lt;&#x2F;router-link&gt;</span><br><span class="line"></span><br><span class="line">computed:&#123;</span><br><span class="line">       userId()&#123;</span><br><span class="line">           return this.$route.params.userId</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="4-路由的软加载"><a href="#4-路由的软加载" class="headerlink" title="4.路由的软加载"></a>4.路由的软加载</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">const Home &#x3D; () &#x3D;&gt; import(&quot;..&#x2F;components&#x2F;Home.vue&quot;);</span><br><span class="line">const About &#x3D; () &#x3D;&gt; import(&quot;..&#x2F;components&#x2F;About.vue&quot;);</span><br><span class="line">const User &#x3D; () &#x3D;&gt; import(&quot;..&#x2F;components&#x2F;User.vue&quot;);</span><br></pre></td></tr></table></figure><h4 id="5-嵌套路由"><a href="#5-嵌套路由" class="headerlink" title="5.嵌套路由"></a>5.嵌套路由</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h2&gt;我是首页&lt;&#x2F;h2&gt;</span><br><span class="line">        &lt;router-link to&#x3D;&quot;&#x2F;home&#x2F;news&quot;  &gt;新闻&lt;&#x2F;router-link&gt;</span><br><span class="line">        &lt;router-link to&#x3D;&quot;&#x2F;home&#x2F;messages&quot;  &gt;信息&lt;&#x2F;router-link&gt;</span><br><span class="line">        &lt;router-view&gt;&lt;&#x2F;router-view&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">   name:&#39;Home&#39;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> path: &quot;&#x2F;home&quot;,</span><br><span class="line">    component: Home,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: &quot;news&quot;,</span><br><span class="line">        component: News</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: &quot;messages&quot;,</span><br><span class="line">        component: Messages</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure><h4 id="6-传递数据"><a href="#6-传递数据" class="headerlink" title="6.传递数据"></a>6.传递数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> &lt;router-link :to&#x3D;&quot;&#123;path:&#39;&#x2F;profile&#39;,query:&#123;name:id,imgUrl:imgUrl&#125;&#125;&quot; &gt;档案&lt;&#x2F;router-link&gt;</span><br><span class="line">$route.query.name</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="7-全局导航守卫"><a href="#7-全局导航守卫" class="headerlink" title="7.全局导航守卫"></a>7.全局导航守卫</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">前置钩子hook</span><br><span class="line">router.beforeEach((to, from, next) &#x3D;&gt; &#123;</span><br><span class="line">  document.title &#x3D; to.meta.title; &#x2F;&#x2F;to.matched[0].meta.title;</span><br><span class="line">  next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">后置钩子</span><br><span class="line">router.afterEach((to,from)&#x3D;&gt;&#123;</span><br><span class="line">  </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="1-keep-alive"><a href="#1-keep-alive" class="headerlink" title="1.keep-alive"></a>1.keep-alive</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">保留状态</span><br><span class="line"></span><br><span class="line">    &lt;keep-alive &gt;</span><br><span class="line">      &lt;router-view &#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;keep-alive&gt;</span><br><span class="line">排除</span><br><span class="line">exclude&#x3D;&quot;Profile,User&quot;</span><br><span class="line">包含</span><br><span class="line">include </span><br></pre></td></tr></table></figure><h2 id="八-promise"><a href="#八-promise" class="headerlink" title="八.promise"></a>八.promise</h2><h3 id="1-base"><a href="#1-base" class="headerlink" title="1.base"></a>1.base</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;处理ing&quot;</span>);</span><br><span class="line">        resolve();</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;)</span><br><span class="line">    .then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;处理ing2&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                resolve();</span><br><span class="line">            &#125;, <span class="number">1000</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;end&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;处理ing&quot;</span>);</span><br><span class="line">                resolve();</span><br><span class="line">            &#125;, <span class="number">1000</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">            .then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;处理ing2&quot;</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">            .catch(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;处理失败&quot;</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">或者</span><br><span class="line">            <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// resolve(&quot;Hello Vuejs&quot;);</span></span><br><span class="line">                    reject(<span class="string">&quot;error message&quot;</span>);</span><br><span class="line">                &#125;, <span class="number">1000</span>);</span><br><span class="line">            &#125;).then(</span><br><span class="line">                (data) =&gt; &#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(data);</span><br><span class="line">                &#125;,</span><br><span class="line">                (err) =&gt; &#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(err);</span><br><span class="line">                &#125;</span><br><span class="line">            );</span><br></pre></td></tr></table></figure><h3 id="2-all方法"><a href="#2-all方法" class="headerlink" title="2.all方法"></a>2.all方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.all([<span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;&#125;), <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;&#125;)]);</span><br></pre></td></tr></table></figure><h2 id="九-vuex"><a href="#九-vuex" class="headerlink" title="九.vuex"></a>九.vuex</h2><h3 id="1-初始化"><a href="#1-初始化" class="headerlink" title="1.初始化"></a>1.初始化</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"></span><br><span class="line">Vue.use(Vuex);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">  state: &#123;&#125;,</span><br><span class="line">  mutations: &#123;&#125;,</span><br><span class="line">  actions: &#123;&#125;,</span><br><span class="line">  getters: &#123;&#125;,</span><br><span class="line">  modules: &#123;&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-具体使用"><a href="#2-具体使用" class="headerlink" title="2.具体使用"></a>2.具体使用</h3><blockquote><p>不是响应式想要使用可以使用Vue.set或者Vue.delete方法</p></blockquote><h4 id="1-state-变量"><a href="#1-state-变量" class="headerlink" title="(1).state(变量)"></a>(1).state(变量)</h4><h4 id="2-mutations-方法"><a href="#2-mutations-方法" class="headerlink" title="(2).mutations(方法)"></a>(2).mutations(方法)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">使用  方法(state)&#123;</span><br><span class="line">    state.xxx</span><br><span class="line">&#125;</span><br><span class="line">修改<span class="built_in">this</span>.$store.commit(<span class="string">&#x27;方法名称&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-getters-计算属性"><a href="#3-getters-计算属性" class="headerlink" title="(3).getters(计算属性)"></a>(3).getters(计算属性)</h4><h4 id="4-modules"><a href="#4-modules" class="headerlink" title="(4).modules"></a>(4).modules</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">modules:&#123;</span><br><span class="line">a:&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-action"><a href="#5-action" class="headerlink" title="(5).action"></a>(5).action</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">异步操作</span><br><span class="line"></span><br><span class="line">方法名称(context)&#123;</span><br><span class="line">context.commit(&#39;方法名称&#39;)</span><br><span class="line">&#125;</span><br><span class="line">使用 this.$store.dispatch(&#39;方法名称&#39;)</span><br></pre></td></tr></table></figure><h2 id="十-axios"><a href="#十-axios" class="headerlink" title="十.axios"></a>十.axios</h2><h3 id="1-基本使用-1"><a href="#1-基本使用-1" class="headerlink" title="1.基本使用"></a>1.基本使用</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">axios(&#123;</span><br><span class="line">  url: <span class="string">&quot;http://123.207.32.32:8000/home/multidata&quot;</span>,</span><br><span class="line">  method: <span class="string">&quot;get&quot;</span>,</span><br><span class="line">  parms:&#123;</span><br><span class="line">      </span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">&#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(res);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-并发"><a href="#2-并发" class="headerlink" title="2.并发"></a>2.并发</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">axios</span><br><span class="line">  .all([</span><br><span class="line">    axios(&#123;</span><br><span class="line">      url: <span class="string">&quot;http://123.207.32.32:8000/home/multidata&quot;</span></span><br><span class="line">    &#125;),</span><br><span class="line">    axios(&#123;</span><br><span class="line">      url: <span class="string">&quot;http://123.207.32.32:8000/home/data&quot;</span>,</span><br><span class="line">      params: &#123;</span><br><span class="line">        type: <span class="string">&quot;sell&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  ])</span><br><span class="line">  .then(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(result);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">可以使用spread分割</span><br><span class="line">  .then(</span><br><span class="line">    axios.spread(<span class="function">(<span class="params">res1, res2</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res1);</span><br><span class="line">      <span class="built_in">console</span>.log(res2);</span><br><span class="line">    &#125;)</span><br><span class="line">  );</span><br></pre></td></tr></table></figure><h3 id="3-配置"><a href="#3-配置" class="headerlink" title="3.配置"></a>3.配置</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">全局</span><br><span class="line">axios.defaults.baseURL </span><br><span class="line">axios.defaults.timeout</span><br><span class="line"></span><br><span class="line">创建实例</span><br><span class="line"><span class="keyword">const</span> instance1 = axios.create(&#123;</span><br><span class="line">  baseURL: <span class="string">&quot;http://123.207.32.32:8000&quot;</span>,</span><br><span class="line">  timeout: <span class="number">5000</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">instance1(&#123;</span><br><span class="line">  url: <span class="string">&quot;/home/multidata&quot;</span></span><br><span class="line">&#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(res);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-network文件夹"><a href="#4-network文件夹" class="headerlink" title="4.network文件夹"></a>4.network文件夹</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">最好建立一个network文件专门进行网络请求</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params">config</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> instacne = axios.create(&#123;</span><br><span class="line">      baseURL: <span class="string">&quot;http://152.136.185.210:8000/api/z8&quot;</span>,</span><br><span class="line">      timeout: <span class="number">5000</span>,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送真正的网络请求</span></span><br><span class="line">    instacne(config)</span><br><span class="line">      .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        resolve(res);</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        reject(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">最终版</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params">config</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> instacne = axios.create(&#123;</span><br><span class="line">    baseURL: <span class="string">&quot;http://152.136.185.210:8000/api/z8&quot;</span>,</span><br><span class="line">    timeout: <span class="number">5000</span>,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 发送真正的网络请求</span></span><br><span class="line">  <span class="keyword">return</span> instacne(config); <span class="comment">// 返回值本来就是Promise</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; request &#125; <span class="keyword">from</span> <span class="string">&quot;./network/request&quot;</span>;</span><br><span class="line"></span><br><span class="line">request(&#123;</span><br><span class="line">  url: <span class="string">&quot;/home/multidata&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">  .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h3 id="5-拦截器"><a href="#5-拦截器" class="headerlink" title="5.拦截器"></a>5.拦截器</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params">config</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> instacne = axios.create(&#123;</span><br><span class="line">    baseURL: <span class="string">&quot;http://123.207.32.32:8000&quot;</span>,</span><br><span class="line">    timeout: <span class="number">5000</span></span><br><span class="line">  &#125;);</span><br><span class="line">    <span class="comment">//拦截器</span></span><br><span class="line">  instacne.interceptors.request.use(</span><br><span class="line">    config =&gt; &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(config);</span><br><span class="line">      <span class="keyword">return</span> config;</span><br><span class="line">    &#125;,</span><br><span class="line">    err =&gt; &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">return</span> instacne(config);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> vue.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> vue.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos安装Git</title>
      <link href="posts/0c740b046a61/"/>
      <url>posts/0c740b046a61/</url>
      
        <content type="html"><![CDATA[<h1 id="centos安装Git"><a href="#centos安装Git" class="headerlink" title="centos安装Git"></a>centos安装Git</h1><h2 id="一-yum安装-版本较低"><a href="#一-yum安装-版本较低" class="headerlink" title="一.yum安装,版本较低"></a>一.yum安装,版本较低</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure><h2 id="二-源码构建"><a href="#二-源码构建" class="headerlink" title="二.源码构建"></a>二.源码构建</h2><p><a href="https://mirrors.edge.kernel.org/pub/software/scm/git/">git官方下载链接</a></p><p>1.解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf git-2.31.1.tar.gz</span><br></pre></td></tr></table></figure><p>2.安装可能所需的依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc-c++ perl-ExtUtils-MakeMaker</span><br></pre></td></tr></table></figure><p>3.安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd git-2.31.1</span><br><span class="line">make configure</span><br><span class="line">./configure --prefix=/usr/local/git</span><br><span class="line">make profix=/usr/local/git</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>4.加入环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p>没有yum install vim</p><p>G移到尾部增加</p><p>i进入编辑模式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> git</span></span><br><span class="line">export GIT_HOME=/usr/local/git</span><br><span class="line">export PATH=$PATH:$GIT_HOME/bin</span><br></pre></td></tr></table></figure><p>ese : wq保存</p><p>刷新环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>5.完成安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425101846554.png" alt="image-20210425101846554"></p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
          <category> centos </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> git </tag>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos安装java</title>
      <link href="posts/c1b49f6cc382/"/>
      <url>posts/c1b49f6cc382/</url>
      
        <content type="html"><![CDATA[<h1 id="Centos安装java"><a href="#Centos安装java" class="headerlink" title="Centos安装java"></a>Centos安装java</h1><h2 id="1-创建文件"><a href="#1-创建文件" class="headerlink" title="1.创建文件"></a>1.创建文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/</span><br><span class="line">mkdir java</span><br><span class="line">cd java</span><br></pre></td></tr></table></figure><h2 id="2-解压"><a href="#2-解压" class="headerlink" title="2.解压"></a>2.解压</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf /root/jdk-8u161-linux-x64.tar.gz -C ./</span><br></pre></td></tr></table></figure><h2 id="3-编辑环境变量"><a href="#3-编辑环境变量" class="headerlink" title="3.编辑环境变量"></a>3.编辑环境变量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;profile</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>尾部追加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/usr/local/java/jdk1.8.0_161</span><br><span class="line">CLASSPATH=$JAVA_HOME/lib/</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line">export PATH JAVA_HOME CLASSPATH</span><br></pre></td></tr></table></figure><h2 id="4-刷新"><a href="#4-刷新" class="headerlink" title="4.刷新"></a>4.刷新</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h2 id="5-完成安装"><a href="#5-完成安装" class="headerlink" title="5.完成安装"></a>5.完成安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br><span class="line">javac</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425103459894.png" alt="image-20210425103459894"></p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
          <category> centos </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> 环境搭建 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos安装Node.js</title>
      <link href="posts/e928bde0b9fd/"/>
      <url>posts/e928bde0b9fd/</url>
      
        <content type="html"><![CDATA[<h1 id="Centos安装Node-js"><a href="#Centos安装Node-js" class="headerlink" title="Centos安装Node.js"></a>Centos安装Node.js</h1><p>1.下载Node.js</p><p><a href="https://nodejs.org/en/download/">Node.js官网下载</a></p><p>2.新建文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/</span><br><span class="line">mkdir node</span><br><span class="line">cd node</span><br></pre></td></tr></table></figure><p>3.解压node.js</p><p>我上传到了/root目录,其他目录也是可以的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xJvf /root/node-v14.16.1-linux-x64.tar.xz -C ./</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.环境变量</p><p>编辑~/.bash_profile文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br></pre></td></tr></table></figure><p>末尾追加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Node.js</span></span><br><span class="line">export PATH=/usr/local/node/node-v14.16.1-linux-x64/bin:$PATH</span><br></pre></td></tr></table></figure><p>刷新</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425102715528.png" alt="image-20210425102715528"></p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
          <category> centos </category>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> 环境搭建 </tag>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos安装Python3环境</title>
      <link href="posts/ce035e3e001e/"/>
      <url>posts/ce035e3e001e/</url>
      
        <content type="html"><![CDATA[<h1 id="Centos安装Python3环境"><a href="#Centos安装Python3环境" class="headerlink" title="Centos安装Python3环境"></a>Centos安装Python3环境</h1><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425095236594.png" alt="image-20210425095236594"></p><p>先看看有没有,有的话可以跳过</p><p><a href="https://www.python.org/downloads/source/">Python官网下载</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425100513844.png" alt="image-20210425100513844"></p><p>这样的就是</p><p>1.上传python3到/root目录,解压文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf Python-3.8.6.tgz</span><br></pre></td></tr></table></figure><p>2.下载预备环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlit-devel readline-devel tk-devel gcc make</span><br></pre></td></tr></table></figure><p>3.安装</p><blockquote><p>这里制定安装目录为/usr/local/python3</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd Python-3.8.6</span><br><span class="line">./configure prefix=/usr/local/python3</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p><del>等好久..</del></p><p>4.设置软链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/python3/bin/python3 /usr/bin/python3</span><br><span class="line">ln -s /usr/local/python3/bin/pip3 /usr/bin/pip3</span><br></pre></td></tr></table></figure><p>5.安装成功</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425100212427.png" alt="image-20210425100212427"></p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
          <category> centos </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> 环境搭建 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos安装Docker</title>
      <link href="posts/78a32cbab478/"/>
      <url>posts/78a32cbab478/</url>
      
        <content type="html"><![CDATA[<h1 id="Centos安装Docker"><a href="#Centos安装Docker" class="headerlink" title="Centos安装Docker"></a>Centos安装Docker</h1><h2 id="1-yum安装依赖"><a href="#1-yum安装依赖" class="headerlink" title="1.yum安装依赖"></a>1.yum安装依赖</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils</span><br></pre></td></tr></table></figure><h2 id="2-配置镜像"><a href="#2-配置镜像" class="headerlink" title="2.配置镜像"></a>2.配置镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line">sudo sed -i &#x27;s/download.docker.com/mirrors.aliyun.com\/docker-ce/g&#x27; /etc/yum.repos.d/docker-ce.repo</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-安装"><a href="#3-安装" class="headerlink" title="3.安装"></a>3.安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><h2 id="4-开启服务"><a href="#4-开启服务" class="headerlink" title="4.开启服务"></a>4.开启服务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable docker</span><br><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><h2 id="3-查看安装结果"><a href="#3-查看安装结果" class="headerlink" title="3.查看安装结果"></a>3.查看安装结果</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure><h2 id="4-开机启动"><a href="#4-开机启动" class="headerlink" title="4.开机启动"></a>4.开机启动</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker.service</span><br></pre></td></tr></table></figure><h2 id="5-配置DOCKER镜像"><a href="#5-配置DOCKER镜像" class="headerlink" title="5.配置DOCKER镜像"></a>5.配置DOCKER镜像</h2><p>输入一下命令即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://hub-mirror.c.163.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="6-安装成功"><a href="#6-安装成功" class="headerlink" title="6.安装成功"></a>6.安装成功</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425112226262.png" alt="image-20210425112226262"></p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
          <category> centos </category>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> 环境搭建 </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos系统环境搭建</title>
      <link href="posts/2dfcc54038e4/"/>
      <url>posts/2dfcc54038e4/</url>
      
        <content type="html"><![CDATA[<h2 id="一-虚拟机安装Centos"><a href="#一-虚拟机安装Centos" class="headerlink" title="一.虚拟机安装Centos"></a>一.虚拟机安装Centos</h2><blockquote><p>可以选择带GUI版本和命令版</p></blockquote><p><a href="https://mirrors.aliyun.com/centos/7/isos/x86_64/">阿里云centos7下载镜像</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425085945252.png" alt="image-20210425085945252"></p><p>这里建议选择命令行版本最小化安装吧,<del>GUI版本没啥好的.</del></p><ol><li>首先ctrl+N新建一个虚拟机</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425090529936.png" alt="image-20210425090529936"></p><ol start="2"><li>选择.iso镜像</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425090622607.png" alt="image-20210425090622607"></p><ol start="3"><li><p>修改虚拟机名称和安装位置</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425090718759.png" alt="image-20210425090718759"></p></li><li><p>选择虚拟机硬盘大小,看实际需求选择</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425091019326.png" alt="image-20210425091019326"></p></li><li><p>完成打开虚拟机</p></li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425091040739.png" alt="image-20210425091040739"></p><ol start="6"><li>等待一会安装完成进入配置界面</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425091310671.png" alt="image-20210425091310671"></p><ol start="7"><li><p>选择英文或者往下拉选择简体中文</p></li><li><p>点击网络配置一下网络和修改一下主机名字</p><p>8.1首先在左边虚拟机右键选择设置进入</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425091812373.png" alt="image-20210425091812373"></p><blockquote><p>在家里用有路由器可以选择桥接复制状态，然后在路由器中配置静态ip</p><p>当然也可以使用NAT模式</p></blockquote><p>8.2配置ip</p><p>这里点击配置选择静态ip,设置一个路由器下的静态ip或NAT.</p><p>记得DNS要选择正确(比如114.114.114.114),我这里选择的是路由器的网关,要不到时候可能会异常</p></li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425092705835.png" alt="image-20210425092705835"></p><p>​        忘记设置可以使用下面的方法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line"></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=824ec4bd-a9ae-4410-8346-17ce7f3dd111</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.31.21</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.31.1</span><br><span class="line">DNS1=119.29.29.29</span><br><span class="line"></span><br><span class="line">systemctl restart network.service</span><br></pre></td></tr></table></figure><p>​                8.点击安装,设置root密码</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425092135913.png" alt="image-20210425092135913"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425092207540.png" alt="image-20210425092207540"></p><p>当然你也可以创建一个新用户</p><p>完成安装</p><p>9.登录成功</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425093024602.png" alt="image-20210425093024602"></p><h2 id="二-配置SSH"><a href="#二-配置SSH" class="headerlink" title="二.配置SSH"></a>二.配置SSH</h2><p>1.安装 网络工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools</span><br></pre></td></tr></table></figure><p>2.看看ip配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>出现前面配置的ip就可以了</p><p>3.查看ssh版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -V</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425094118082.png" alt="image-20210425094118082"></p><p>4.ssh登录</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425094234388.png" alt="image-20210425094234388"></p><p>接受并保存</p><h2 id="三-安装python3环境"><a href="#三-安装python3环境" class="headerlink" title="三.安装python3环境"></a>三.安装python3环境</h2><p><a href="https://www.codelorin.cn/posts/ce035e3e001e/">python3</a></p><h2 id="四-安装Node-js环境"><a href="#四-安装Node-js环境" class="headerlink" title="四.安装Node.js环境"></a>四.安装Node.js环境</h2><p><a href="https://www.codelorin.cn/posts/e928bde0b9fd/">Node.js</a></p><h2 id="五-安装git"><a href="#五-安装git" class="headerlink" title="五.安装git"></a>五.安装git</h2><p><a href="https://www.codelorin.cn/posts/0c740b046a61/">git</a></p><h2 id="六-安装java"><a href="#六-安装java" class="headerlink" title="六.安装java"></a>六.安装java</h2><p><a href="https://www.codelorin.cn/posts/c1b49f6cc382/">java</a></p><h2 id="七-安装docker"><a href="#七-安装docker" class="headerlink" title="七.安装docker"></a>七.安装docker</h2><p><a href="https://www.codelorin.cn/posts/78a32cbab478/">docker</a></p><h2 id="八-下载软件打包"><a href="#八-下载软件打包" class="headerlink" title="八.下载软件打包"></a>八.下载软件打包</h2><p>链接：<a href="https://pan.baidu.com/s/1TRPoB2_hxPSFbYh_Xep6DQ">https://pan.baidu.com/s/1TRPoB2_hxPSFbYh_Xep6DQ</a><br>提取码：6666 </p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
          <category> centos </category>
          
          <category> 虚拟机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> 环境搭建 </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为你的hexo博客添加全局吸底并且收入侧边栏的Aplayer</title>
      <link href="posts/28649b6f0095/"/>
      <url>posts/28649b6f0095/</url>
      
        <content type="html"><![CDATA[<h1 id="为你的hexo博客添加全局吸底并且收入侧边栏的Aplayer"><a href="#为你的hexo博客添加全局吸底并且收入侧边栏的Aplayer" class="headerlink" title="为你的hexo博客添加全局吸底并且收入侧边栏的Aplayer"></a>为你的hexo博客添加全局吸底并且收入侧边栏的Aplayer</h1><blockquote><p>最终效果</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/20210429142541.png" alt="image-20210429142000885"></p><h2 id="1-收入侧边栏"><a href="#1-收入侧边栏" class="headerlink" title="1.收入侧边栏"></a>1.收入侧边栏</h2><p><img src= "/img/loading.gif" data-lazy-src="https://z3.ax1x.com/2021/04/29/gFqsET.png" alt="image-20210429134930335"></p><p>找到butterfly配置文件APlayer.min.css把他下载下来,上图第一个</p><p>复制代码进入<a href="https://tool.oschina.net/codeformat/css%E6%A0%BC%E5%BC%8F%E5%8C%96">https://tool.oschina.net/codeformat/css格式化</a></p><p>由于.aplayer-body已经开启了fixed定位,只要简单修改一下left并设置最高优先级即可收入侧边栏</p><p>我们只需要在css中加入以下代码即可实现收入侧边栏</p><p>在代码最后加入即可</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.aplayer</span><span class="selector-class">.aplayer-narrow</span> <span class="selector-class">.aplayer-body</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">66px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.aplayer-body</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0px</span> <span class="meta">!important</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-歌词颜色修改"><a href="#2-歌词颜色修改" class="headerlink" title="2.歌词颜色修改"></a>2.歌词颜色修改</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-lrc</span> <span class="selector-tag">p</span><span class="selector-class">.aplayer-lrc-current</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>:<span class="number">1</span>;</span><br><span class="line">    <span class="attribute">overflow</span>:visible;</span><br><span class="line">    <span class="attribute">height</span>:auto<span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">min-height</span>:<span class="number">16px</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>找到如上代码修改如下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-lrc</span> <span class="selector-tag">p</span><span class="selector-class">.aplayer-lrc-current</span> &#123;</span><br><span class="line">    <span class="comment">/* 大小 */</span></span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="comment">/* 颜色 */</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#1b82f1</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: visible;</span><br><span class="line">    <span class="attribute">height</span>: auto <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-lrc</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#666</span>;</span><br><span class="line">    <span class="attribute">line-height</span>:<span class="number">16px</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">16px</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">transition</span>:all .<span class="number">5s</span> ease-out;</span><br><span class="line">    <span class="attribute">opacity</span>:.<span class="number">4</span>;</span><br><span class="line">    <span class="attribute">overflow</span>:hidden</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再修改上面css样式为</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-lrc</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#777</span>;</span><br><span class="line">    <span class="attribute">line-height</span>:<span class="number">16px</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">16px</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">transition</span>:all .<span class="number">5s</span> ease-out;</span><br><span class="line">    <span class="attribute">opacity</span>:.<span class="number">4</span>;</span><br><span class="line">    <span class="attribute">overflow</span>:hidden</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-最后"><a href="#3-最后" class="headerlink" title="3.最后"></a>3.最后</h2><p>保存这个css,替换主题配置文件中的Aplayer.min.css即可</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/20210429142549.png" alt="image-20210429134930335"></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> butterfly </category>
          
          <category> aplayer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
            <tag> aplayer </tag>
            
            <tag> 魔改 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HelloWorld</title>
      <link href="posts/d5bec4482fb2/"/>
      <url>posts/d5bec4482fb2/</url>
      
        <content type="html"><![CDATA[<p>by CodeLorin</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> daily </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
