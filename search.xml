<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Mybatis-Plus学习笔记</title>
      <link href="posts/22eafb2110f4/"/>
      <url>posts/22eafb2110f4/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring-Security-学习"><a href="#Spring-Security-学习" class="headerlink" title="Spring Security 学习"></a>Spring Security 学习</h1><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h2><blockquote><p>spring中的templates需要请求转发!</p></blockquote><h3 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h3><p>Spring Security 安全框架提供声明式的安全访问控制解决方案,充分利用了IOC,DI,AOP</p><h3 id="1-2-常用安全框架"><a href="#1-2-常用安全框架" class="headerlink" title="1.2 常用安全框架"></a>1.2 常用安全框架</h3><ul><li>Spring Security </li><li>Apache Shiro</li></ul><h2 id="2-UserDetailsService详解"><a href="#2-UserDetailsService详解" class="headerlink" title="2. UserDetailsService详解"></a>2. UserDetailsService详解</h2><p>　当什么也没有配置的时候，账号和密码是由 Spring Security 定义生成的。而在实际项目中账号和密码都是从数据库中查询出来的。所以我们要通过自定义逻辑控制认证逻辑。如果需要自定义逻辑时，只需要实现 UserDetailsService 接口即可。接口定义如下：</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/202206232017821.png"></p><blockquote><p> 返回值</p></blockquote><p>返回值 UserDetails 是一个接口，定义如下</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/202206232016802.png"></p><p>要想返回 <code>UserDetails </code>的实例就只能返回接口的实现类。SpringSecurity 中提供了如下的实例。对于我们只需要使用里面的 <code>User </code>类即可。注意 User 的全限定路径是：</p><p><code>org.springframework.security.core.userdetails.User</code>此处经常和系统中自己开发的 User 类弄混。</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/202206232017067.png"></p><p>在 User 类中提供了很多方法和属性。</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/202206232016871.png"></p><p>其中构造方法有两个，调用其中任何一个都可以实例化</p><p><code>UserDetails </code>实现类 <code>User </code>类的实例。而三个参数的构造方法实际上也是调用 7 个参数的构造方法。</p><ul><li><p><code>username</code>:用户名</p></li><li><p><code>password</code>:密码</p></li><li><p><code>authorities</code>：用户具有的权限。此处不允许为 null</p></li></ul><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/202206232018609.png"></p><p>　此处的用户名应该是客户端传递过来的用户名。而密码应该是从数据库中查询出来的密码。Spring Security 会根据 User 中的 <code>password</code>和客户端传递过来的 <code>password </code>进行比较。如果相同则表示认证通过，如果不相同表示认证失败。</p><p>　<code>authorities </code>里面的权限对于后面学习授权是很有必要的，包含的所有内容为此用户具有的权限，如有里面没有包含某个权限，而在做某个事情时必须包含某个权限则会出现 403。通常都是通过<code>AuthorityUtils.commaSeparatedStringToAuthorityList(“”)</code> 来创建<code>authorities</code> 集合对象的。参数是一个字符串，多个权限使用逗号分隔。</p><blockquote><p> 方法参数</p></blockquote><p>方法参数表示用户名。此值是客户端表单传递过来的数据。默认情况下必须叫 <code>username</code>，否则无法接收。</p><blockquote><p> 异常</p></blockquote><p>　<code>UsernameNotFoundException </code>用户名没有发现异常。在<code>loadUserByUsername</code>中是需要通过自己的逻辑从数据库中取值的。如果通过用户名没有查询到对应的数据，应该抛出<code>UsernameNotFoundException</code>，系统就知道用户名没有查询到。</p><blockquote><p> PasswordEncoder 密码解析器详解</p></blockquote><p>　Spring Security 要求容器中必须有<code>PasswordEncoder</code>实例。所以当自定义登录逻辑时要求必须给容器注入<code>PaswordEncoder</code>的bean对象。</p><blockquote><p> 接口介绍</p></blockquote><ul><li><p><code>encode()</code>：把参数按照特定的解析规则进行解析。</p></li><li><p><code>matches()</code> ：验证从存储中获取的编码密码与编码后提交的原始密码是否匹配。如果密码匹配，则返回 true；如果不匹配，则返回 false。第一个参数表示需要被解析的密码。第二个参数表示存储的密码。</p></li><li><p><code>upgradeEncoding()</code>：如果解析的密码能够再次进行解析且达到更安全的结果则返回 true，否则返回 false。默认返回 false。</p></li></ul><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/202206232017876.png"></p><blockquote><p> 内置解析器介绍</p></blockquote><p>在 Spring Security 中内置了很多解析器。</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/202206232017467.png"></p><blockquote><p> BCryptPasswordEncoder 简介</p></blockquote><p>　BCryptPasswordEncoder 是 Spring Security 官方推荐的密码解析器，平时多使用这个解析器。</p><p>　BCryptPasswordEncoder 是对 <code>bcrypt </code>强散列方法的具体实现。是基于Hash算法实现的单向加密。可以通过strength控制加密强度，默认 10.</p><h2 id="3-自定义登录逻辑"><a href="#3-自定义登录逻辑" class="headerlink" title="3.自定义登录逻辑"></a>3.自定义登录逻辑</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * spring security的密码加密和验证 PasswordEncoder</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@author</span> lorin</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@date</span> 2021/11/24 19:51</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testPwd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      BCryptPasswordEncoder passwordEncoder = <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">      String encode = passwordEncoder.encode(<span class="string">&quot;lorin&quot;</span>);</span><br><span class="line">      System.out.println(<span class="string">&quot;encode = &quot;</span> + encode);</span><br><span class="line">      <span class="keyword">boolean</span> matches = passwordEncoder.matches(<span class="string">&quot;lorin&quot;</span>, encode);</span><br><span class="line">      System.out.println(<span class="string">&quot;matches = &quot;</span> + matches);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>2.2 比较用户密码和加载信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> UserDetails <span class="title">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException </span>&#123;</span><br><span class="line">    <span class="comment">//1.根据username查询数据库</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="string">&quot;admin&quot;</span>.equals(username)) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UsernameNotFoundException(<span class="string">&quot;用户名或者密码错误&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2.根据查询的对象比较密码</span></span><br><span class="line">    String password = passwordEncoder.encode(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">    <span class="comment">//3.返回用户对象</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> User(<span class="string">&quot;admin&quot;</span>, password, AuthorityUtils.commaSeparatedStringToAuthorityList(<span class="string">&quot;admin,normal&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-自定义登录界面"><a href="#4-自定义登录界面" class="headerlink" title="4.自定义登录界面"></a>4.自定义登录界面</h2><blockquote><p>SecurityConfig</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 自定义登录界面</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> http</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@author</span> lorin</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@date</span> 2021/11/24 21:17</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">       <span class="comment">// 登录界面</span></span><br><span class="line">       http.formLogin().loginPage(<span class="string">&quot;/login.html&quot;</span>)</span><br><span class="line">               <span class="comment">// 自定义登录逻辑 登陆访问路径：提交表单之后跳转的地址</span></span><br><span class="line">               .loginProcessingUrl(<span class="string">&quot;/login&quot;</span>)</span><br><span class="line">               <span class="comment">// 登录成功界面,是post请求</span></span><br><span class="line">               .successForwardUrl(<span class="string">&quot;/toMain&quot;</span>)</span><br><span class="line">               <span class="comment">// 登录失败</span></span><br><span class="line">               .failureForwardUrl(<span class="string">&quot;/toFail&quot;</span>)</span><br><span class="line">               <span class="comment">// 配置post账号密码参数</span></span><br><span class="line">               .usernameParameter(<span class="string">&quot;username123&quot;</span>)</span><br><span class="line">               .passwordParameter(<span class="string">&quot;pwd&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       <span class="comment">//授权</span></span><br><span class="line">       http.authorizeRequests()</span><br><span class="line">               .antMatchers(<span class="string">&quot;/login.html&quot;</span>).permitAll()</span><br><span class="line">               .antMatchers(<span class="string">&quot;/error.html&quot;</span>).permitAll()</span><br><span class="line">               <span class="comment">//所有的请求都必须被认证</span></span><br><span class="line">               .anyRequest().authenticated();</span><br><span class="line">       <span class="comment">//关闭csrf</span></span><br><span class="line">       http.csrf().disable();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><blockquote><p>controller</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/toMain&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;redirect:main.html&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@PostMapping(&quot;/toFail&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">fail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;redirect:error.html&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-自定义登录成功页面"><a href="#5-自定义登录成功页面" class="headerlink" title="5.自定义登录成功页面"></a>5.自定义登录成功页面</h2><blockquote><p>MyAuthenticationSuccessHandler</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lorin.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.authentication.AuthenticationSuccessHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义登录成功</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/11/24 21:51</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAuthenticationSuccessHandler</span> <span class="keyword">implements</span> <span class="title">AuthenticationSuccessHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String url;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyAuthenticationSuccessHandler</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.url = url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAuthenticationSuccess</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Authentication authentication)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        <span class="comment">//Principal 主体，存放了登录用户的信息</span></span><br><span class="line">        User user = (User) authentication.getPrincipal();</span><br><span class="line">        <span class="comment">//用户名</span></span><br><span class="line">        System.out.println(user.getUsername());</span><br><span class="line">        <span class="comment">//输出null</span></span><br><span class="line">        System.out.println(user.getPassword());</span><br><span class="line">        <span class="comment">//权限</span></span><br><span class="line">        System.out.println(user.getAuthorities());</span><br><span class="line">        System.out.println(user);</span><br><span class="line">        <span class="comment">//详情 请求ip:sessionID</span></span><br><span class="line">        System.out.println(authentication.getDetails());</span><br><span class="line">        <span class="comment">//凭证</span></span><br><span class="line">        System.out.println(authentication.getCredentials());</span><br><span class="line">        response.sendRedirect(url);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>config</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义跳转页面</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> http</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/11/24 21:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 登录界面</span></span><br><span class="line">    http.formLogin().loginPage(<span class="string">&quot;/login.html&quot;</span>)</span><br><span class="line">            <span class="comment">// 自定义登录逻辑</span></span><br><span class="line">            .loginProcessingUrl(<span class="string">&quot;/login&quot;</span>)</span><br><span class="line">            <span class="comment">// 登录成功界面,是post请求</span></span><br><span class="line">            <span class="comment">// .successForwardUrl(&quot;/toMain&quot;)</span></span><br><span class="line">            .successHandler(<span class="keyword">new</span> MyAuthenticationSuccessHandler(<span class="string">&quot;http://www.baidu.com&quot;</span>))</span><br><span class="line">            <span class="comment">// 登录失败</span></span><br><span class="line">            .failureForwardUrl(<span class="string">&quot;/toFail&quot;</span>);</span><br><span class="line">            <span class="comment">// 配置post账号密码参数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//授权</span></span><br><span class="line">    http.authorizeRequests()</span><br><span class="line">            .antMatchers(<span class="string">&quot;/login.html&quot;</span>).permitAll()</span><br><span class="line">            .antMatchers(<span class="string">&quot;/error.html&quot;</span>).permitAll()</span><br><span class="line">            <span class="comment">//所有的请求都必须被认证</span></span><br><span class="line">            .anyRequest().authenticated();</span><br><span class="line">    <span class="comment">//关闭csrf</span></span><br><span class="line">    http.csrf().disable();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-自定义失败"><a href="#6-自定义失败" class="headerlink" title="6.自定义失败"></a>6.自定义失败</h2><blockquote><p>MyAuthenticationFailureHandler</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lorin.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.authentication.AuthenticationFailureHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * TODO</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/11/24 22:05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAuthenticationFailureHandler</span> <span class="keyword">implements</span> <span class="title">AuthenticationFailureHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String url;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyAuthenticationFailureHandler</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.url = url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAuthenticationFailure</span><span class="params">(HttpServletRequest request, HttpServletResponse response, AuthenticationException exception)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        response.sendRedirect(url);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>config</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lorin.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * SpringSecurity 配置类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/11/24 19:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义登录界面</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> http</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> lorin</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021/11/24 21:17</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 登录界面</span></span><br><span class="line">        http.formLogin().loginPage(<span class="string">&quot;/login.html&quot;</span>)</span><br><span class="line">                <span class="comment">// 自定义登录逻辑</span></span><br><span class="line">                .loginProcessingUrl(<span class="string">&quot;/login&quot;</span>)</span><br><span class="line">                <span class="comment">// 登录成功界面,是post请求</span></span><br><span class="line">                <span class="comment">// .successForwardUrl(&quot;/toMain&quot;)</span></span><br><span class="line">                .successHandler(<span class="keyword">new</span> MyAuthenticationSuccessHandler(<span class="string">&quot;http://www.baidu.com&quot;</span>))</span><br><span class="line">                <span class="comment">// 登录失败</span></span><br><span class="line">                <span class="comment">//.failureForwardUrl(&quot;/toFail&quot;);</span></span><br><span class="line">                .failureHandler(<span class="keyword">new</span> MyAuthenticationFailureHandler(<span class="string">&quot;/error.html&quot;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//授权</span></span><br><span class="line">        http.authorizeRequests()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/login.html&quot;</span>).permitAll()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/error.html&quot;</span>).permitAll()</span><br><span class="line">                <span class="comment">//所有的请求都必须被认证</span></span><br><span class="line">                .anyRequest().authenticated();</span><br><span class="line">        <span class="comment">//关闭csrf</span></span><br><span class="line">        http.csrf().disable();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * PasswordEncoder配置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> org.springframework.security.crypto.password.PasswordEncoder</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> lorin</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2021/11/24 20:01</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PasswordEncoder <span class="title">passwordEncoder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="7-授权"><a href="#7-授权" class="headerlink" title="7.授权"></a>7.授权</h2><h3 id="访问控制url匹配"><a href="#访问控制url匹配" class="headerlink" title="访问控制url匹配"></a>访问控制url匹配</h3><p><code>http.authorizeRequests()</code>主要是对url进行控制，也就是我们所说的授权（访问控制）。<code>http.authorizeRequests()</code>也支持连缀写法，总体公式为：</p><ul><li>url 匹配规则.权限控制方法</li></ul><p>　通过上面的公式可以有很多 url 匹配规则和很多权限控制方法。这些内容进行各种组合就形成了Spring Security中的授权。</p><p>　在所有匹配规则中取所有规则的交集。配置顺序影响了之后授权效果，越是具体的应该放在前面，越是笼统的应该放到后面。</p><h3 id="7-1-anyRequest"><a href="#7-1-anyRequest" class="headerlink" title="7.1 anyRequest()"></a>7.1 anyRequest()</h3><blockquote><p>表示匹配所有的请求</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.anyRequest().authenticated();  </span><br></pre></td></tr></table></figure><h3 id="7-2-antMatcher"><a href="#7-2-antMatcher" class="headerlink" title="7.2 antMatcher()"></a>7.2 antMatcher()</h3><p>方法定义如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> C <span class="title">antMatchers</span><span class="params">(String... antPatterns)</span>  </span></span><br></pre></td></tr></table></figure><p>参数是不定向参数，每个参数是一个 ant 表达式，用于匹配 URL规则。</p><p>规则如下：</p><ul><li><p><code>?</code>： 匹配一个字符</p></li><li><p><code>*</code>：匹配 0 个或多个字符</p></li><li><p><code>**</code> ：匹配 0 个或多个目录</p></li></ul><p>在实际项目中经常需要放行所有静态资源，下面演示放行 js 文件夹下所有脚本文件。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.antMatchers(<span class="string">&quot;/js/**&quot;</span>,<span class="string">&quot;/css/**&quot;</span>).permitAll()  </span><br></pre></td></tr></table></figure><p>还有一种配置方式是只要是.js 文件都放行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.antMatchers(<span class="string">&quot;/**/*.js&quot;</span>).permitAll()</span><br></pre></td></tr></table></figure><h3 id="7-3-regexMatchers"><a href="#7-3-regexMatchers" class="headerlink" title="7.3 regexMatchers()"></a>7.3 regexMatchers()</h3><blockquote><p>同上使用正则</p></blockquote><p>介绍</p><p>　使用正则表达式进行匹配。和 <code>antMatchers()</code>主要的区别就是参数，<code>antMatchers()</code>参数是 ant 表达式，<code>regexMatchers()</code>参数是正则表达式。</p><p>　演示所有以.js 结尾的文件都被放行。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.regexMatchers( <span class="string">&quot;.+[.]js&quot;</span>).permitAll()</span><br></pre></td></tr></table></figure><blockquote><p> 两个参数时使用方式</p></blockquote><p>　无论是<code> antMatchers()</code>还是<code> regexMatchers()</code>都具有两个参数的方法，其中第一个参数都是 <code>HttpMethod</code>，表示请求方式，当设置了<code>HttpMethod </code>后表示只有设定的特定的请求方式才执行对应的权限设置。</p><p>枚举类型 <code>HttpMethod </code>内置属性如下：</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/202206232018005.png"></p><h3 id="7-4mvcMatchers"><a href="#7-4mvcMatchers" class="headerlink" title="7.4mvcMatchers()"></a>7.4mvcMatchers()</h3><blockquote><p>访问控制url匹配</p></blockquote><p>　mvcMatchers()适用于配置了 servletPath 的情况。</p><p>　<code>servletPath </code>就是所有的 URL 的统一前缀。在 SpringBoot 整合SpringMVC 的项目中可以在 application.properties 中添加下面内容设置 <code>ServletPath</code></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.mvc.servlet.path</span>=<span class="string">/yjxxt</span></span><br></pre></td></tr></table></figure><p>　在 Spring Security 的配置类中配置<code>.servletPath()</code>是 mvcMatchers()返回值特有的方法，antMatchers()和 regexMatchers()没有这个方法。在<code> servletPath()</code>中配置了<code>servletPath </code>后，mvcMatchers()直接写 SpringMVC 中@RequestMapping()中设置的路径即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.mvcMatchers(<span class="string">&quot;/demo&quot;</span>).servletPath(<span class="string">&quot;/yjxxt&quot;</span>).permitAll()</span><br></pre></td></tr></table></figure><p>　如果不习惯使用 mvcMatchers()也可以使用 antMatchers()，下面代码和上面代码是等效</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.antMatchers(<span class="string">&quot;/yjxxt/demo&quot;</span>).permitAll()</span><br></pre></td></tr></table></figure><h3 id="内置访问控制"><a href="#内置访问控制" class="headerlink" title="内置访问控制"></a>内置访问控制</h3><p>　Spring Security 匹配了 URL 后调用了<code> permitAll()</code>表示不需要认证，随意访问。在 Spring Security 中提供了多种内置控制。</p><h3 id="7-1-permitAll"><a href="#7-1-permitAll" class="headerlink" title="7.1 permitAll()"></a>7.1 permitAll()</h3><p>permitAll()表示所匹配的 URL 任何人都允许访问。</p><h3 id="7-2-authenticated"><a href="#7-2-authenticated" class="headerlink" title="7.2 authenticated()"></a>7.2 authenticated()</h3><p>authenticated()表示所匹配的 URL 都需要被认证才能访问。</p><h3 id="7-3-anonymous"><a href="#7-3-anonymous" class="headerlink" title="7.3 anonymous()"></a>7.3 anonymous()</h3><p>anonymous()表示可以匿名访问匹配的URL。和permitAll()效果类似，只是设置为 anonymous()的 url 会执行 filter 链中</p><h3 id="7-4-denyAll"><a href="#7-4-denyAll" class="headerlink" title="7.4 denyAll()"></a>7.4 denyAll()</h3><p>denyAll()表示所匹配的 URL 都不允许被访问。</p><h3 id="7-5-rememberMe"><a href="#7-5-rememberMe" class="headerlink" title="7.5 rememberMe()"></a>7.5 rememberMe()</h3><p>被“remember me”的用户允许访问</p><h3 id="7-6-fullyAuthenticated"><a href="#7-6-fullyAuthenticated" class="headerlink" title="7.6 fullyAuthenticated()"></a>7.6 fullyAuthenticated()</h3><p>如果用户不是被 remember me 的，才可以访问。</p><h3 id="角色权限判断"><a href="#角色权限判断" class="headerlink" title="角色权限判断"></a>角色权限判断</h3><p>除了之前讲解的内置权限控制。Spring Security 中还支持很多其他权限控制。这些方法一般都用于用户已经被认证后，判断用户是否具有特定的要求。</p><h3 id="7-1-hasAuthority-String"><a href="#7-1-hasAuthority-String" class="headerlink" title="7.1 hasAuthority(String)"></a>7.1 hasAuthority(String)</h3><p>　判断用户是否具有特定的权限，用户的权限是在自定义登录逻辑中创建 User 对象时指定的。下图中 admin和normal 就是用户的权限。admin和normal 严格区分大小写。</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/202206232017125.png"></p><p>在配置类中通过 hasAuthority(“admin”)设置具有 admin 权限时才能访问。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.antMatchers(<span class="string">&quot;/main1.html&quot;</span>).hasAuthority(<span class="string">&quot;admin&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="7-2-hasAnyAuthority-String-…"><a href="#7-2-hasAnyAuthority-String-…" class="headerlink" title="7.2 hasAnyAuthority(String …)"></a>7.2 hasAnyAuthority(String …)</h3><p>如果用户具备给定权限中某一个，就允许访问。</p><p>下面代码中由于大小写和用户的权限不相同，所以用户无权访问</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.antMatchers(<span class="string">&quot;/main1.html&quot;</span>).hasAnyAuthority(<span class="string">&quot;adMin&quot;</span>,<span class="string">&quot;admiN&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="7-3-hasRole-String"><a href="#7-3-hasRole-String" class="headerlink" title="7.3 hasRole(String)"></a>7.3 hasRole(String)</h3><p>如果用户具备给定角色就允许访问。否则出现 403。</p><p>参数取值来源于自定义登录逻辑 <code>UserDetailsService </code>实现类中创建 User 对象时给 User 赋予的授权。</p><p>　在给用户赋予角色时角色需要以：<code>ROLE_开头</code>，后面添加角色名称。例如：ROLE_abc 其中 abc 是角色名，ROLE_是固定的字符开头。</p><p>使用 hasRole()时参数也只写 abc 即可。否则启动报错。</p><p>给用户赋予角色：</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/202206232017512.png"></p><p>　在配置类中直接写 abc 即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.antMatchers(<span class="string">&quot;/main1.html&quot;</span>).hasRole(<span class="string">&quot;abc&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="7-4-hasAnyRole-String-…"><a href="#7-4-hasAnyRole-String-…" class="headerlink" title="7.4 hasAnyRole(String …)"></a>7.4 hasAnyRole(String …)</h3><p>如果用户具备给定角色的任意一个，就允许被访问</p><h3 id="7-5-hasIpAddress-String"><a href="#7-5-hasIpAddress-String" class="headerlink" title="7.5 hasIpAddress(String)"></a>7.5 hasIpAddress(String)</h3><p>如果请求是指定的 IP 就运行访问。</p><p>可以通过 <code>request.getRemoteAddr()</code>获取 ip 地址。</p><p>需要注意的是在本机进行测试时 localhost 和 127.0.0.1 输出的 ip地址是不一样的。</p><p>当浏览器中通过 localhost 进行访问时控制台打印的内容：</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/202206232018355.png"></p><p>当浏览器中通过 127.0.0.1 访问时控制台打印的内容：</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/202206232018399.png"></p><p>当浏览器中通过具体 ip 进行访问时控制台打印内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.antMatchers(<span class="string">&quot;/main1.html&quot;</span>).hasIpAddress(<span class="string">&quot;127.0.0.1&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="8-自定义403处理方案"><a href="#8-自定义403处理方案" class="headerlink" title="8.自定义403处理方案"></a>8.自定义403处理方案</h2><blockquote><p>新建类</p></blockquote><p>新建类实现 AccessDeniedHandler</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lorin.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.access.AccessDeniedException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.access.AccessDeniedHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * TODO</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/11/24 23:02</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//可以去配置文件new,也可以交给spring管理</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAccessDeniedHandler</span> <span class="keyword">implements</span> <span class="title">AccessDeniedHandler</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, AccessDeniedException accessDeniedException)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        response.setStatus(HttpServletResponse.SC_FORBIDDEN);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">        PrintWriter out = response.getWriter();</span><br><span class="line">        out.write(<span class="string">&quot;&#123;\&quot;status\&quot;:\&quot;error\&quot;,\&quot;msg\&quot;:\&quot;权限不足，请联系管理员！\&quot;&#125;&quot;</span>);</span><br><span class="line">        out.flush();</span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p> 修改配置类</p></blockquote><p>配置类中重点添加异常处理器。设置访问受限后交给哪个对象进行处理。</p><p>myAccessDeniedHandler 是在配置类中进行自动注入的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//异常处理</span></span><br><span class="line">http.exceptionHandling()</span><br><span class="line">      .accessDeniedHandler(myAccessDeniedHandler);</span><br></pre></td></tr></table></figure><h2 id="9-基于表达式的访问控制"><a href="#9-基于表达式的访问控制" class="headerlink" title="9.基于表达式的访问控制"></a>9.基于表达式的访问控制</h2><blockquote><p> access()方法使用</p></blockquote><p>之前学习的登录用户权限判断实际上底层实现都是调用access(表达式)<img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/20211124233108.png" alt="image-20211124233106490"></p><p>以 hasRole 和 和 permitAll 举例</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/20211124231158.png"></p><h3 id="9-1自定义方法实现"><a href="#9-1自定义方法实现" class="headerlink" title="9.1自定义方法实现"></a>9.1自定义方法实现</h3><blockquote><p>MyService.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MyService</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">boolean</span> <span class="title">hasPermission</span><span class="params">(HttpServletRequest request, Authentication authentication)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>MyServiceImpl.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyServiceImpl</span> <span class="keyword">implements</span> <span class="title">MyService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasPermission</span><span class="params">(HttpServletRequest request, Authentication authentication)</span> </span>&#123;</span><br><span class="line">      Object obj = authentication.getPrincipal();</span><br><span class="line">      <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> UserDetails)&#123;</span><br><span class="line">         UserDetails userDetails = (UserDetails) obj;</span><br><span class="line">         Collection&lt;? extends GrantedAuthority&gt; authorities = userDetails.getAuthorities();</span><br><span class="line">         <span class="keyword">return</span> authorities.contains(<span class="keyword">new</span> SimpleGrantedAuthority(request.getRequestURI()));</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p> 修改配置类</p></blockquote><p>在 access 中通过@bean的id名.方法(参数)的形式进行调用配置类中修改如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//url拦截</span></span><br><span class="line">http.authorizeRequests()</span><br><span class="line">      <span class="comment">//login.html不需要被认证</span></span><br><span class="line">      <span class="comment">// .antMatchers(&quot;/login.html&quot;).permitAll()</span></span><br><span class="line">      .antMatchers(<span class="string">&quot;/login.html&quot;</span>).access(<span class="string">&quot;permitAll&quot;</span>)</span><br><span class="line">      <span class="comment">// .antMatchers(&quot;/main.html&quot;).hasRole(&quot;abc&quot;)</span></span><br><span class="line">      .antMatchers(<span class="string">&quot;/main.html&quot;</span>).access(<span class="string">&quot;hasRole(&#x27;abc&#x27;)&quot;</span>)</span><br><span class="line">      .anyRequest().access(<span class="string">&quot;@myServiceImpl.hasPermission(request,authentication)&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="10-基于注解实现"><a href="#10-基于注解实现" class="headerlink" title="10.基于注解实现"></a>10.基于注解实现</h2><p>在 Spring Security 中提供了一些访问控制的注解。这些注解都是默认是都不可用的，需要通过<code>@EnableGlobalMethodSecurity </code>进行开启后使用。</p><p>如果设置的条件允许，程序正常执行。如果不允许会报 500</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/202206232017024.png"></p><p>这些注解可以写到 Service 接口或方法上，也可以写到 Controller或 Controller 的方法上。通常情况下都是写在控制器方法上的，控制接口URL是否允许被访问。</p><h3 id="10-1-Secured"><a href="#10-1-Secured" class="headerlink" title="10.1@Secured"></a>10.1@Secured</h3><p>@Secured 是专门用于判断是否具有角色的。能写在方法或类上。参数要以 ROLE_开头。</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/202206232017969.png"></p><blockquote><p> 开启注解</p></blockquote><p>在 启 动 类 ( 也 可 以 在 配 置 类 等 能 够 扫 描 的 类 上 ) 上 添 加<code>@EnableGlobalMethodSecurity(securedEnabled = true)</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableGlobalMethodSecurity(securedEnabled = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringsecurityDemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      SpringApplication.run(SpringsecurityDemoApplication.class, args);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p> 在控制器方法上添加@Secured 注解</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 成功后跳转页面</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Secured(&quot;ROLE_abc&quot;)</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/toMain&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toMain</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="string">&quot;redirect:/main.html&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p> 配置类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">   <span class="comment">//表单提交</span></span><br><span class="line">   http.formLogin()</span><br><span class="line">         <span class="comment">//自定义登录页面</span></span><br><span class="line">         .loginPage(<span class="string">&quot;/login.html&quot;</span>)</span><br><span class="line">         <span class="comment">//当发现/login时认为是登录，必须和表单提交的地址一样。去执行UserServiceImpl</span></span><br><span class="line">         .loginProcessingUrl(<span class="string">&quot;/login&quot;</span>)</span><br><span class="line">         <span class="comment">//登录成功后跳转页面，POST请求</span></span><br><span class="line">         .successForwardUrl(<span class="string">&quot;/toMain&quot;</span>)</span><br><span class="line">         </span><br><span class="line">   <span class="comment">//url拦截</span></span><br><span class="line">   http.authorizeRequests()</span><br><span class="line">         <span class="comment">//login.html不需要被认证</span></span><br><span class="line">         .antMatchers(<span class="string">&quot;/login.html&quot;</span>).permitAll()</span><br><span class="line">         <span class="comment">//所有请求都必须被认证，必须登录后被访问</span></span><br><span class="line">         .anyRequest().authenticated();</span><br><span class="line">   <span class="comment">//关闭csrf防护</span></span><br><span class="line">   http.csrf().disable();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p> @PreAuthorize/@PostAuthorize</p></blockquote><p>@PreAuthorize 和@PostAuthorize 都是方法或类级别注解。</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/202206232017420.png"></p><ul><li><p><code>@PreAuthorize </code>表示访问方法或类在执行之前先判断权限，大多情况下都是使用这个注解，注解的参数和access()方法参数取值相同，都是权限表达式。</p></li><li><p><code>@PostAuthorize</code> 表示方法或类执行结束后判断权限，此注解很少被使用到。</p></li></ul><blockquote><p> 开启注解</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableGlobalMethodSecurity(prePostEnabled = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringsecurityDemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      SpringApplication.run(SpringsecurityDemoApplication.class, args);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>添加@PreAuthorize</p></blockquote><p>在控制器方法上添加@PreAuthorize，参数可以是任何 access()支持的表达式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 成功后跳转页面</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//ROLE_可有可无</span></span><br><span class="line"><span class="meta">@PreAuthorize(&quot;hasRole(&#x27;ROLE_abc&#x27;)&quot;)</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/toMain&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toMain</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="string">&quot;redirect:/main.html&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11-退出登录"><a href="#11-退出登录" class="headerlink" title="11.退出登录"></a>11.退出登录</h2><p>用户只需要向 Spring Security 项目中发送<code>/logout </code>退出请求即可。</p><h4 id="退出登录"><a href="#退出登录" class="headerlink" title="退出登录"></a>退出登录</h4><p>实现退出非常简单，只要在页面中添加<code>/logout</code> 的超链接即可。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/logout&quot;</span>&gt;</span>退出登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>为了实现更好的效果，通常添加退出的配置。默认的退出 url 为<code>/logout</code>，退出成功后跳转到<code>/login?logout</code></p><p>如果不希望使用默认值，可以通过下面的方法进行修改。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http.logout()</span><br><span class="line">      .logoutUrl(<span class="string">&quot;/logout&quot;</span>)</span><br><span class="line">      .logoutSuccessUrl(<span class="string">&quot;/login.html&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="12-Oauth2认证"><a href="#12-Oauth2认证" class="headerlink" title="12.Oauth2认证"></a>12.Oauth2认证</h2>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> spring-security </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> spring-security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot学习笔记</title>
      <link href="posts/a219a6fe652e/"/>
      <url>posts/a219a6fe652e/</url>
      
        <content type="html"><![CDATA[<h1 id="SpringBoot学习笔记"><a href="#SpringBoot学习笔记" class="headerlink" title="SpringBoot学习笔记"></a>SpringBoot学习笔记</h1><blockquote><p>约定大于配置</p></blockquote><p>为了降低Java开发的复杂性，Spring采用了以下4种关键策略：</p><p>1、基于POJO的轻量级和最小侵入性编程，所有东西都是bean；</p><p>2、通过IOC，依赖注入（DI）和面向接口实现松耦合；</p><p>3、基于切面（AOP）和惯例进行声明式编程；</p><p>4、通过切面和模版减少样式代码，RedisTemplate，xxxTemplate；</p><p>M:数据和业务</p><p>C:交换</p><p>V:html</p><p><strong>Spring Boot的主要优点：</strong></p><ul><li>为所有Spring开发者更快的入门</li><li><strong>开箱即用</strong>，提供各种默认配置来简化项目配置</li><li>内嵌式容器简化Web项目</li><li>没有冗余代码生成和XML配置的要求</li></ul><h2 id="一-第一个springboot程序"><a href="#一-第一个springboot程序" class="headerlink" title="一.第一个springboot程序"></a>一.第一个springboot程序</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> HelloController</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/20 23:56</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello,SpringBoot!!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="二-自动装配原理"><a href="#二-自动装配原理" class="headerlink" title="二.自动装配原理"></a>二.自动装配原理</h2><blockquote><p>父项目管理所有的依赖版本,是SpringBoot的版本控制中心</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../../spring-boot-dependencies<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>启动器spring-boot-starter</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>springboot-boot-starter-xxx</strong>：就是spring-boot的场景启动器</p><p><strong>spring-boot-starter-web</strong>：帮我们导入了web模块正常运行所依赖的组件；</p><p>SpringBoot将所有的功能场景都抽取出来，做成一个个的starter （启动器），只需要在项目中引入这些starter即可，所有相关的依赖都会导入进来 ， 我们要用什么功能就导入什么样的场景启动器即可 ；我们未来也可以自己自定义 star</p><blockquote><p>默认的启动器</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@SpringBootApplication 来标注一个主程序类</span></span><br><span class="line"><span class="comment">//说明这是一个Spring Boot应用</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">     <span class="comment">//以为是启动了一个方法，没想到启动了一个服务</span></span><br><span class="line">      SpringApplication.run(SpringbootApplication.class, args);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个类主要做了以下四件事情：</p><p>1、推断应用的类型是普通的项目还是Web项目</p><p>2、查找并加载所有可用初始化器 ， 设置到initializers属性中</p><p>3、找出所有的应用程序监听器，设置到listeners属性中</p><p>4、推断并设置main方法的定义类，找到运行的主类</p><blockquote><p> @ComponentScan</p></blockquote><p>这个注解在Spring中很重要 ,它对应XML配置中的元素。</p><p>作用：自动扫描并加载符合条件的组件或者bean ， 将这个bean定义加载到IOC容器中</p><blockquote><p> @SpringBootConfiguration</p></blockquote><p>作用：SpringBoot的配置类 ，标注在某个类上 ， 表示这是一个SpringBoot的配置类；</p><p>我们继续进去这个注解查看</p><p>里面的 @Component 这就说明，启动类本身也是Spring中的一个组件而已，负责启动应用！</p><p>我们回到 SpringBootApplication 注解中继续看。</p><blockquote><p>@EnableAutoConfiguration ：开启自动配置功能**</p></blockquote><p>以前我们需要自己配置的东西，而现在SpringBoot可以自动帮我们配置 ；@EnableAutoConfiguration告诉SpringBoot开启自动配置功能，这样自动配置才能生效；</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/640" alt="img"></p><h2 id="三-yaml语法初解"><a href="#三-yaml语法初解" class="headerlink" title="三.yaml语法初解"></a>三.yaml语法初解</h2><blockquote><p>更加优秀的文件格式</p></blockquote><ul><li>yaml可以给实体类赋值</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">person:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">codelorin</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">happy:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">birth:</span> <span class="number">2020</span><span class="string">/1/1</span></span><br><span class="line">  <span class="attr">maps:</span> &#123; <span class="attr">k1:</span> <span class="string">v1</span>,<span class="attr">k2:</span> <span class="string">v2</span> &#125;</span><br><span class="line">  <span class="attr">lists:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">code</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">girl</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">musi</span></span><br><span class="line">  <span class="attr">dog:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">五百</span></span><br><span class="line">    <span class="attr">age:</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> Person</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/21 10:00</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;person&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Boolean happy;</span><br><span class="line">    <span class="keyword">private</span> Date birth;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Object&gt; maps;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Object&gt; lists;</span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>@ConfigurationProperties只需要写一次即可 ， @Value则需要每个字段都添加</p></li><li><p>松散绑定：这个什么意思呢? 比如我的yml中写的last-name，这个和lastName是一样的， - 后面跟着的字母默认是大写的。这就是松散绑定。可以测试一下</p></li><li><p>JSR303数据校验 ， 这个就是我们可以在字段是增加一层过滤器验证 ， 可以保证数据的合法性</p></li></ul><p>pringboot中可以用@validated来校验数据，如果数据异常则会统一抛出异常，方便异常中心统一处理。我们这里来写个注解让我们的name只能支持Email格式；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span> <span class="comment">//注册bean</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;person&quot;)</span></span><br><span class="line"><span class="meta">@Validated</span>  <span class="comment">//数据校验</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Email(message=&quot;邮箱格式错误&quot;)</span> <span class="comment">//name必须是邮箱格式</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@NotNull(message=&quot;名字不能为空&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String userName;</span><br><span class="line"><span class="meta">@Max(value=120,message=&quot;年龄最大不能查过120&quot;)</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"><span class="meta">@Email(message=&quot;邮箱格式错误&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">空检查</span><br><span class="line"><span class="meta">@Null</span>       验证对象是否为<span class="keyword">null</span></span><br><span class="line"><span class="meta">@NotNull</span>    验证对象是否不为<span class="keyword">null</span>, 无法查检长度为<span class="number">0</span>的字符串</span><br><span class="line"><span class="meta">@NotBlank</span>   检查约束字符串是不是Null还有被Trim的长度是否大于<span class="number">0</span>,只对字符串,且会去掉前后空格.</span><br><span class="line"><span class="meta">@NotEmpty</span>   检查约束元素是否为NULL或者是EMPTY.</span><br><span class="line">    </span><br><span class="line">Booelan检查</span><br><span class="line"><span class="meta">@AssertTrue</span>     验证 Boolean 对象是否为 <span class="keyword">true</span>  </span><br><span class="line"><span class="meta">@AssertFalse</span>    验证 Boolean 对象是否为 <span class="keyword">false</span>  </span><br><span class="line">    </span><br><span class="line">长度检查</span><br><span class="line"><span class="meta">@Size(min=, max=)</span> 验证对象（Array,Collection,Map,String）长度是否在给定的范围之内  </span><br><span class="line"><span class="meta">@Length(min=, max=)</span> string is between min and max included.</span><br><span class="line"></span><br><span class="line">日期检查</span><br><span class="line"><span class="meta">@Past</span>       验证 Date 和 Calendar 对象是否在当前时间之前  </span><br><span class="line"><span class="meta">@Future</span>     验证 Date 和 Calendar 对象是否在当前时间之后  </span><br><span class="line"><span class="meta">@Pattern</span>    验证 String 对象是否符合正则表达式的规则</span><br><span class="line"></span><br><span class="line">.......等等</span><br><span class="line">除此以外，我们还可以自定义一些数据校验规则</span><br></pre></td></tr></table></figure><ul><li>复杂类型封装，yml中可以封装对象 ， 使用value就不支持</li></ul><h2 id="四-多环境配置文件"><a href="#四-多环境配置文件" class="headerlink" title="四.多环境配置文件"></a>四.多环境配置文件</h2><p>application-test.properties 代表测试环境配置</p><p>application-dev.properties 代表开发环境配置</p><p>但是Springboot并不会直接启动这些配置文件，它<strong>默认使用application.properties主配置文件</strong>；</p><p>我们需要通过一个配置来选择需要激活的环境：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.profiles.active</span>=<span class="string">dev</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line"><span class="comment">#选择要激活那个环境块</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">prod</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8083</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">dev</span> <span class="comment">#配置环境的名称</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8084</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">prod</span>  <span class="comment">#配置环境的名称</span></span><br></pre></td></tr></table></figure><ul><li>优先级1：项目路径下的config文件夹配置文件</li><li>优先级2：项目路径下配置文件</li><li>优先级3：资源路径下的config文件夹配置文件</li><li>优先级4：资源路径下配置文件</li></ul><blockquote><p>手动制定</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar spring-boot-config.jar --spring.config.location=F:/application.properties</span><br></pre></td></tr></table></figure><h2 id="五-web开发"><a href="#五-web开发" class="headerlink" title="五.web开发"></a>五.web开发</h2><blockquote><p>静态资源解决</p></blockquote><ul><li><p>静态资源</p><ul><li>webjars /webjars</li><li>public static resources</li></ul></li><li><p>优先级</p><ul><li>resource&gt;static(默认)&gt;public</li></ul></li></ul><blockquote><p>首页和图标</p></blockquote><p>只要把主页放在静态资源目录下就可以了</p><h3 id="5-1模板引擎-Thymeleaf"><a href="#5-1模板引擎-Thymeleaf" class="headerlink" title="5.1模板引擎 Thymeleaf"></a>5.1模板引擎 Thymeleaf</h3><ul><li>语法</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210921110715177.png" alt="image-20210921110715177"></p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>测试页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;msg&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--不转义--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">&quot;$&#123;msg&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--遍历数据--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--th:each每次遍历都会生成当前这个标签：官网#9--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">th:each</span>=<span class="string">&quot;user :$&#123;users&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--行内写法：官网#12--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:each</span>=<span class="string">&quot;user:$&#123;users&#125;&quot;</span>&gt;</span>[[$&#123;user&#125;]]<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-2-整合数据库"><a href="#5-2-整合数据库" class="headerlink" title="5.2.整合数据库"></a>5.2.整合数据库</h3><h4 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h4><p><strong>JdbcTemplate主要提供以下几类方法：</strong></p><ul><li>execute方法：可以用于执行任何SQL语句，一般用于执行DDL语句；</li><li>update方法及batchUpdate方法：update方法用于执行新增、修改、删除等语句；batchUpdate方法用于执行批处理相关语句；</li><li>query方法及queryForXXX方法：用于执行查询相关语句；</li><li>call方法：用于执行存储过程、函数相关语句。</li></ul>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> JdbcController</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/21 12:44</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询employee表中所有数据</span></span><br><span class="line">    <span class="comment">//List 中的1个 Map 对应数据库的 1行数据</span></span><br><span class="line">    <span class="comment">//Map 中的 key 对应数据库的字段名，value 对应数据库的字段值</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/list&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&lt;String, Object&gt;&gt; userList() &#123;</span><br><span class="line">        String sql = <span class="string">&quot;select * from user &quot;</span>;</span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; maps = jdbcTemplate.queryForList(sql);</span><br><span class="line">        <span class="keyword">return</span> maps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//新增一个用户</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/add&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">addUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//插入语句，注意时间问题</span></span><br><span class="line">        String sql = <span class="string">&quot;insert into user(name,pwd) values (&#x27;codelorin&#x27;,&#x27;123123&#x27;)&quot;</span>;</span><br><span class="line">        jdbcTemplate.update(sql);</span><br><span class="line">        <span class="comment">//查询</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;addOk&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改用户信息</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/update/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">updateUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//插入语句</span></span><br><span class="line">        String sql = <span class="string">&quot;update user set name=?,pwd=? where id=&quot;</span> + id;</span><br><span class="line">        <span class="comment">//数据</span></span><br><span class="line">        Object[] objects = <span class="keyword">new</span> Object[<span class="number">2</span>];</span><br><span class="line">        objects[<span class="number">0</span>] = <span class="string">&quot;codelorin&quot;</span>;</span><br><span class="line">        objects[<span class="number">1</span>] = <span class="string">&quot;123123&quot;</span>;</span><br><span class="line">        jdbcTemplate.update(sql, objects);</span><br><span class="line">        <span class="comment">//查询</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;updateOk&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除用户</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/delete/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">delUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//插入语句</span></span><br><span class="line">        String sql = <span class="string">&quot;delete from employee where id=?&quot;</span>;</span><br><span class="line">        jdbcTemplate.update(sql, id);</span><br><span class="line">        <span class="comment">//查询</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;deleteOk&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="整合数据源Druid"><a href="#整合数据源Druid" class="headerlink" title="整合数据源Druid"></a>整合数据源Druid</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/test?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span> <span class="comment"># 自定义数据源</span></span><br><span class="line">    <span class="comment">#Spring Boot 默认是不注入这些属性值的，需要自己绑定</span></span><br><span class="line">    <span class="comment">#druid 数据源专有配置</span></span><br><span class="line">    <span class="attr">initialSize:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">minIdle:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">maxActive:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">maxWait:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span><br><span class="line">    <span class="attr">validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">    <span class="attr">testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">testOnReturn:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">poolPreparedStatements:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入</span></span><br><span class="line">    <span class="comment">#如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority</span></span><br><span class="line">    <span class="comment">#则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j</span></span><br><span class="line">    <span class="attr">filters:</span> <span class="string">stat,wall,log4j</span></span><br><span class="line">    <span class="attr">maxPoolPreparedStatementPerConnectionSize:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">useGlobalDataSourceStat:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">connectionProperties:</span> <span class="string">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.support.http.StatViewServlet;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.ServletRegistrationBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> DruidConfig</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/21 12:55</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">       将自定义的 Druid数据源添加到容器中，不再让 Spring Boot 自动创建</span></span><br><span class="line"><span class="comment">       绑定全局配置文件中的 druid 数据源属性到 com.alibaba.druid.pool.DruidDataSource从而让它们生效</span></span><br><span class="line"><span class="comment">       @ConfigurationProperties(prefix = &quot;spring.datasource&quot;)：作用就是将 全局配置文件中</span></span><br><span class="line"><span class="comment">       前缀为 spring.datasource的属性值注入到 com.alibaba.druid.pool.DruidDataSource 的同名参数中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties(prefix = &quot;spring.datasource&quot;)</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">druidDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletRegistrationBean <span class="title">statViewServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ServletRegistrationBean bean = <span class="keyword">new</span> ServletRegistrationBean(<span class="keyword">new</span> StatViewServlet(), <span class="string">&quot;/druid/*&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这些参数可以在 com.alibaba.druid.support.http.StatViewServlet</span></span><br><span class="line">        <span class="comment">// 的父类 com.alibaba.druid.support.http.ResourceServlet 中找到</span></span><br><span class="line">        Map&lt;String, String&gt; initParams = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        initParams.put(<span class="string">&quot;loginUsername&quot;</span>, <span class="string">&quot;admin&quot;</span>); <span class="comment">//后台管理界面的登录账号</span></span><br><span class="line">        initParams.put(<span class="string">&quot;loginPassword&quot;</span>, <span class="string">&quot;123456&quot;</span>); <span class="comment">//后台管理界面的登录密码</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//后台允许谁可以访问</span></span><br><span class="line">        <span class="comment">//initParams.put(&quot;allow&quot;, &quot;localhost&quot;)：表示只有本机可以访问</span></span><br><span class="line">        <span class="comment">//initParams.put(&quot;allow&quot;, &quot;&quot;)：为空或者为null时，表示允许所有访问</span></span><br><span class="line">        initParams.put(<span class="string">&quot;allow&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="comment">//deny：Druid 后台拒绝谁访问</span></span><br><span class="line">        <span class="comment">//initParams.put(&quot;kuangshen&quot;, &quot;192.168.1.20&quot;);表示禁止此ip访问</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置初始化参数</span></span><br><span class="line">        bean.setInitParameters(initParams);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//配置 Druid 监控 之  web 监控的 filter</span></span><br><span class="line">    <span class="comment">//WebStatFilter：用于配置Web和Druid数据源之间的管理关联监控统计</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FilterRegistrationBean <span class="title">webStatFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        FilterRegistrationBean bean = <span class="keyword">new</span> FilterRegistrationBean();</span><br><span class="line">        bean.setFilter(<span class="keyword">new</span> WebStatFilter());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//exclusions：设置哪些请求进行过滤排除掉，从而不进行统计</span></span><br><span class="line">        Map&lt;String, String&gt; initParams = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        initParams.put(<span class="string">&quot;exclusions&quot;</span>, <span class="string">&quot;*.js,*.css,/druid/*,/jdbc/*&quot;</span>);</span><br><span class="line">        bean.setInitParameters(initParams);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//&quot;/*&quot; 表示过滤所有请求</span></span><br><span class="line">        bean.setUrlPatterns(Arrays.asList(<span class="string">&quot;/*&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/druid --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Mybatis整合"><a href="#Mybatis整合" class="headerlink" title="Mybatis整合"></a>Mybatis整合</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.codelorin.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">        where id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        insert into user(id, name, pwd)</span><br><span class="line">        values (#&#123;id&#125;, #&#123;name&#125;, #&#123;pwd&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        update user</span><br><span class="line">        set name =#&#123;name&#125;,</span><br><span class="line">            pwd  = #&#123;pwd&#125;,</span><br><span class="line">            where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">        delete</span><br><span class="line">        from user</span><br><span class="line">        where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">123456</span></span><br><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/test?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line"><span class="meta">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"></span><br><span class="line"><span class="meta">mybatis.type-aliases-package</span>=<span class="string">com.codelorin.pojo</span></span><br><span class="line"><span class="meta">mybatis.mapper-locations</span>=<span class="string">classpath:mybatis/mapper/*.xml</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="六-Spring-Security安全框架"><a href="#六-Spring-Security安全框架" class="headerlink" title="六.Spring Security安全框架"></a>六.Spring Security安全框架</h2><blockquote><p>认证 授权</p></blockquote><p>Spring Security 是针对Spring项目的安全框架，也是Spring Boot底层安全模块默认的技术选型，他可以实现强大的Web安全控制，对于安全控制，我们仅需要引入 spring-boot-starter-security 模块，进行少量的配置，即可实现强大的安全管理！</p><p>记住几个类：</p><ul><li>WebSecurityConfigurerAdapter：自定义Security策略</li><li>AuthenticationManagerBuilder：自定义认证策略</li><li>@EnableWebSecurity：开启WebSecurity模式</li></ul><p>Spring Security的两个主要目标是 “认证” 和 “授权”（访问控制）。</p><p><strong>“认证”（Authentication）</strong></p><p>身份验证是关于验证您的凭据，如用户名/用户ID和密码，以验证您的身份。</p><p>身份验证通常通过用户名和密码完成，有时与身份验证因素结合使用。</p><p> <strong>“授权” （Authorization）</strong></p><p>授权发生在系统成功验证您的身份后，最终会授予您访问资源（如信息，文件，数据库，资金，位置，几乎任何内容）的完全权限。</p><p>这个概念是通用的，而不是只在Spring Security 中存在。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> SecurityConfig</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/21 13:57</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="comment">//授权</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//首页所有人可以访问,功能页只有对应权限的人才能访问</span></span><br><span class="line">        http.authorizeRequests()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/&quot;</span>).permitAll()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/level1/**&quot;</span>).hasRole(<span class="string">&quot;vip1&quot;</span>)</span><br><span class="line">                .antMatchers(<span class="string">&quot;/level2/**&quot;</span>).hasRole(<span class="string">&quot;vip2&quot;</span>)</span><br><span class="line">                .antMatchers(<span class="string">&quot;/level3/**&quot;</span>).hasRole(<span class="string">&quot;vip3&quot;</span>);</span><br><span class="line">        <span class="comment">//没有权限到登录页</span></span><br><span class="line">        http.formLogin()</span><br><span class="line">                .usernameParameter(<span class="string">&quot;username&quot;</span>)</span><br><span class="line">                .passwordParameter(<span class="string">&quot;password&quot;</span>)</span><br><span class="line">                .loginPage(<span class="string">&quot;/toLogin&quot;</span>)</span><br><span class="line">                .loginProcessingUrl(<span class="string">&quot;/login&quot;</span>); <span class="comment">// 登陆表单提交请求</span></span><br><span class="line">        </span><br><span class="line">        http.csrf().disable();</span><br><span class="line">        <span class="comment">//注销</span></span><br><span class="line">        http.logout().logoutSuccessUrl(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        <span class="comment">//开启记住我</span></span><br><span class="line">        <span class="comment">//定制记住我的参数！</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        http.rememberMe().rememberMeParameter(<span class="string">&quot;remember&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//认证</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        auth.inMemoryAuthentication().passwordEncoder(<span class="keyword">new</span> BCryptPasswordEncoder())</span><br><span class="line">                .withUser(<span class="string">&quot;codelorin&quot;</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">&quot;lorin&quot;</span>)).roles(<span class="string">&quot;vip2&quot;</span>, <span class="string">&quot;vip3&quot;</span>)</span><br><span class="line">                .and()</span><br><span class="line">                .withUser(<span class="string">&quot;root&quot;</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">&quot;lorin&quot;</span>)).roles(<span class="string">&quot;vip1&quot;</span>, <span class="string">&quot;vip2&quot;</span>, <span class="string">&quot;vip3&quot;</span>)</span><br><span class="line">                .and()</span><br><span class="line">                .withUser(<span class="string">&quot;guest&quot;</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">&quot;lorin&quot;</span>)).roles(<span class="string">&quot;vip1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="七-Shiro安全框架"><a href="#七-Shiro安全框架" class="headerlink" title="七.Shiro安全框架"></a>七.Shiro安全框架</h2><ul><li>快速入门<ul><li>Subject 用户</li><li>SecurityManager 管理用户</li><li>Realm 连接数据</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Licensed to the Apache Software Foundation (ASF) under one</span></span><br><span class="line"><span class="comment"> * or more contributor license agreements.  See the NOTICE file</span></span><br><span class="line"><span class="comment"> * distributed with this work for additional information</span></span><br><span class="line"><span class="comment"> * regarding copyright ownership.  The ASF licenses this file</span></span><br><span class="line"><span class="comment"> * to you under the Apache License, Version 2.0 (the</span></span><br><span class="line"><span class="comment"> * &quot;License&quot;); you may not use this file except in compliance</span></span><br><span class="line"><span class="comment"> * with the License.  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Unless required by applicable law or agreed to in writing,</span></span><br><span class="line"><span class="comment"> * software distributed under the License is distributed on an</span></span><br><span class="line"><span class="comment"> * &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</span></span><br><span class="line"><span class="comment"> * KIND, either express or implied.  See the License for the</span></span><br><span class="line"><span class="comment"> * specific language governing permissions and limitations</span></span><br><span class="line"><span class="comment"> * under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.ini.IniSecurityManagerFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.SecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.session.Session;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.lang.util.Factory;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Simple Quickstart application showing how to use Shiro&#x27;s API.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 0.9 RC2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Quickstart</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">transient</span> Logger log = LoggerFactory.getLogger(Quickstart.class);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Factory&lt;SecurityManager&gt; factory = <span class="keyword">new</span> IniSecurityManagerFactory(<span class="string">&quot;classpath:shiro.ini&quot;</span>);</span><br><span class="line">        SecurityManager securityManager = factory.getInstance();</span><br><span class="line"></span><br><span class="line">        SecurityUtils.setSecurityManager(securityManager);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取当前对象Subject</span></span><br><span class="line">        Subject currentUser = SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过当前用户获取session</span></span><br><span class="line">        Session session = currentUser.getSession();</span><br><span class="line">        session.setAttribute(<span class="string">&quot;someKey&quot;</span>, <span class="string">&quot;aValue&quot;</span>);</span><br><span class="line">        String value = (String) session.getAttribute(<span class="string">&quot;someKey&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (value.equals(<span class="string">&quot;aValue&quot;</span>)) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;Retrieved the correct value! [&quot;</span> + value + <span class="string">&quot;]&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断当前的用户是否被认证</span></span><br><span class="line">        <span class="keyword">if</span> (!currentUser.isAuthenticated()) &#123;</span><br><span class="line">            <span class="comment">// token 令牌</span></span><br><span class="line">            UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">&quot;lonestarr&quot;</span>, <span class="string">&quot;vespa&quot;</span>);</span><br><span class="line">            <span class="comment">// 记住我</span></span><br><span class="line">            token.setRememberMe(<span class="keyword">true</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//执行登录操作</span></span><br><span class="line">                currentUser.login(token);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (UnknownAccountException uae) &#123;</span><br><span class="line">                log.info(<span class="string">&quot;There is no user with username of &quot;</span> + token.getPrincipal());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IncorrectCredentialsException ice) &#123;</span><br><span class="line">                log.info(<span class="string">&quot;Password for account &quot;</span> + token.getPrincipal() + <span class="string">&quot; was incorrect!&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (LockedAccountException lae) &#123;</span><br><span class="line">                log.info(<span class="string">&quot;The account for username &quot;</span> + token.getPrincipal() + <span class="string">&quot; is locked.  &quot;</span> +</span><br><span class="line">                        <span class="string">&quot;Please contact your administrator to unlock it.&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// ... catch more exceptions here (maybe custom ones specific to your application?</span></span><br><span class="line">            <span class="keyword">catch</span> (AuthenticationException ae) &#123;</span><br><span class="line">                <span class="comment">//unexpected condition?  error?</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//say who they are:</span></span><br><span class="line">        <span class="comment">//print their identifying principal (in this case, a username):</span></span><br><span class="line">        log.info(<span class="string">&quot;User [&quot;</span> + currentUser.getPrincipal() + <span class="string">&quot;] logged in successfully.&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//测试角色</span></span><br><span class="line">        <span class="keyword">if</span> (currentUser.hasRole(<span class="string">&quot;schwartz&quot;</span>)) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;May the Schwartz be with you!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            log.info(<span class="string">&quot;Hello, mere mortal.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//粗粒度</span></span><br><span class="line">        <span class="keyword">if</span> (currentUser.isPermitted(<span class="string">&quot;lightsaber:wield&quot;</span>)) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;You may use a lightsaber ring.  Use it wisely.&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            log.info(<span class="string">&quot;Sorry, lightsaber rings are for schwartz masters only.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//细粒度</span></span><br><span class="line">        <span class="keyword">if</span> (currentUser.isPermitted(<span class="string">&quot;winnebago:drive:eagle5&quot;</span>)) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;You are permitted to &#x27;drive&#x27; the winnebago with license plate (id) &#x27;eagle5&#x27;.  &quot;</span> +</span><br><span class="line">                    <span class="string">&quot;Here are the keys - have fun!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            log.info(<span class="string">&quot;Sorry, you aren&#x27;t allowed to drive the &#x27;eagle5&#x27; winnebago!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//注销</span></span><br><span class="line">        currentUser.logout();</span><br><span class="line"></span><br><span class="line">        System.exit(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>springboot集成</p><p>认证过滤器：<br>anon：无需认证即可访问，游客身份。<br>authc：必须认证（登录）才能访问。<br>authcBasic：需要通过 httpBasic 认证。<br>user：不一定已通过认证，只要是曾经被 Shiro 记住过登录状态的用户就可以正常发起请求，比如 rememberMe。</p><p>授权过滤器:<br>perms：必须拥有对某个资源的访问权限（授权）才能访问。<br>role：必须拥有某个角色权限才能访问。<br>port：请求的端口必须为指定值才可以访问。<br>rest：请求必须是 RESTful，method 为 post、get、delete、put。<br>ssl：必须是安全的 URL 请求，协议为 HTTPS。</p><ul><li><p>ShiroConfig</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.spring.web.ShiroFilterFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.web.mgt.DefaultWebSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> ShiroConfig</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/21 15:19</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroConfig</span> </span>&#123;</span><br><span class="line">    <span class="comment">//ShiroFilterFactoryBean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">getShiroFilterFactoryBean</span><span class="params">(<span class="meta">@Qualifier(&quot;securityManager&quot;)</span> DefaultWebSecurityManager defaultWebSecurityManager)</span> </span>&#123;</span><br><span class="line">        ShiroFilterFactoryBean bean = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line">        <span class="comment">//设置安全管理器</span></span><br><span class="line">        bean.setSecurityManager(defaultWebSecurityManager);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//DefaultWebSecurityManager</span></span><br><span class="line">    <span class="meta">@Bean(&quot;name=securityManager&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DefaultWebSecurityManager <span class="title">getDefaultWebSecurityManager</span><span class="params">(<span class="meta">@Qualifier(&quot;userRealm&quot;)</span> UserRealm userRealm)</span> </span>&#123;</span><br><span class="line">        DefaultWebSecurityManager securityManager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line">        <span class="comment">//关联UserRealm</span></span><br><span class="line">        securityManager.setRealm(userRealm);</span><br><span class="line">        <span class="keyword">return</span> securityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建realm对象,需要自定义类</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserRealm <span class="title">userRealm</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> UserRealm();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.IncorrectCredentialsException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UnknownAccountException;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.UsernamePasswordToken;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> MyController</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/21 15:07</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&#123;&quot;/&quot;, &quot;index&quot;&#125;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(Model model)</span> </span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;HelloShiro&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/user/add&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;user/add&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/user/delete&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;user/delete&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/toLogin&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toLogin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(String name, String pwd, Model model)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取当前用户</span></span><br><span class="line">        Subject subject = SecurityUtils.getSubject();</span><br><span class="line">        UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(name, pwd);</span><br><span class="line">        <span class="comment">//执行登录方法</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            subject.login(token);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownAccountException e) &#123;</span><br><span class="line">            model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;用户名错误&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IncorrectCredentialsException e) &#123;</span><br><span class="line">            model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;密码错误&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/unauth&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">unauth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;未授权没有访问权限&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>ShiroConfig</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> at.pollux.thymeleaf.shiro.dialect.ShiroDialect;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.spring.web.ShiroFilterFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.web.mgt.DefaultWebSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> ShiroConfig</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/21 15:19</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroConfig</span> </span>&#123;</span><br><span class="line">    <span class="comment">//ShiroFilterFactoryBean</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">getShiroFilterFactoryBean</span><span class="params">(<span class="meta">@Qualifier(&quot;getDefaultWebSecurityManager&quot;)</span> DefaultWebSecurityManager defaultWebSecurityManager)</span> </span>&#123;</span><br><span class="line">        ShiroFilterFactoryBean bean = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line">        <span class="comment">//设置安全管理器</span></span><br><span class="line">        bean.setSecurityManager(defaultWebSecurityManager);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//anon:所有人都可以 authc:必须认证 user:记住我才可以访问 role:某个用户权限才可以访问</span></span><br><span class="line">        Map&lt;String, String&gt; filterMap = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">//filterMap.put(&quot;/user/add&quot;, &quot;authc&quot;);</span></span><br><span class="line"></span><br><span class="line">        filterMap.put(<span class="string">&quot;/user/add&quot;</span>, <span class="string">&quot;perms[user:add]&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/user/delete&quot;</span>, <span class="string">&quot;perms[user:delete]&quot;</span>);</span><br><span class="line"></span><br><span class="line">        bean.setFilterChainDefinitionMap(filterMap);</span><br><span class="line">        <span class="comment">//设置登录请求</span></span><br><span class="line">        bean.setLoginUrl(<span class="string">&quot;/toLogin&quot;</span>);</span><br><span class="line">        <span class="comment">//未授权页面</span></span><br><span class="line">        bean.setUnauthorizedUrl(<span class="string">&quot;/unauth&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//DefaultWebSecurityManager</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DefaultWebSecurityManager <span class="title">getDefaultWebSecurityManager</span><span class="params">(<span class="meta">@Qualifier(&quot;userRealm&quot;)</span> UserRealm userRealm)</span> </span>&#123;</span><br><span class="line">        DefaultWebSecurityManager securityManager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line">        <span class="comment">//关联UserRealm</span></span><br><span class="line">        securityManager.setRealm(userRealm);</span><br><span class="line">        <span class="keyword">return</span> securityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建realm对象,需要自定义类</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserRealm <span class="title">userRealm</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> UserRealm();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//整合 ShiroDialect</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShiroDialect <span class="title">getShiroDialect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ShiroDialect();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>UserRealm</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codelorin.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.codelorin.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.AuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.SimpleAuthorizationInfo;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.AuthorizingRealm;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.session.Session;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.PrincipalCollection;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> UserRealm</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/21 15:21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="comment">//授权</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principalCollection)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行了授权方法&quot;</span>);</span><br><span class="line"></span><br><span class="line">        SimpleAuthorizationInfo info = <span class="keyword">new</span> SimpleAuthorizationInfo();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//从认证获取用户信息</span></span><br><span class="line">        Subject subject = SecurityUtils.getSubject();</span><br><span class="line">        User currentUser = (User) subject.getPrincipal();</span><br><span class="line">        <span class="comment">//授予用户权限</span></span><br><span class="line">        info.addStringPermission(currentUser.getPerms());</span><br><span class="line">        <span class="comment">//设置session</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Session session = subject.getSession();</span><br><span class="line">        session.setAttribute(<span class="string">&quot;loginUser&quot;</span>, currentUser);</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="comment">//认证</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken token)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行了认证方法&quot;</span>);</span><br><span class="line"></span><br><span class="line">        UsernamePasswordToken userToken = (UsernamePasswordToken) token;</span><br><span class="line">        User user = userService.queryUserByName(userToken.getUsername());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (user == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SimpleAuthenticationInfo(user, user.getPwd(), <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="八-Swagger-Ui"><a href="#八-Swagger-Ui" class="headerlink" title="八.Swagger-Ui"></a>八.Swagger-Ui</h2><ul><li>了解Swagger的概念及作用</li><li>掌握在项目中集成Swagger自动生成API文档</li></ul><p><strong>前后端分离</strong></p><ul><li>前端 -&gt; 前端控制层、视图层</li><li>后端 -&gt; 后端控制层、服务层、数据访问层</li><li>前后端通过API进行交互</li><li>前后端相对独立且松耦合</li></ul><p><strong>产生的问题</strong></p><ul><li>前后端集成，前端或者后端无法做到“及时协商，尽早解决”，最终导致问题集中爆发</li></ul><p><strong>解决方案</strong></p><ul><li>首先定义schema [ 计划的提纲 ]，并实时跟踪最新的API，降低集成风险</li></ul><p><strong>Swagger</strong></p><ul><li>号称世界上最流行的API框架</li><li>Restful Api 文档在线自动生成器 =&gt; <strong>API 文档 与API 定义同步更新</strong></li><li>直接运行，在线测试API</li><li>支持多种语言 （如：Java，PHP等）</li><li>官网：<a href="https://swagger.io/">https://swagger.io/</a></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.xiaoymin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>knife4j-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>&gt;</span><br></pre></td></tr></table></figure><p><strong>生产环境关闭swagger</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">knife4j:</span><br><span class="line">  # 开启增强配置</span><br><span class="line">  enable: <span class="keyword">true</span></span><br><span class="line">  # 生产环境屏蔽</span><br><span class="line">  production: <span class="keyword">true</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">any() <span class="comment">// 扫描所有，项目中的所有接口都会被扫描到</span></span><br><span class="line">none() <span class="comment">// 不扫描接口</span></span><br><span class="line"><span class="comment">// 通过方法上的注解扫描，如withMethodAnnotation(GetMapping.class)只扫描get请求</span></span><br><span class="line">withMethodAnnotation(<span class="keyword">final</span> Class&lt;? extends Annotation&gt; annotation)</span><br><span class="line"><span class="comment">// 通过类上的注解扫描，如.withClassAnnotation(Controller.class)只扫描有controller注解的类中的接口</span></span><br><span class="line">withClassAnnotation(<span class="keyword">final</span> Class&lt;? extends Annotation&gt; annotation)</span><br><span class="line">basePackage(<span class="keyword">final</span> String basePackage) <span class="comment">// 根据包路径扫描接口</span></span><br></pre></td></tr></table></figure><ol><li><p>过滤什么路径我们通过PathSelectors类的4个方法来进行判断</p><ol><li><strong>PathSelectors.any():</strong> 所有的api都显示</li><li><strong>PathSelectors.none():</strong> 所有的路径都不显示</li><li><strong>PathSelectors.regex(String pathRegex): 按照String的matches方法进行匹配。例如：PathSelectors.regex(“/user/*”)</strong></li><li><strong>PathSelectors.ant(String antPattern): 按照Spring的AntPathMatcher提供的match方法进行匹配 例如：PathSelectors.ant(“/user/**“)</strong></li></ol><blockquote><p>AntPathMatcher.match(String pattern, String path) 可以做URLs匹配，规则如下</p><p>？匹配一个字符</p><p>*匹配0个或多个字符</p><p>** 匹配0个或多个目录</p></blockquote></li></ol><ul><li>注解</li></ul><blockquote><p>只要接口返回中存在实体类就会被扫描到</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModel;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> User</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/21 19:26</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@ApiModel(value=&quot;user对象&quot;,description=&quot;用户对象user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@ApiModelProperty(value=&quot;用户名&quot;,name=&quot;name&quot;,example=&quot;codelorin&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="meta">@ApiModelProperty(value=&quot;密码&quot;,name=&quot;password&quot;,example=&quot;123&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><h3 id="常用注解"><a href="#常用注解" class="headerlink" title="常用注解"></a>常用注解</h3></blockquote><p>Swagger的所有注解定义在io.swagger.annotations包下</p><p>下面列一些经常用到的，未列举出来的可以另行查阅说明：</p><table><thead><tr><th>Swagger注解</th><th>简单说明</th></tr></thead><tbody><tr><td>@Api(tags = “xxx模块说明”)</td><td>作用在模块类上</td></tr><tr><td>@ApiOperation(“xxx接口说明”)</td><td>作用在接口方法上</td></tr><tr><td>@ApiModel(“xxxPOJO说明”)</td><td>作用在模型类上：如VO、BO</td></tr><tr><td>@ApiModelProperty(value = “xxx属性说明”,hidden = true)</td><td>作用在类方法和属性上，hidden设置为true可以隐藏该属性</td></tr><tr><td>@ApiParam(“xxx参数说明”)</td><td>作用在参数、方法和字段上，类似@ApiModelProperty</td></tr></tbody></table><p>我们也可以给请求的接口配置一些注释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation(&quot;接口&quot;)</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/kuang&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">kuang</span><span class="params">(<span class="meta">@ApiParam(&quot;这个名字会被返回&quot;)</span>String username)</span></span>&#123;</span><br><span class="line">   <span class="keyword">return</span> username;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样的话，可以给一些比较难理解的属性或者接口，增加一些配置信息，让人更容易阅读！</p><p>相较于传统的Postman或Curl方式测试接口，使用swagger简直就是傻瓜式操作，不需要额外说明文档(写得好本身就是文档)而且更不容易出错，只需要录入数据然后点击Execute，如果再配合自动化框架，可以说基本就不需要人为操作了。</p><p>Swagger是个优秀的工具，现在国内已经有很多的中小型互联网公司都在使用它，相较于传统的要先出Word接口文档再测试的方式，显然这样也更符合现在的快速迭代开发行情。当然了，提醒下大家在正式环境要记得关闭Swagger，一来出于安全考虑二来也可以节省运行时内存。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.config;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.xiaoymin.knife4j.spring.annotations.EnableKnife4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Profile;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.Environment;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.PathSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.RequestHandlerSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.oas.annotations.EnableOpenApi;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.ApiInfo;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.Contact;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spi.DocumentationType;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> SwaggerConfig</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/21 18:19</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableKnife4j</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerConfig</span> </span>&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="meta">@Bean(value = &quot;apiV1&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">apiV1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .groupName(<span class="string">&quot;v1&quot;</span>)</span><br><span class="line">                .select()</span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(<span class="string">&quot;com.demo.controller.v1&quot;</span>))</span><br><span class="line">                .paths(PathSelectors.any())</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(value = &quot;apiV2&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">apiV2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .groupName(<span class="string">&quot;v2&quot;</span>)</span><br><span class="line">                .select()</span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(<span class="string">&quot;com.demo.controller.v2&quot;</span>))</span><br><span class="line">                .paths(PathSelectors.any())</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//相关信息</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfo(<span class="string">&quot;Swagger3接口文档&quot;</span>,</span><br><span class="line">                <span class="string">&quot;如有疑问，请联系开发工程师CodeLorin&quot;</span>,</span><br><span class="line">                <span class="string">&quot;1.0&quot;</span>,</span><br><span class="line">                <span class="string">&quot;https://www.codelorin.cn&quot;</span>,</span><br><span class="line">                <span class="keyword">new</span> Contact(<span class="string">&quot;CodeLorin&quot;</span>, <span class="string">&quot;https://www.codelorin.cn&quot;</span>, <span class="string">&quot;codelorin@163.com&quot;</span>),</span><br><span class="line">                <span class="string">&quot;Apache 2.0&quot;</span>,</span><br><span class="line">                <span class="string">&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;</span>,</span><br><span class="line">                <span class="keyword">new</span> ArrayList());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="九-异步开启"><a href="#九-异步开启" class="headerlink" title="九.异步开启"></a>九.异步开启</h2><p>在启动类开启异步注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableAsync;</span><br><span class="line"><span class="comment">//开启异步注解</span></span><br><span class="line"><span class="meta">@EnableAsync</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootTestApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SpringbootTestApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Async;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> AsyncService</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/21 21:31</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AsyncService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Async</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;业务进行中....&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.conrtoller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codelorin.service.AsyncService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> HelloController</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/21 21:31</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    AsyncService asyncService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        asyncService.hello();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="十-邮件发送"><a href="#十-邮件发送" class="headerlink" title="十.邮件发送"></a>十.邮件发送</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.mail.host</span>=<span class="string">smtp.163.com</span></span><br><span class="line"><span class="meta">spring.mail.username</span>=<span class="string">bylorin@163.com</span></span><br><span class="line"><span class="meta">spring.mail.password</span>=<span class="string">JZYFBIUAXSOTBJIM</span></span><br><span class="line"><span class="comment"># 开启加密验证</span></span><br><span class="line"><span class="meta">spring.mail.properties.mail.smtp.ssL.enable</span>=<span class="string">true</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.SimpleMailMessage;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.javamail.JavaMailSenderImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.javamail.MimeMessageHelper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.mail.MessagingException;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpringbootTestApplicationTests</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JavaMailSenderImpl mailSender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SimpleMailMessage simpleMailMessage = <span class="keyword">new</span> SimpleMailMessage();</span><br><span class="line">        simpleMailMessage.setSubject(<span class="string">&quot;你好啊!!&quot;</span>);</span><br><span class="line">        simpleMailMessage.setText(<span class="string">&quot;这是springboot的测试&quot;</span>);</span><br><span class="line">        simpleMailMessage.setTo(<span class="string">&quot;codelorin@163.com&quot;</span>);</span><br><span class="line">        simpleMailMessage.setFrom(<span class="string">&quot;bylorin@163.com&quot;</span>);</span><br><span class="line">        mailSender.send(simpleMailMessage);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Test2</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException </span>&#123;</span><br><span class="line">        <span class="comment">//复杂邮件</span></span><br><span class="line">        MimeMessage message = mailSender.createMimeMessage();</span><br><span class="line">        MimeMessageHelper helper = <span class="keyword">new</span> MimeMessageHelper(message, <span class="keyword">true</span>);</span><br><span class="line">        helper.setSubject(<span class="string">&quot;你好啊!!&quot;</span>);</span><br><span class="line">        helper.setText(<span class="string">&quot;&lt;p style=&#x27;color:red&#x27;&gt;hello&lt;/p&gt;&quot;</span>, <span class="keyword">true</span>);</span><br><span class="line">        helper.addAttachment(<span class="string">&quot;1.png&quot;</span>, <span class="keyword">new</span> File(<span class="string">&quot;C:\\Users\\lcary\\Desktop\\1.png&quot;</span>));</span><br><span class="line">        helper.setTo(<span class="string">&quot;codelorin@163.com&quot;</span>);</span><br><span class="line">        helper.setFrom(<span class="string">&quot;bylorin@163.com&quot;</span>);</span><br><span class="line">        mailSender.send(message);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="十一-定时任务"><a href="#十一-定时任务" class="headerlink" title="十一.定时任务"></a>十一.定时任务</h2><ul><li>@EnableScheduling //开始定时任务</li><li>@Scheduled //什么时候执行</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableAsync;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableScheduling;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启异步注解</span></span><br><span class="line"><span class="meta">@EnableAsync</span></span><br><span class="line"><span class="comment">//开启定时任务的注解</span></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootTestApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SpringbootTestApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Scheduled;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> ScheduledService</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/21 22:09</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScheduledService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//表达式去查就行</span></span><br><span class="line">    <span class="meta">@Scheduled(cron = &quot;0 41 22 * * ?&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;你被执行了!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="十二-springboot整合redis"><a href="#十二-springboot整合redis" class="headerlink" title="十二.springboot整合redis"></a>十二.springboot整合redis</h2><blockquote><p>jedis: 采用的直连,不安全的,使用jedis pool连接池</p><p>lettuce: 采用netty,实例可以在多个线程中进行共享,不存在线程不安全的情况!可以减少线程数据,更像Nio模式</p></blockquote><p>1.导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.配置连接</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.redis.host</span>=<span class="string">127.0.0.1</span></span><br><span class="line"><span class="meta">spring.redis.port</span>=<span class="string">6379</span></span><br></pre></td></tr></table></figure><p>Lili8080.!</p><p>3.</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis-Plus学习笔记</title>
      <link href="posts/aa01140ed11d/"/>
      <url>posts/aa01140ed11d/</url>
      
        <content type="html"><![CDATA[<h1 id="SpringMVC学习笔记"><a href="#SpringMVC学习笔记" class="headerlink" title="SpringMVC学习笔记"></a>SpringMVC学习笔记</h1><blockquote><p>SSM: Spring+SpringMVC+Mybatis</p></blockquote><p>MVC:模型,视图,控制器</p><h2 id="一-第一个springmvc程序"><a href="#一-第一个springmvc程序" class="headerlink" title="一.第一个springmvc程序"></a>一.第一个springmvc程序</h2><ul><li><p>web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--DispatchServlet: 这个是SpringMvc的核心:请求分发器,前端控制器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--要绑定spring-mvc的配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--启动级别1--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--/ 匹配所有的请求；（不包括.jsp）--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--/* 匹配所有的请求；（包括.jsp）--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>springmvc-servlet.xml</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--处理器映射器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--处理器适配器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--视图解析器--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--视图解析器:DispatcherServlet给他的ModelAndView--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span> <span class="attr">id</span>=<span class="string">&quot;InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--前缀--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--后缀--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Handler--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;/hello&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.codelorin.controller.HelloController&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>controller</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.Controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> HelloController</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/20 13:01</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> <span class="keyword">implements</span> <span class="title">Controller</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">handleRequest</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        String result = <span class="string">&quot;Hello,CodeLorin!!!&quot;</span>;</span><br><span class="line">        modelAndView.addObject(<span class="string">&quot;msg&quot;</span>, result);</span><br><span class="line">        modelAndView.setViewName(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="二-注解实现springmcv"><a href="#二-注解实现springmcv" class="headerlink" title="二.注解实现springmcv"></a>二.注解实现springmcv</h2><ul><li>web.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--DispatchServlet: 这个是SpringMvc的核心:请求分发器,前端控制器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--要绑定spring-mvc的配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--启动级别1--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--/ 匹配所有的请求；（不包括.jsp）--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--/* 匹配所有的请求；（包括.jsp）--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>springmvc-servlet</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">       https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自动扫描包，让指定包下的注解生效,由IOC容器统一管理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.codelorin.controller&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 让Spring MVC不处理静态资源 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    支持mvc注解驱动</span></span><br><span class="line"><span class="comment">        在spring中一般采用@RequestMapping注解来完成映射关系</span></span><br><span class="line"><span class="comment">        要想使@RequestMapping注解生效</span></span><br><span class="line"><span class="comment">        必须向上下文中注册DefaultAnnotationHandlerMapping</span></span><br><span class="line"><span class="comment">        和一个AnnotationMethodHandlerAdapter实例</span></span><br><span class="line"><span class="comment">        这两个实例分别在类级别和方法级别处理。</span></span><br><span class="line"><span class="comment">        而annotation-driven配置帮助我们自动完成上述两个实例的注入。</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 视图解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">id</span>=<span class="string">&quot;internalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 前缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 后缀 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> HelloController</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/20 13:15</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="comment">//类下的所有方法都要拼接这个</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">(Model model)</span> </span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;Hello,SpringMVCAnnotation!!&quot;</span>);</span><br><span class="line">        <span class="comment">//这个为/WEB-INF/jsp/hello.jsp</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="三-RestFul风格"><a href="#三-RestFul风格" class="headerlink" title="三.RestFul风格"></a>三.RestFul风格</h2><p><strong>概念</strong></p><p>Restful就是一个资源定位及资源操作的风格。不是标准也不是协议，只是一种风格。基于这个风格设计的软件可以更简洁，更有层次，更易于实现缓存等机制。</p><p><strong>功能</strong></p><p>资源：互联网所有的事物都可以被抽象为资源</p><p>资源操作：使用POST、DELETE、PUT、GET，使用不同方法对资源进行操作。</p><p>分别对应 添加、 删除、修改、查询。</p><blockquote><p> 可以使用PathVariable 注解，让方法参数的值对应绑定到一个URI模板变量上。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/t/&#123;a&#125;/&#123;b&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">test2</span><span class="params">(<span class="meta">@PathVariable</span> <span class="keyword">int</span> a, <span class="meta">@PathVariable</span> <span class="keyword">int</span> b, Model model)</span> </span>&#123;</span><br><span class="line">    model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;a:&quot;</span> + a + <span class="string">&quot;b:&quot;</span> + b);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p> 限定请求方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/t/&#123;a&#125;/&#123;b&#125;&quot;, method = &#123;RequestMethod.POST&#125;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">test2</span><span class="params">(<span class="meta">@PathVariable</span> <span class="keyword">int</span> a, <span class="meta">@PathVariable</span> <span class="keyword">int</span> b, Model model)</span> </span>&#123;</span><br><span class="line">    model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;a:&quot;</span> + a + <span class="string">&quot;b:&quot;</span> + b);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p> 注解限定请求方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/h/&#123;a&#125;/&#123;b&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">test2</span><span class="params">(<span class="meta">@PathVariable</span> <span class="keyword">int</span> a, <span class="meta">@PathVariable</span> <span class="keyword">int</span> b, Model model)</span> </span>&#123;</span><br><span class="line">    model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;a:&quot;</span> + a + <span class="string">&quot;b:&quot;</span> + b);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四-重定向"><a href="#四-重定向" class="headerlink" title="四.重定向"></a>四.重定向</h2><p><strong>通过SpringMVC来实现转发和重定向 - 无需视图解析器；</strong></p><p>测试前，需要将视图解析器注释掉</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResultSpringMVC</span> </span>&#123;</span><br><span class="line">   <span class="meta">@RequestMapping(&quot;/rsm/t1&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="comment">//转发</span></span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;/index.jsp&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping(&quot;/rsm/t2&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">test2</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="comment">//转发二</span></span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;forward:/index.jsp&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping(&quot;/rsm/t3&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">test3</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="comment">//重定向</span></span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;redirect:/index.jsp&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>通过SpringMVC来实现转发和重定向 - 有视图解析器；</strong></p><p>重定向 , 不需要视图解析器 , 本质就是重新请求一个新地方嘛 , 所以注意路径问题.</p><p>可以重定向到另外一个请求实现 .</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResultSpringMVC2</span> </span>&#123;</span><br><span class="line">   <span class="meta">@RequestMapping(&quot;/rsm2/t1&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="comment">//转发</span></span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;test&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping(&quot;/rsm2/t2&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">test2</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="comment">//重定向</span></span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;redirect:/index.jsp&quot;</span>;</span><br><span class="line">       <span class="comment">//return &quot;redirect:hello.do&quot;; //hello.do为另一个请求/</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="五-处理前端数据"><a href="#五-处理前端数据" class="headerlink" title="五.处理前端数据"></a>五.处理前端数据</h2><blockquote><p> 处理提交数据</p></blockquote><p><strong>1、提交的域名称和处理方法的参数名一致</strong></p><p>提交数据 : <a href="http://localhost:8080/hello?name=kuangshen">http://localhost:8080/hello?name=kuangshen</a></p><p>处理方法 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">   System.out.println(name);</span><br><span class="line">   <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后台输出 : kuangshen</p><p><strong>2、提交的域名称和处理方法的参数名不一致</strong></p><p>提交数据 : <a href="http://localhost:8080/hello?username=codelorin">http://localhost:8080/hello?username=codelorin</a></p><p>处理方法 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@RequestParam(&quot;username&quot;) : username提交的域的名称 .</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">(<span class="meta">@RequestParam(&quot;username&quot;)</span> String name)</span></span>&#123;</span><br><span class="line">   System.out.println(name);</span><br><span class="line">   <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后台输出 : codelorin</p><p><strong>3、提交的是一个对象</strong></p><p>要求提交的表单域和对象的属性名一致  , 参数使用对象即可</p><p>1、实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">   <span class="keyword">private</span> String name;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">   <span class="comment">//构造</span></span><br><span class="line">   <span class="comment">//get/set</span></span><br><span class="line">   <span class="comment">//tostring()</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、提交数据 : <a href="http://localhost:8080/mvc04/user?name=codelorin&amp;id=1&amp;age=15">http://localhost:8080/mvc04/user?name=codelorin&amp;id=1&amp;age=15</a></p><p>3、处理方法 :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">user</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">   System.out.println(user);</span><br><span class="line">   <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后台输出 : User { id=1, name=’kuangshen’, age=15 }</p><p>说明：如果使用对象的话，前端传递的参数名和对象名必须一致，否则就是null。</p><blockquote><p> 数据显示到前端</p></blockquote><p><strong>第一种 : 通过ModelAndView</strong></p><p>我们前面一直都是如此 . 就不过多解释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ControllerTest1</span> <span class="keyword">implements</span> <span class="title">Controller</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">handleRequest</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">       <span class="comment">//返回一个模型视图对象</span></span><br><span class="line">       ModelAndView mv = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">       mv.addObject(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;ControllerTest1&quot;</span>);</span><br><span class="line">       mv.setViewName(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">       <span class="keyword">return</span> mv;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>第二种 : 通过ModelMap</strong></p><p>ModelMap</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">(<span class="meta">@RequestParam(&quot;username&quot;)</span> String name, ModelMap model)</span></span>&#123;</span><br><span class="line">   <span class="comment">//封装要显示到视图中的数据</span></span><br><span class="line">   <span class="comment">//相当于req.setAttribute(&quot;name&quot;,name);</span></span><br><span class="line">   model.addAttribute(<span class="string">&quot;name&quot;</span>,name);</span><br><span class="line">   System.out.println(name);</span><br><span class="line">   <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>第三种 : 通过Model</strong></p><p>Model</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/ct2/hello&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">(<span class="meta">@RequestParam(&quot;username&quot;)</span> String name, Model model)</span></span>&#123;</span><br><span class="line">   <span class="comment">//封装要显示到视图中的数据</span></span><br><span class="line">   <span class="comment">//相当于req.setAttribute(&quot;name&quot;,name);</span></span><br><span class="line">   model.addAttribute(<span class="string">&quot;msg&quot;</span>,name);</span><br><span class="line">   System.out.println(name);</span><br><span class="line">   <span class="keyword">return</span> <span class="string">&quot;test&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>对比</p></blockquote><p>就对于新手而言简单来说使用区别就是：</p><p>Model 只有寥寥几个方法只适合用于储存数据，简化了新手对于Model对象的操作和理解；</p><p>ModelMap 继承了 LinkedMap ，除了实现了自身的一些方法，同样的继承 LinkedMap 的方法和特性；</p><p>ModelAndView 可以在储存数据的同时，可以进行设置返回的逻辑视图，进行控制展示层的跳转。</p><p>当然更多的以后开发考虑的更多的是性能和优化，就不能单单仅限于此的了解。</p><p><strong>请使用80%的时间打好扎实的基础，剩下18%的时间研究框架，2%的时间去学点英文，框架的官方文档永远是最好的教程。</strong></p><h2 id="六-乱码问题"><a href="#六-乱码问题" class="headerlink" title="六.乱码问题"></a>六.乱码问题</h2><ul><li>过滤器解决乱码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>自定义类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequestWrapper;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 解决get和post请求 全部乱码的过滤器</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GenericEncodingFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">       <span class="comment">//处理response的字符编码</span></span><br><span class="line">       HttpServletResponse myResponse=(HttpServletResponse) response;</span><br><span class="line">       myResponse.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 转型为与协议相关对象</span></span><br><span class="line">       HttpServletRequest httpServletRequest = (HttpServletRequest) request;</span><br><span class="line">       <span class="comment">// 对request包装增强</span></span><br><span class="line">       HttpServletRequest myrequest = <span class="keyword">new</span> MyRequest(httpServletRequest);</span><br><span class="line">       chain.doFilter(myrequest, response);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义request对象，HttpServletRequest的包装类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyRequest</span> <span class="keyword">extends</span> <span class="title">HttpServletRequestWrapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> HttpServletRequest request;</span><br><span class="line">   <span class="comment">//是否编码的标记</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">boolean</span> hasEncode;</span><br><span class="line">   <span class="comment">//定义一个可以传入HttpServletRequest对象的构造函数，以便对其进行装饰</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">MyRequest</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">super</span>(request);<span class="comment">// super必须写</span></span><br><span class="line">       <span class="keyword">this</span>.request = request;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 对需要增强方法 进行覆盖</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Map <span class="title">getParameterMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="comment">// 先获得请求方式</span></span><br><span class="line">       String method = request.getMethod();</span><br><span class="line">       <span class="keyword">if</span> (method.equalsIgnoreCase(<span class="string">&quot;post&quot;</span>)) &#123;</span><br><span class="line">           <span class="comment">// post请求</span></span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               <span class="comment">// 处理post乱码</span></span><br><span class="line">               request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">               <span class="keyword">return</span> request.getParameterMap();</span><br><span class="line">          &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">               e.printStackTrace();</span><br><span class="line">          &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method.equalsIgnoreCase(<span class="string">&quot;get&quot;</span>)) &#123;</span><br><span class="line">           <span class="comment">// get请求</span></span><br><span class="line">           Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">           <span class="keyword">if</span> (!hasEncode) &#123; <span class="comment">// 确保get手动编码逻辑只运行一次</span></span><br><span class="line">               <span class="keyword">for</span> (String parameterName : parameterMap.keySet()) &#123;</span><br><span class="line">                   String[] values = parameterMap.get(parameterName);</span><br><span class="line">                   <span class="keyword">if</span> (values != <span class="keyword">null</span>) &#123;</span><br><span class="line">                       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; values.length; i++) &#123;</span><br><span class="line">                           <span class="keyword">try</span> &#123;</span><br><span class="line">                               <span class="comment">// 处理get乱码</span></span><br><span class="line">                               values[i] = <span class="keyword">new</span> String(values[i]</span><br><span class="line">                                      .getBytes(<span class="string">&quot;ISO-8859-1&quot;</span>), <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                          &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">                               e.printStackTrace();</span><br><span class="line">                          &#125;</span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">               hasEncode = <span class="keyword">true</span>;</span><br><span class="line">          &#125;</span><br><span class="line">           <span class="keyword">return</span> parameterMap;</span><br><span class="line">      &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">super</span>.getParameterMap();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//取一个值</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getParameter</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">       Map&lt;String, String[]&gt; parameterMap = getParameterMap();</span><br><span class="line">       String[] values = parameterMap.get(name);</span><br><span class="line">       <span class="keyword">if</span> (values == <span class="keyword">null</span>) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">      &#125;</span><br><span class="line">       <span class="keyword">return</span> values[<span class="number">0</span>]; <span class="comment">// 取回参数的第一个值</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//取所有值</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> String[] getParameterValues(String name) &#123;</span><br><span class="line">       Map&lt;String, String[]&gt; parameterMap = getParameterMap();</span><br><span class="line">       String[] values = parameterMap.get(name);</span><br><span class="line">       <span class="keyword">return</span> values;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="七-java返回json"><a href="#七-java返回json" class="headerlink" title="七.java返回json"></a>七.java返回json</h2><ul><li>Jackson</li></ul><p>乱码解决</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.MappingJackson2HttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;objectMapper&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean&quot;</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;failOnEmptyBeans&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.SerializationFeature;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JsonUtils</span> </span>&#123;</span><br><span class="line">   </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getJson</span><span class="params">(Object object)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> getJson(object,<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getJson</span><span class="params">(Object object,String dateFormat)</span> </span>&#123;</span><br><span class="line">       ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">       <span class="comment">//不使用时间差的方式</span></span><br><span class="line">       mapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, <span class="keyword">false</span>);</span><br><span class="line">       <span class="comment">//自定义日期格式对象</span></span><br><span class="line">       SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(dateFormat);</span><br><span class="line">       <span class="comment">//指定日期格式</span></span><br><span class="line">       mapper.setDateFormat(sdf);</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> mapper.writeValueAsString(object);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>FastJson</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.kuang.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FastJsonDemo</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="comment">//创建一个对象</span></span><br><span class="line">       User user1 = <span class="keyword">new</span> User(<span class="string">&quot;codelorin1号&quot;</span>, <span class="number">3</span>, <span class="string">&quot;男&quot;</span>);</span><br><span class="line">       User user2 = <span class="keyword">new</span> User(<span class="string">&quot;codelorin2号&quot;</span>, <span class="number">3</span>, <span class="string">&quot;男&quot;</span>);</span><br><span class="line">       User user3 = <span class="keyword">new</span> User(<span class="string">&quot;codelorin3号&quot;</span>, <span class="number">3</span>, <span class="string">&quot;男&quot;</span>);</span><br><span class="line">       User user4 = <span class="keyword">new</span> User(<span class="string">&quot;codelorin4号&quot;</span>, <span class="number">3</span>, <span class="string">&quot;男&quot;</span>);</span><br><span class="line">       List&lt;User&gt; list = <span class="keyword">new</span> ArrayList&lt;User&gt;();</span><br><span class="line">       list.add(user1);</span><br><span class="line">       list.add(user2);</span><br><span class="line">       list.add(user3);</span><br><span class="line">       list.add(user4);</span><br><span class="line"></span><br><span class="line">       System.out.println(<span class="string">&quot;*******Java对象 转 JSON字符串*******&quot;</span>);</span><br><span class="line">       String str1 = JSON.toJSONString(list);</span><br><span class="line">       System.out.println(<span class="string">&quot;JSON.toJSONString(list)==&gt;&quot;</span>+str1);</span><br><span class="line">       String str2 = JSON.toJSONString(user1);</span><br><span class="line">       System.out.println(<span class="string">&quot;JSON.toJSONString(user1)==&gt;&quot;</span>+str2);</span><br><span class="line"></span><br><span class="line">       System.out.println(<span class="string">&quot;\n****** JSON字符串 转 Java对象*******&quot;</span>);</span><br><span class="line">       User jp_user1=JSON.parseObject(str2,User.class);</span><br><span class="line">       System.out.println(<span class="string">&quot;JSON.parseObject(str2,User.class)==&gt;&quot;</span>+jp_user1);</span><br><span class="line"></span><br><span class="line">       System.out.println(<span class="string">&quot;\n****** Java对象 转 JSON对象 ******&quot;</span>);</span><br><span class="line">       JSONObject jsonObject1 = (JSONObject) JSON.toJSON(user2);</span><br><span class="line">       System.out.println(<span class="string">&quot;(JSONObject) JSON.toJSON(user2)==&gt;&quot;</span>+jsonObject1.getString(<span class="string">&quot;name&quot;</span>));</span><br><span class="line"></span><br><span class="line">       System.out.println(<span class="string">&quot;\n****** JSON对象 转 Java对象 ******&quot;</span>);</span><br><span class="line">       User to_java_user = JSON.toJavaObject(jsonObject1, User.class);</span><br><span class="line">       System.out.println(<span class="string">&quot;JSON.toJavaObject(jsonObject1, User.class)==&gt;&quot;</span>+to_java_user);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="八-ajax"><a href="#八-ajax" class="headerlink" title="八.ajax"></a>八.ajax</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(...)</span><br><span class="line">      部分参数：</span><br><span class="line">            url：请求地址</span><br><span class="line">            type：请求方式，GET、POST（1.9.0之后用method）</span><br><span class="line">        headers：请求头</span><br><span class="line">            data：要发送的数据&#123;</span><br><span class="line">            &quot;xxx&quot;:</span><br><span class="line">            &#125;</span><br><span class="line">    contentType：即将发送信息至服务器的内容编码类型(默认: &quot;application&#x2F;x-www-form-urlencoded; charset&#x3D;UTF-8&quot;)</span><br><span class="line">          async：是否异步</span><br><span class="line">        timeout：设置请求超时时间（毫秒）</span><br><span class="line">      beforeSend：发送请求前执行的函数(全局)</span><br><span class="line">        complete：完成之后执行的回调函数(全局)</span><br><span class="line">        success：成功之后执行的回调函数(全局)</span><br><span class="line">          error：失败之后执行的回调函数(全局)</span><br><span class="line">        accepts：通过请求头发送给服务器，告诉服务器当前客户端可接受的数据类型</span><br><span class="line">        dataType：将服务器端返回的数据转换成指定类型</span><br><span class="line">          &quot;xml&quot;: 将服务器端返回的内容转换成xml格式</span><br><span class="line">          &quot;text&quot;: 将服务器端返回的内容转换成普通文本格式</span><br><span class="line">          &quot;html&quot;: 将服务器端返回的内容转换成普通文本格式，在插入DOM中时，如果包含JavaScript标签，则会尝试去执行。</span><br><span class="line">        &quot;script&quot;: 尝试将返回值当作JavaScript去执行，然后再将服务器端返回的内容转换成普通文本格式</span><br><span class="line">          &quot;json&quot;: 将服务器端返回的内容转换成相应的JavaScript对象</span><br><span class="line">        &quot;jsonp&quot;: JSONP 格式使用 JSONP 形式调用函数时，如 &quot;myurl?callback&#x3D;?&quot; jQuery 将自动替换 ? 为正确的函数名，以执行回调函数</span><br></pre></td></tr></table></figure><h2 id="九-拦截器"><a href="#九-拦截器" class="headerlink" title="九.拦截器"></a>九.拦截器</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/**&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.codelorin.config.MyInterceptor&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> MyInterceptor</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/20 22:29</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line">    <span class="comment">//    false不放行</span></span><br><span class="line">    <span class="comment">//    true放行</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;拦截开始&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;拦截后&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;清理&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>登录例子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//跳转到登陆页面</span></span><br><span class="line">   <span class="meta">@RequestMapping(&quot;/jumplogin&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">jumpLogin</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//跳转到成功页面</span></span><br><span class="line">   <span class="meta">@RequestMapping(&quot;/jumpSuccess&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">jumpSuccess</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//登陆提交</span></span><br><span class="line">   <span class="meta">@RequestMapping(&quot;/login&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(HttpSession session, String username, String pwd)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">       <span class="comment">// 向session记录用户身份信息</span></span><br><span class="line">       System.out.println(<span class="string">&quot;接收前端===&quot;</span>+username);</span><br><span class="line">       session.setAttribute(<span class="string">&quot;user&quot;</span>, username);</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//退出登陆</span></span><br><span class="line">   <span class="meta">@RequestMapping(&quot;logout&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">logout</span><span class="params">(HttpSession session)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">       <span class="comment">// session 过期</span></span><br><span class="line">       session.invalidate();</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">       <span class="comment">// 如果是登陆页面则放行</span></span><br><span class="line">       System.out.println(<span class="string">&quot;url: &quot;</span> + request.getRequestURI());</span><br><span class="line">       <span class="keyword">if</span> (request.getRequestURI().contains(<span class="string">&quot;login&quot;</span>)) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">       HttpSession session = request.getSession();</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 如果用户已登陆也放行</span></span><br><span class="line">       <span class="keyword">if</span>(session.getAttribute(<span class="string">&quot;user&quot;</span>) != <span class="keyword">null</span>) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 用户没有登陆跳转到登陆页面</span></span><br><span class="line">       request.getRequestDispatcher(<span class="string">&quot;/WEB-INF/jsp/login.jsp&quot;</span>).forward(request, response);</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, Exception e)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="十-上传下载"><a href="#十-上传下载" class="headerlink" title="十.上传下载"></a>十.上传下载</h2><p><strong>对表单中的 enctype 属性做个详细的说明：</strong></p><ul><li>application/x-www=form-urlencoded：默认方式，只处理表单域中的 value 属性值，采用这种编码方式的表单会将表单域中的值处理成 URL 编码方式。</li><li>multipart/form-data：这种编码方式会以二进制流的方式来处理表单数据，这种编码方式会把文件域指定文件的内容也封装到请求参数中，不会对字符编码。</li><li>text/plain：除了把空格转换为 “+” 号外，其他字符都不做编码处理，这种方式适用直接通过表单发送邮件。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/upload2&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;upload&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--文件上传--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--servlet-api导入高版本的--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;multipartResolver&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 请求的编码格式，必须和jSP的pageEncoding属性一致，以便正确读取表单的内容，默认为ISO-8859-1 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;utf-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上传文件大小上限，单位为字节（10485760=10M） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxUploadSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10485760&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxInMemorySize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;40960&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.commons.CommonsMultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Upload</span> </span>&#123;</span><br><span class="line">    <span class="comment">//@RequestParam(&quot;file&quot;) 将name=file控件得到的文件封装成CommonsMultipartFile 对象</span></span><br><span class="line">    <span class="comment">//批量上传CommonsMultipartFile则为数组即可</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/upload&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">fileUpload</span><span class="params">(<span class="meta">@RequestParam(&quot;file&quot;)</span> CommonsMultipartFile file, HttpServletRequest request)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取文件名 : file.getOriginalFilename();</span></span><br><span class="line">        String uploadFileName = file.getOriginalFilename();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果文件名为空，直接回到首页！</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;&quot;</span>.equals(uploadFileName)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;redirect:/index.jsp&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;上传文件名 : &quot;</span> + uploadFileName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//上传路径保存设置</span></span><br><span class="line">        String path = request.getServletContext().getRealPath(<span class="string">&quot;/upload&quot;</span>);</span><br><span class="line">        <span class="comment">//如果路径不存在，创建一个</span></span><br><span class="line">        File realPath = <span class="keyword">new</span> File(path);</span><br><span class="line">        <span class="keyword">if</span> (!realPath.exists()) &#123;</span><br><span class="line">            realPath.mkdir();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;上传文件保存地址：&quot;</span> + realPath);</span><br><span class="line"></span><br><span class="line">        InputStream is = file.getInputStream(); <span class="comment">//文件输入流</span></span><br><span class="line">        OutputStream os = <span class="keyword">new</span> FileOutputStream(<span class="keyword">new</span> File(realPath, uploadFileName)); <span class="comment">//文件输出流</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//读取写出</span></span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">while</span> ((len = is.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">            os.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">            os.flush();</span><br><span class="line">        &#125;</span><br><span class="line">        os.close();</span><br><span class="line">        is.close();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/index.jsp&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 采用file.Transto 来保存上传的文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/upload2&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">fileUpload2</span><span class="params">(<span class="meta">@RequestParam(&quot;file&quot;)</span> CommonsMultipartFile file, HttpServletRequest request)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//上传路径保存设置</span></span><br><span class="line">        String path = request.getServletContext().getRealPath(<span class="string">&quot;/upload&quot;</span>);</span><br><span class="line">        File realPath = <span class="keyword">new</span> File(path);</span><br><span class="line">        <span class="keyword">if</span> (!realPath.exists()) &#123;</span><br><span class="line">            realPath.mkdir();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//上传文件地址</span></span><br><span class="line">        System.out.println(<span class="string">&quot;上传文件保存地址：&quot;</span> + realPath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通过CommonsMultipartFile的方法直接写文件（注意这个时候）</span></span><br><span class="line">        file.transferTo(<span class="keyword">new</span> File(realPath + <span class="string">&quot;/&quot;</span> + file.getOriginalFilename()));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/index.jsp&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> SpringMVC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> SpringMVC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis学习笔记</title>
      <link href="posts/130a1608a63d/"/>
      <url>posts/130a1608a63d/</url>
      
        <content type="html"><![CDATA[<h1 id="MyBatis学习笔记"><a href="#MyBatis学习笔记" class="headerlink" title="MyBatis学习笔记"></a>MyBatis学习笔记</h1><blockquote><p>一款优秀的持久层(DAO)框架</p></blockquote><h2 id="1-第一个MyBatis程序"><a href="#1-第一个MyBatis程序" class="headerlink" title="1.第一个MyBatis程序"></a>1.第一个MyBatis程序</h2><p>思路:</p><ul><li>搭建环境</li><li>导入Mybatis</li><li>编写代码</li><li>测试</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210608215210674.png" alt="image-20210608215210674"></p><h3 id="1-1-sqlSession工具类"><a href="#1-1-sqlSession工具类" class="headerlink" title="1.1 sqlSession工具类"></a>1.1 sqlSession工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/6/8 20:48</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//获取sqlSessionFactory对象</span></span><br><span class="line">            String resource = <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">            InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">            sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回值sqlSession拥有所有面向数据库执行sql的所有方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSqlSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-2-实体类"><a href="#1-2-实体类" class="headerlink" title="1.2 实体类"></a>1.2 实体类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.pojo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/6/8 20:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(<span class="keyword">int</span> id, String name, String pwd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPwd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPwd</span><span class="params">(String pwd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, pwd=&#x27;&quot;</span> + pwd + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-3-DAO层接口"><a href="#1-3-DAO层接口" class="headerlink" title="1.3 DAO层接口"></a>1.3 DAO层接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codelorin.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">getUserList</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-4-mybatisMapper配置文件-接口实现类"><a href="#1-4-mybatisMapper配置文件-接口实现类" class="headerlink" title="1.4 mybatisMapper配置文件(接口实现类)"></a>1.4 mybatisMapper配置文件(接口实现类)</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--绑定一个对应的DAO/Mapper接口--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.codelorin.dao.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  查询语句,id对应接口中的方法名称  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.codelorin.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        select * from test.user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-5-mybatis数据库配置"><a href="#1-5-mybatis数据库配置" class="headerlink" title="1.5 mybatis数据库配置"></a>1.5 mybatis数据库配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  数据库核心配置文件  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/test?useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=utf8<span class="symbol">&amp;amp;</span>useSSL=true&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 每一个mapper.xml都需要在mybatis核心配置文件中配置   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/codelorin/dao/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-6-junit测试"><a href="#1-6-junit测试" class="headerlink" title="1.6 junit测试"></a>1.6 junit测试</h3><ul><li><p>注意</p><blockquote><p>org.apache.ibatis.binding.BindingException: Type interface com.codelorin.dao.UserDao is not known to the MapperRegistry.</p><p>资源导出</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codelorin.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.codelorin.utils.MybatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/6/8 21:06</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.获得SqlSession对象</span></span><br><span class="line">        SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">        <span class="comment">//2. 方式一:getMapper</span></span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        List&lt;User&gt; userList = userMapper.getUserList();</span><br><span class="line">        <span class="comment">//2. 方式二 不推荐使用:</span></span><br><span class="line">        List&lt;User&gt; userList1 = sqlSession.selectList(<span class="string">&quot;com.codelorin.dao.UserMapper.getUserList&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (User user : userList1) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sqlSession.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-CRUD实现"><a href="#2-CRUD实现" class="headerlink" title="2.CRUD实现"></a>2.CRUD实现</h2><h3 id="1-namespace"><a href="#1-namespace" class="headerlink" title="1.namespace"></a>1.namespace</h3><p>包名要和dao/mapper接口包名一致</p><h3 id="2-select"><a href="#2-select" class="headerlink" title="2.select"></a>2.select</h3><p> 选择,查询</p><ul><li><p>id 就是对应namespace中的方法名</p></li><li><p>resultType: sql语句执行的返回值</p></li><li><p>parameteType: 参数类型</p></li></ul><h4 id="2-1-mapper"><a href="#2-1-mapper" class="headerlink" title="2.1 mapper"></a>2.1 mapper</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--绑定一个对应的DAO/Mapper接口--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.codelorin.dao.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  查询语句,id对应接口中的方法名称  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.codelorin.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        select *</span><br><span class="line">        from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.codelorin.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        select *</span><br><span class="line">        from user</span><br><span class="line">        where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.codelorin.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        insert into user (id, name, pwd)</span><br><span class="line">        values (#&#123;id&#125;, #&#123;name&#125;, #&#123;pwd&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.codelorin.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        update user</span><br><span class="line">        set name = #&#123;name&#125;,</span><br><span class="line">            pwd=#&#123;pwd&#125;</span><br><span class="line">        where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;delUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">        delete</span><br><span class="line">        from user</span><br><span class="line">        where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-2-接口"><a href="#2-2-接口" class="headerlink" title="2.2 接口"></a>2.2 接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codelorin.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">//获取全部用户</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">getUserList</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据id查询用户</span></span><br><span class="line">    <span class="function">User <span class="title">getUserById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//insert 一个用户</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改用户</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(User user)</span></span>;</span><br><span class="line">    <span class="comment">//删除用户</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">delUser</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-3-测试"><a href="#2-3-测试" class="headerlink" title="2.3 测试"></a>2.3 测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codelorin.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.codelorin.utils.MybatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/6/8 21:06</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.获得SqlSession对象</span></span><br><span class="line">        SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">        <span class="comment">//2. 方式一:getMapper</span></span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        List&lt;User&gt; userList = userMapper.getUserList();</span><br><span class="line">        <span class="comment">//2. 方式二 不推荐使用:</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sqlSession.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        User use = mapper.getUserById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(use);</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="keyword">int</span> res = mapper.addUser(<span class="keyword">new</span> User(<span class="number">5</span>, <span class="string">&quot;isxxl11&quot;</span>, <span class="string">&quot;codexxl&quot;</span>));</span><br><span class="line">        System.out.println(res);</span><br><span class="line">        <span class="comment">//提交事务</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        mapper.updateUser(<span class="keyword">new</span> User(<span class="number">5</span>, <span class="string">&quot;hahah&quot;</span>, <span class="string">&quot;xxl&quot;</span>));</span><br><span class="line">        <span class="comment">//提交事务</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        mapper.delUser(<span class="number">5</span>);</span><br><span class="line">        <span class="comment">//提交事务</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-万能map"><a href="#3-万能map" class="headerlink" title="3.万能map"></a>3.万能map</h2><blockquote><p>当实体类或字段过多可以使用 id为主键自动增加使用(个人理解)</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addUser2</span><span class="params">(Map&lt;String, Object&gt; map)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">    UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">    HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;userId&quot;</span>, <span class="number">10</span>);</span><br><span class="line">    map.put(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;xxl&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;hahah&quot;</span>);</span><br><span class="line">    mapper.addUser2(map);</span><br><span class="line">    <span class="comment">//提交事务</span></span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser2&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">    insert into user (id, name, pwd)</span><br><span class="line">    values (#&#123;userId&#125;, #&#123;username&#125;, #&#123;password&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-模糊查询"><a href="#4-模糊查询" class="headerlink" title="4.模糊查询"></a>4.模糊查询</h2><blockquote><p>在参数中拼接%</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;%xx%&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>sql语句中拼接</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserLike&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.codelorin.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    select *</span><br><span class="line">    from user</span><br><span class="line">    where name like &quot;%&quot;#&#123;value&#125;&quot;%&quot;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    </p><h2 id="5-配置解析"><a href="#5-配置解析" class="headerlink" title="5.配置解析"></a>5.配置解析</h2><h3 id="1-核心配置文件"><a href="#1-核心配置文件" class="headerlink" title="1.核心配置文件"></a>1.核心配置文件</h3><blockquote><p>mybatis-config.xml</p></blockquote><h4 id="5-1-1-environment"><a href="#5-1-1-environment" class="headerlink" title="5.1.1 environment"></a>5.1.1 environment</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/test?useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=utf8<span class="symbol">&amp;amp;</span>useSSL=true&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br></pre></td></tr></table></figure><p>id:名称</p><p>type:事务管理器(jdbc | managed)</p><p>pooled:数据源的配置(UNPOOLED|POOLED|JNDI)</p><h4 id="5-1-2-properties-属性"><a href="#5-1-2-properties-属性" class="headerlink" title="5.1.2 properties(属性)"></a>5.1.2 properties(属性)</h4><blockquote><p>可以通过它读取一些配置</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;db.properties&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-1-3-类型别名"><a href="#5-1-3-类型别名" class="headerlink" title="5.1.3 类型别名"></a>5.1.3 类型别名</h4><blockquote><p>为java类型设置一个短的名字</p><p>存在的意义仅在于用来减少类完全限定名的冗余</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 别名   --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.codelorin.pojo.User&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;User&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.codelorin.pojo&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>typeAlias:一一对应</p><p>package:制定一个包下,它会自动搜索,但是使用的时候使用名字的小写</p><p>注解:@Alias()</p><h4 id="5-1-4-设置-settings"><a href="#5-1-4-设置-settings" class="headerlink" title="5.1.4 设置(settings)"></a>5.1.4 设置(settings)</h4><ul><li><p>日志</p></li><li><p>其他配置</p><ul><li><p>typeHandlers(类型处理器)</p></li><li><p>objectFactory(对象工厂)</p></li><li><p>plugins(插件)</p><ul><li><p>mybatis-core</p></li><li><p>mybatis-plus</p></li></ul></li></ul></li></ul><h4 id="5-1-5-映射器"><a href="#5-1-5-映射器" class="headerlink" title="5.1.5 映射器"></a>5.1.5 映射器</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">```xml</span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/codelorin/dao/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">```xml</span><br><span class="line"><span class="comment">&lt;!-- 使用映射器接口实现类的完全限定类名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.builder.AuthorMapper&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.builder.BlogMapper&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.builder.PostMapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">```xml</span><br><span class="line"><span class="comment">&lt;!-- 将包内的映射器接口实现全部注册为映射器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;org.mybatis.builder&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line">```</span><br></pre></td></tr></table></figure><h2 id="6-生命周期和作用域"><a href="#6-生命周期和作用域" class="headerlink" title="6.生命周期和作用域"></a>6.生命周期和作用域</h2><blockquote><p>生命周期和作用域十分重要,错误使用会对严重的并发问题</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210609154519888.png" alt="image-20210609154519888"></p><h3 id="6-1-sqlSessinFactoryBuilder"><a href="#6-1-sqlSessinFactoryBuilder" class="headerlink" title="6.1 sqlSessinFactoryBuilder"></a>6.1 sqlSessinFactoryBuilder</h3><blockquote><p>一点创建了sqlSessionFactory,就不再需要它了</p><p>局部变量</p></blockquote><h3 id="6-2-sqlSessionFactory"><a href="#6-2-sqlSessionFactory" class="headerlink" title="6.2 sqlSessionFactory"></a>6.2 sqlSessionFactory</h3><blockquote><p>数据库连接池</p><p>一旦创建就在程序运行期间一直存在,没有任何理由丢弃它或者重新创建另外一个实例</p></blockquote><h3 id="6-3-sqlSession"><a href="#6-3-sqlSession" class="headerlink" title="6.3 sqlSession"></a>6.3 sqlSession</h3><blockquote><p>连接到连接池的一个请求</p><p>需要开启和关闭,用完之后立刻关闭</p></blockquote><h2 id="7-解决属性名和字段名不一致的问题"><a href="#7-解决属性名和字段名不一致的问题" class="headerlink" title="7.解决属性名和字段名不一致的问题"></a>7.解决属性名和字段名不一致的问题</h2><ul><li><p>数据库sql使用as</p></li><li><p>resultMap(结果集映射)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;UserMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">    # column数据库字段,property实体类字段  </span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="8-日志"><a href="#8-日志" class="headerlink" title="8.日志"></a>8.日志</h2><h3 id="8-1日志工厂"><a href="#8-1日志工厂" class="headerlink" title="8.1日志工厂"></a>8.1日志工厂</h3><ul><li>STDOUT_LOGGING</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;LOG4J&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>LOG4J</li></ul><p>导入包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将等级为DEBUG的日志信息输出到console和file这两个目的地，console和file的定义在下面的代码</span></span><br><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">DEBUG,console,file</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#控制台输出的相关设置</span></span><br><span class="line"><span class="meta">log4j.appender.console</span> = <span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.console.Target</span> = <span class="string">System.out</span></span><br><span class="line"><span class="meta">log4j.appender.console.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout.ConversionPattern</span>=<span class="string">[%c]-%m%n</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#文件输出的相关设置</span></span><br><span class="line"><span class="meta">log4j.appender.file</span> = <span class="string">org.apache.log4j.RollingFileAppender</span></span><br><span class="line"><span class="meta">log4j.appender.file.File</span>=<span class="string">./log/sys.log</span></span><br><span class="line"><span class="meta">log4j.appender.file.MaxFileSize</span>=<span class="string">10mb</span></span><br><span class="line"><span class="meta">log4j.appender.file.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout.ConversionPattern</span>=<span class="string">[%p][%d&#123;yyyy-MM-dd hh:mm:ss&#125;][%c]%m%n</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#日志输出级别</span></span><br><span class="line"><span class="meta">log4j.logger.org.mybatis</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.Statement</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.ResultSet</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.PreparedStatement</span>=<span class="string">DEBUG</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codelorin.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.codelorin.utils.MybatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/6/9 15:00</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> Logger logger = Logger.getLogger(UserMapperTest.class);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">log4jTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">&quot;info:进入了log4jTest方法&quot;</span>);</span><br><span class="line">        logger.debug(<span class="string">&quot;debug:进入了log4jTest方法&quot;</span>);</span><br><span class="line">        logger.error(<span class="string">&quot;error:进入了log4jTest方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="9-分页limit"><a href="#9-分页limit" class="headerlink" title="9.分页limit"></a>9.分页limit</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span> limit i,n</span><br><span class="line">i : 为查询结果的索引值（默认从<span class="number">0</span>开始）；</span><br><span class="line">n : 为查询结果返回的数量</span><br></pre></td></tr></table></figure><ul><li>UserMapper</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getUserByLimit</span><span class="params">(Map&lt;String, Integer&gt; map)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserByLimit&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    select * from user limit #&#123;startIndex&#125;,#&#123;pageSize&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">limitTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">    UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">    HashMap&lt;String, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;startIndex&quot;</span>, <span class="number">0</span>);</span><br><span class="line">    map.put(<span class="string">&quot;pageSize&quot;</span>, <span class="number">2</span>);</span><br><span class="line">    List&lt;User&gt; userList = mapper.getUserByLimit(map);</span><br><span class="line">    <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="9-1-RowBounds分页"><a href="#9-1-RowBounds分页" class="headerlink" title="9.1 RowBounds分页"></a>9.1 RowBounds分页</h3><blockquote><p>java层面实现的分页,了解就行</p></blockquote><h3 id="9-2-分页插件"><a href="#9-2-分页插件" class="headerlink" title="9.2 分页插件"></a>9.2 分页插件</h3><blockquote><p>PageHelper</p></blockquote><h2 id="10-使用注解开发"><a href="#10-使用注解开发" class="headerlink" title="10.使用注解开发"></a>10.使用注解开发</h2><blockquote><p>使用反射获取注解简化开发</p></blockquote><ul><li><p>openSession(true)即可自动提交事务</p></li><li><p>注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取全部用户</span></span><br><span class="line"><span class="meta">@Select(&quot;select * from user&quot;)</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getUserList</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Select(&quot;select * from user where id = #&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="function">User <span class="title">getUserById</span><span class="params">(<span class="meta">@Parm(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Insert(&quot;insert into user(id,name,pwd) values(#&#123;id&#125;,#&#123;name&#125;,#&#123;pwd&#125;)&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span></span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">@<span class="title">Update</span><span class="params">(<span class="string">&quot;update user set name = #&#123;name&#125;,pwd=#&#123;pwd&#125; where id = #&#123;id&#125;&quot;</span>)</span>    </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(User user)</span></span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">@<span class="title">Delete</span><span class="params">(<span class="string">&quot;delete from user where id = #&#123;id&#125;&quot;</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteUser</span><span class="params">(<span class="keyword">int</span> id)</span></span></span><br></pre></td></tr></table></figure></li><li><p>配置文件</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;mappers&gt;</span><br><span class="line">    &lt;mapper <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;com.codelorin.dao.UserMapper&quot;</span>/&gt;</span><br><span class="line">&lt;/mappers&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="11-mybatis执行流程剖析"><a href="#11-mybatis执行流程剖析" class="headerlink" title="11.mybatis执行流程剖析"></a>11.mybatis执行流程剖析</h2><ul><li>resources获取全局配置文件</li><li>实例化SQLSessionFactoryBuilder构造器</li><li>解析配置文件流XMLConfigBuilder</li><li>Configuration所有的配置信息</li><li>SqlSessionFactory实例化</li><li>transactional事务管理</li><li>创建executor执行器</li><li>创建sqlSession</li><li>实现curd,错误就回滚</li><li>提交事务</li><li>关闭</li></ul><h2 id="12-Lombok"><a href="#12-Lombok" class="headerlink" title="12.Lombok"></a>12.Lombok</h2><ul><li>安装Lombok插件</li><li>maven导入jar包</li><li>实体类上加注解</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Getter</span> and <span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@FieldNameConstants</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span>, <span class="meta">@RequiredArgsConstructor</span> and <span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@Log</span>, <span class="meta">@Log4j</span>, <span class="meta">@Log4j2</span>, <span class="meta">@Slf4j</span>, <span class="meta">@XSlf4j</span>, <span class="meta">@CommonsLog</span>, <span class="meta">@JBossLog</span>, <span class="meta">@Flogger</span>, <span class="meta">@CustomLog</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="meta">@SuperBuilder</span></span><br><span class="line"><span class="meta">@Singular</span></span><br><span class="line"><span class="meta">@Delegate</span></span><br><span class="line"><span class="meta">@Value</span></span><br><span class="line"><span class="meta">@Accessors</span></span><br><span class="line"><span class="meta">@Wither</span></span><br><span class="line"><span class="meta">@With</span></span><br><span class="line"><span class="meta">@SneakyThrows</span></span><br><span class="line"><span class="meta">@val</span></span><br><span class="line"><span class="meta">@UtilityClass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span> 无参 get set tostring hashcode equals</span><br><span class="line"><span class="meta">@AllArgsConstructor</span> and <span class="meta">@NoArgsConstructor</span> 有参无参</span><br><span class="line">    </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="13-多对一的处理"><a href="#13-多对一的处理" class="headerlink" title="13.多对一的处理"></a>13.多对一的处理</h2><ul><li>按照查询嵌套查询</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--绑定一个对应的DAO/Mapper接口--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.codelorin.dao.StudentMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudent&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;StudentTeacher&quot;</span>&gt;</span></span><br><span class="line">        select *</span><br><span class="line">        from student</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;StudentTeacher&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--   复杂的属性,我们需要单独处理</span></span><br><span class="line"><span class="comment">                对象使用association</span></span><br><span class="line"><span class="comment">                集合使用collection</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Teacher&quot;</span> <span class="attr">select</span>=<span class="string">&quot;getTeacher&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">        select *</span><br><span class="line">        from teacher</span><br><span class="line">        where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>按照结果嵌套查询</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudent2&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;StudentTeacher2&quot;</span>&gt;</span></span><br><span class="line">    select s.id sid, s.name sname, t.name tname</span><br><span class="line">    from student s,</span><br><span class="line">         teacher t</span><br><span class="line">    where s.tid = t.id</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;StudentTeacher2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sid&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sname&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tname&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="14-一对多的处理"><a href="#14-一对多的处理" class="headerlink" title="14.一对多的处理"></a>14.一对多的处理</h2><ul><li>按查询嵌套</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher2&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;TeacherStudent2&quot;</span>&gt;</span></span><br><span class="line">    select *</span><br><span class="line">    from teacher</span><br><span class="line">    where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;TeacherStudent2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--javaType=&quot;ArrayList&quot; 可以没有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;students&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>  <span class="attr">ofType</span>=<span class="string">&quot;Student&quot;</span> <span class="attr">select</span>=<span class="string">&quot;getStudentByTeacherId&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentByTeacherId&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">    select *</span><br><span class="line">    from student</span><br><span class="line">    where tid = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>按结果</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--绑定一个对应的DAO/Mapper接口--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.codelorin.dao.TeacherMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;TeacherStudent&quot;</span>&gt;</span></span><br><span class="line">        select s.id sid, s.name sname, t.name tname, t.id tid</span><br><span class="line">        from student s,</span><br><span class="line">             teacher t</span><br><span class="line">        where s.tid = t.id</span><br><span class="line">          and t.id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;TeacherStudent&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tname&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;students&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sid&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sname&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p> 总结</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210913001824137.png" alt="image-20210913001824137"></p><h2 id="15-动态sql"><a href="#15-动态sql" class="headerlink" title="15.动态sql"></a>15.动态sql</h2><blockquote><p>根据不同的条件生成不同的sql语句</p></blockquote><ul><li>if</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBlogIf&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;blog&quot;</span>&gt;</span></span><br><span class="line">    select * from blog</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title != null&quot;</span>&gt;</span></span><br><span class="line">            title = #&#123;title&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;author != null&quot;</span>&gt;</span></span><br><span class="line">            and author = #&#123;author&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">    BlogMapper mapper = sqlSession.getMapper(BlogMapper.class);</span><br><span class="line">    HashMap hashMap = <span class="keyword">new</span> HashMap();</span><br><span class="line">    hashMap.put(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;数据库&quot;</span>);</span><br><span class="line">    List&lt;Blog&gt; blogs = mapper.queryBlogIf(hashMap);</span><br><span class="line">    <span class="keyword">for</span> (Blog blog : blogs) &#123;</span><br><span class="line">        System.out.println(blog);</span><br><span class="line">    &#125;</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>choose (when, otherwise)</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBlogChoose&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;blog&quot;</span>&gt;</span></span><br><span class="line">    select * from blog</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;title != null&quot;</span>&gt;</span></span><br><span class="line">                title = #&#123;title&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;author != null&quot;</span>&gt;</span></span><br><span class="line">                and author = #&#123;author&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">                and views = #&#123;views&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>trim (where, set)</li></ul><blockquote><p>where 元素只会在子元素返回任何内容的情况下才插入 “WHERE” 子句。而且，若子句的开头为 “AND” 或 “OR”，<em>where</em> 元素也会将它们去除。</p></blockquote><blockquote><p>set 元素会动态地在行首插入 SET 关键字，并会删掉额外的逗号（这些逗号是在使用条件语句给列赋值时引入的）</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateBlog&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">    update blog</span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title != null&quot;</span>&gt;</span></span><br><span class="line">            title = #&#123;title&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;author != null&quot;</span>&gt;</span></span><br><span class="line">            author = #&#123;author&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;WHERE&quot;</span> <span class="attr">prefixOverrides</span>=<span class="string">&quot;AND |OR &quot;</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;SET&quot;</span> <span class="attr">suffixOverrides</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>sql片段,提高复用性</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;if-tile-author&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title != null&quot;</span>&gt;</span></span><br><span class="line">            title = #&#123;title&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;author != null&quot;</span>&gt;</span></span><br><span class="line">            and author = #&#123;author&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;if-tile-author&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>foreach</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBlogForEach&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;blog&quot;</span>&gt;</span></span><br><span class="line">    select * from blog</span><br><span class="line">    where id in</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;ids&quot;</span> <span class="attr">item</span>=<span class="string">&quot;id&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">        #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">    BlogMapper mapper = sqlSession.getMapper(BlogMapper.class);</span><br><span class="line">    HashMap hashMap = <span class="keyword">new</span> HashMap();</span><br><span class="line">    ArrayList&lt;Integer&gt; ids = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    ids.add(<span class="number">1</span>);</span><br><span class="line">    ids.add(<span class="number">2</span>);</span><br><span class="line">    ids.add(<span class="number">4</span>);</span><br><span class="line">    hashMap.put(<span class="string">&quot;ids&quot;</span>,ids);</span><br><span class="line">    List&lt;Blog&gt; blogs = mapper.queryBlogForEach(hashMap);</span><br><span class="line">    <span class="keyword">for</span> (Blog blog : blogs) &#123;</span><br><span class="line">        System.out.println(blog);</span><br><span class="line">    &#125;</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="16-缓存"><a href="#16-缓存" class="headerlink" title="16.缓存"></a>16.缓存</h2><blockquote><p>读写分离,主从复制</p></blockquote><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img@master/img/xxx.4kv15ys4jm60.png" alt="xxx"></p><ul><li>映射语句文件中的所有 select 语句的结果将会被缓存。</li><li>映射语句文件中的所有 insert、update 和 delete 语句会刷新缓存。</li><li>缓存会使用最近最少使用算法（LRU, Least Recently Used）算法来清除不需要的缓存。</li><li>缓存不会定时进行刷新（也就是说，没有刷新间隔）。</li><li>缓存会保存列表或对象（无论查询方法返回哪种）的 1024 个引用。</li><li>缓存会被视为读/写缓存，这意味着获取到的对象并不是共享的，可以安全地被调用者修改，而不干扰其他调用者或线程所做的潜在修改。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#清理缓存</span><br><span class="line">sqlSession.clearCache();</span><br></pre></td></tr></table></figure><ul><li>一级缓存</li></ul><p>sqlSession级别的缓存,只在一次会话中使用.</p><ul><li>二级缓存</li></ul><p>1.开启全局缓存</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;cacheEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>2.</p><p>默认情况下，只启用了本地的会话缓存，它仅仅对一个会话中的数据进行缓存。 要启用全局的二级缓存，只需要在你的 SQL 映射文件中添加一行：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>这些属性可以通过 cache 元素的属性来修改。比如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;cache</span><br><span class="line">  eviction=&quot;FIFO&quot;</span><br><span class="line">  flushInterval=&quot;60000&quot;</span><br><span class="line">  size=&quot;512&quot;</span><br><span class="line">  readOnly=&quot;true&quot;/&gt;</span><br></pre></td></tr></table></figure><p>这个更高级的配置创建了一个 FIFO 缓存，每隔 60 秒刷新，最多可以存储结果对象或列表的 512 个引用，而且返回的对象被认为是只读的，因此对它们进行修改可能会在不同线程中的调用者产生冲突。</p><p>可用的清除策略有：</p><ul><li><code>LRU</code> – 最近最少使用：移除最长时间不被使用的对象。</li><li><code>FIFO</code> – 先进先出：按对象进入缓存的顺序来移除它们。</li><li><code>SOFT</code> – 软引用：基于垃圾回收器状态和软引用规则移除对象。</li><li><code>WEAK</code> – 弱引用：更积极地基于垃圾收集器状态和弱引用规则移除对象。</li></ul><p>默认的清除策略是 LRU。</p><p>flushInterval（刷新间隔）属性可以被设置为任意的正整数，设置的值应该是一个以毫秒为单位的合理时间量。 默认情况是不设置，也就是没有刷新间隔，缓存仅仅会在调用语句时刷新。</p><p>size（引用数目）属性可以被设置为任意正整数，要注意欲缓存对象的大小和运行环境中可用的内存资源。默认值是 1024。</p><p>readOnly（只读）属性可以被设置为 true 或 false。只读的缓存会给所有调用者返回缓存对象的相同实例。 因此这些对象不能被修改。这就提供了可观的性能提升。而可读写的缓存会（通过序列化）返回缓存对象的拷贝。 速度上会慢一些，但是更安全，因此默认值是 false。</p><p>3.测试</p><p>我们需要将实体类序列化</p><blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Blog</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span></span><br></pre></td></tr></table></figure></blockquote><p>小结</p><ul><li><p>只要开启了二级缓存,在同一个mapper下有效</p></li><li><p>所有的数据都放在一级缓存中</p></li><li><p>当会话提交或者关闭时,才会提交到二级缓存中</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210913022435413.png" alt="image-20210913022435413"></p></li></ul><ul><li>自定义缓存</li></ul><p>ehcache</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis.caches/mybatis-ehcache --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.caches<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache</span> <span class="attr">type</span>=<span class="string">&quot;org.mybatis.caches.ehcache.EhcacheCache&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring学习笔记</title>
      <link href="posts/087724214f10/"/>
      <url>posts/087724214f10/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring学习笔记"><a href="#Spring学习笔记" class="headerlink" title="Spring学习笔记"></a>Spring学习笔记</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><h3 id="1-1-介绍"><a href="#1-1-介绍" class="headerlink" title="1.1.介绍"></a>1.1.介绍</h3><ul><li>Spring春天 给软件行业带来了春天!</li><li>2002,首次推出了 spring框架的雏形: interface21框架!</li><li>Spring框架即以 interface21框架为基础经过重新设计,并不断丰富其内涵于2004年3月24日发布了1.0正式版</li><li>Rod Johnson, Spring Framework创始人,著名作者。他是悉尼大学的博士,然而他的专业不是计算机,而是音乐学。</li><li>spring理念 使现有的技术更加容易使用,本身是一个大杂烩,整合了现有的技术框架</li></ul><ul><li>SSH : Struct2+Spring+Hibernate!</li><li>SSM: SpringMvc+Spirng+Mybatis!</li></ul><h3 id="1-2-优点"><a href="#1-2-优点" class="headerlink" title="1.2.优点"></a>1.2.优点</h3><ul><li>spring是一个开源的免费的框架(容器)</li><li>spring是一个轻量级、非入侵式的框架!</li><li><strong>控制反转(IOC),面向切面编程(AOP)</strong></li><li>支持事务的处理,对框架整合的支持</li></ul><p>总结: <strong>Spring就是一个轻量级的控制反转(IOC)和面向切面编程的框架</strong></p><h3 id="1-3-组成"><a href="#1-3-组成" class="headerlink" title="1.3.组成"></a>1.3.组成</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210916225714168.png" alt="image-20210916225714168"></p><h3 id="1-4-扩展"><a href="#1-4-扩展" class="headerlink" title="1.4.扩展"></a>1.4.扩展</h3><blockquote><p>Spring,现代化的java开发!!</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210916225814885.png" alt="image-20210916225814885"></p><ul><li>Spring Boot<ul><li>一个快速开发的脚手架</li><li>基于SpringBoot可以快速开发单个微服务</li><li>约定大于配置</li></ul></li></ul><ul><li>Spring Cloud<ul><li>基于Spring Boot实现的</li></ul></li></ul><blockquote><p>学习Spring Boot的基础是掌握Spring和SpringMVC！！承上启下！！！</p></blockquote><p>弊端：发展太久了，违背了原来的理念！配置十分繁琐，人称：“配置地狱”。</p><h2 id="二-IOC理论推导"><a href="#二-IOC理论推导" class="headerlink" title="二.IOC理论推导"></a>二.IOC理论推导</h2><ul><li>UserDao接口</li><li>UserDaoImpl实现类</li><li>UserService业务接口</li><li>UserService业务实现类</li></ul><blockquote><p>IOC的基本理论就是控制反转,将对象的创建转移给了第三方,可以大大降低系统的耦合性</p></blockquote><p>采用XML方式配置Bean的时候,Bean的定义信息是和实现分离的,而采用注解的方式可以把两者合为一体,<br>Bean的定义信息直接以注解的形式定义在实现类中,从而达到了零配置的目的。</p><p>控制反转是一种通过描述(XML或注解)并通过第三方去生产或获取特定对象的方式。在 Spring中实现控制反转<br>的是IOC容器,其实现方法是依赖注入。</p><h2 id="三-HelloSpring"><a href="#三-HelloSpring" class="headerlink" title="三.HelloSpring"></a>三.HelloSpring</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    Bean在Spring中为创建的对象</span></span><br><span class="line"><span class="comment">    bean 对象 new Hello() id就是对象变量名字</span></span><br><span class="line"><span class="comment">    property 给对象的属性赋值</span></span><br><span class="line"><span class="comment">value 值</span></span><br><span class="line"><span class="comment">ref spring容器中创建好的对象</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.codelorin.pojo.Hello&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;str&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Spring&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">      <span class="comment">//获取Spring的容器</span></span><br><span class="line">ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line">      Hello hello = (Hello) context.getBean(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">      System.out.println(hello.toString());</span><br></pre></td></tr></table></figure><blockquote><p>IOC=&gt; 对象由Spring来创建,管理和装配</p></blockquote><h2 id="四-IOC创建对象的方式"><a href="#四-IOC创建对象的方式" class="headerlink" title="四.IOC创建对象的方式"></a>四.IOC创建对象的方式</h2><p>无参构造</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.codelorin.pojo.Hello&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;str&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Spring&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>有参构造</p><ul><li>下标</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.codelorin.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;codelorin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>类型(不建议)</li></ul><ul><li>通过参数名</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.codelorin.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;codelorin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="五-Spring配置"><a href="#五-Spring配置" class="headerlink" title="五.Spring配置"></a>五.Spring配置</h2><ul><li>alias</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">alias</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;user2&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>bean</p><ul><li>id 对象名</li><li>class 包名</li><li>name 别名,可以取多个</li><li></li></ul></li><li><p>import</p></li></ul><blockquote><p>可以将多个配置文件合并为一个</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;beans.xml&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h2 id="六-依赖注入"><a href="#六-依赖注入" class="headerlink" title="六.依赖注入"></a>六.依赖注入</h2><ul><li>构造器注入</li><li><strong>set方式注入</strong></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;address&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.codeloirn.pojo.Address&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.codeloirn.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--    普通值注入        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;codelorin&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--    bean注入        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;address&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--    数组注入        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;books&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>红楼梦<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>三国演义<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--    List注入        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>run<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>ball<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Map注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;card&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;lorin&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- set注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;games&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>LOL<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>SC2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- null注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;wife&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">null</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- properties注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;id&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;name&quot;</span>&gt;</span>lorin<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>拓展方式注入</p><ul><li>```xml<?xml version="1.0" encoding="UTF-8"?>&lt;beans xmlns=”<a href="http://www.springframework.org/schema/beans&quot;">http://www.springframework.org/schema/beans&quot;</a><pre><code>   xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;   xmlns:p=&quot;http://www.springframework.org/schema/p&quot;   xmlns:c=&quot;http://www.springframework.org/schema/c&quot;   xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;&lt;bean id=&quot;user&quot; class=&quot;com.codelorin.pojo.User&quot; p:name=&quot;codelorin&quot; p:age=&quot;18&quot;/&gt;</code></pre></beans><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* p注入</span><br><span class="line"></span><br><span class="line">  &#96;&#96;&#96;xml</span><br><span class="line">  &lt;bean id&#x3D;&quot;user&quot; class&#x3D;&quot;com.codelorin.pojo.User&quot; p:name&#x3D;&quot;codelorin&quot; p:age&#x3D;&quot;18&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>c注入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.codelorin.pojo.User&quot;</span> <span class="attr">c:age</span>=<span class="string">&quot;19&quot;</span> <span class="attr">c:name</span>=<span class="string">&quot;lorin&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>注意点:p命名和c命名导入相应的配置</p></blockquote></li></ul><h2 id="七-bean的作用域"><a href="#七-bean的作用域" class="headerlink" title="七.bean的作用域"></a>七.bean的作用域</h2><ul><li>单例模式(Spring的默认机制)</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.codelorin.pojo.User&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;codelorin&quot;</span> <span class="attr">p:age</span>=<span class="string">&quot;18&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;singleton&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><ul><li>原型模式:每次从容器中get,都会产生一个新的对象!</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.codelorin.pojo.User&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;codelorin&quot;</span> <span class="attr">p:age</span>=<span class="string">&quot;18&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;prototype&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><ul><li>request,session,application,只能在web开发中使用</li></ul><h2 id="八-Bean的自动装配"><a href="#八-Bean的自动装配" class="headerlink" title="八.Bean的自动装配"></a>八.Bean的自动装配</h2><ul><li>自动装配是Spring满足Bean依赖一种方式;</li><li>Spring 会自动在上下文中寻找,并自动的给bean装配属性</li></ul><pre><code>在Spring 中有三种装配的方式</code></pre><p>​    1.xml中显示的配置</p><p>​    2.在java中显示配置</p><p>​    <strong>3.隐式的自动装配</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- byName 在容器上下文中和自己对象set后面的值对应的beanid id唯一</span></span><br><span class="line"><span class="comment">     byType 在容器上下文中和自己对象属性类型相同的bean!    class唯一</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><ul><li>注解开发</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> Cat cat;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> Dog dog;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br></pre></td></tr></table></figure><ul><li><p>Nullable标记了这个字段可以为null</p></li><li><p>required = false 说明这个对象可以为null,否则不允许</p></li><li><p>@Qualifier(value = “dog”) 制定一个唯一的bean对象</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="meta">@Qualifier(value = &quot;dog&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Cat cat;</span><br></pre></td></tr></table></figure><ul><li>@Resource 自动装配名字类型</li><li>@Component  组件,放在类,被spring管理了即是bean</li></ul><p>总结:</p><blockquote><p>@Resource和@Autowired的区别</p></blockquote><ul><li>都是自动装配,可以放在属性上面</li><li>@Autowired通过ByType实现,这个对象必须存在</li><li>@Resource首先通过ByName,然后ByType</li></ul><h2 id="九-使用注解开发"><a href="#九-使用注解开发" class="headerlink" title="九.使用注解开发"></a>九.使用注解开发</h2><ul><li>导入aop</li><li>属性注入</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value(&quot;codelorin&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>mvc</p><ul><li>pojo @Component</li><li>dao @Repository</li><li>service @Service</li><li>controller @Controller</li></ul><p>都是注册到Spring的容器中</p></li><li><p>@Scope作用域</p></li></ul><p>最佳实践:</p><ul><li>xml管理bean</li><li>注解完成属性的注入</li></ul><p>使用java的方式配置Spring</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> User</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/17 16:36</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value(&quot;codelorin&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codelorin.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ComponentScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> userConfig</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/17 16:55</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.codelorin.pojo&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">userConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ApplicationContext context = <span class="keyword">new</span> AnnotationConfigApplicationContext(userConfig.class);</span><br><span class="line">    User user = (User) context.getBean(<span class="string">&quot;getUser&quot;</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="十-代理模式"><a href="#十-代理模式" class="headerlink" title="十.代理模式"></a>十.代理模式</h2><blockquote><p>代理模式就是SpringAOP的底层</p></blockquote><p>分类</p><ul><li><p>静态代理</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210917171752249.png" alt="image-20210917171752249"></p><p>角色分析:</p><ul><li>抽象角色: 一般使用接口或者抽象类</li><li>真实角色:被代理的角色</li><li>代理角色: 代理真实角色后,我们一般会做一些附属操作</li><li>客户: 访问代理对象的人</li></ul><p>代理模式的好处:</p><ul><li>可以使真实操作的更加纯粹</li><li>公共也就交给代理角色,实现了业务的分工</li><li>公共业务发生扩展的时候,方便集中管理</li></ul><p>缺点:</p><ul><li>一个真实角色就会产生一个代理角色,代码效率翻倍,开发效率降低.</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.demo02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> UserServiceProxy</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/19 13:15</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceProxy</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UserServiceImpl userService;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserService</span><span class="params">(UserServiceImpl userService)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userService = userService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        log(<span class="string">&quot;add&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;增加了一个用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        log(<span class="string">&quot;delete&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;删除了一个用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        log(<span class="string">&quot;update&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;更新了一个用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        log(<span class="string">&quot;query&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;查询了一个用户&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">log</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;[Debug] 使用了&quot;</span> + msg + <span class="string">&quot;方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>加深理解AOP</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210919132522127.png" alt="image-20210919132522127"></p><ul><li><p>动态代理</p><ul><li><p>动态代理和静态代理一样</p></li><li><p>动态代理类是动态生成的</p></li><li><p>基于接口或者基于类的动态代理</p><ul><li>基于接口–JDK动态代理</li><li>基于类 cglib</li><li>java字节码实现 javasist</li></ul><p>需要了解: Proxy和InvocationHandler</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxyInvocationHandler</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123;</span><br><span class="line">    <span class="comment">//被代理的接口</span></span><br><span class="line">    <span class="keyword">private</span> Object target;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTarget</span><span class="params">(Object target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.target = target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getProxy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Proxy.newProxyInstance(<span class="keyword">this</span>.getClass().getClassLoader(), target.getClass().getInterfaces(), <span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        <span class="comment">//method.getName()</span></span><br><span class="line">        Object invoke = method.invoke(target, args);</span><br><span class="line">        <span class="keyword">return</span> invoke;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ProxyInvocationHandler handler = <span class="keyword">new</span> ProxyInvocationHandler();</span><br><span class="line"><span class="comment">//现在调用程序处理角色来处理我们要调用的接口对象!</span></span><br><span class="line">handler.setTarget(xxx);</span><br><span class="line">    </span><br><span class="line">handler.getProxy(); <span class="comment">//这里的proxy就是动态生成的!!</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="十一-AOP"><a href="#十一-AOP" class="headerlink" title="十一.AOP"></a>十一.AOP</h2><blockquote><p>面向切面编程,通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210919151138019.png" alt="image-20210919151138019"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210919154303119.png" alt="image-20210919154303119"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210919155401398.png" alt="image-20210919155401398"></p><ul><li>使用spring的API接口来实现</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.codelorin.server.UserServiceImpl&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;log&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.codelorin.log.Log&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;afterLog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.codelorin.log.AfterLog&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--  使用原生Spring API配置AOP  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--   切入点     --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;pointcut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.codelorin.server.UserServiceImpl.*(..))&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  执行环绕增强     --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;log&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;afterLog&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--  使用自定义类来实现  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;diy&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.codelorin.diy.DiyPointCut&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;diy&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;point&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.codelorin.server.UserServiceImpl.*(..))&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">&quot;before&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;point&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">&quot;after&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;point&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    注解实现--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;annotationPointCut&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.codelorin.diy.AnnotationPointCut&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    开启注解支持--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.server;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> UserServiceImpl</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/19 15:15</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;insert&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;update&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;delete&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">select</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;select&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.MethodBeforeAdvice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> Log</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/19 15:21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Log</span> <span class="keyword">implements</span> <span class="title">MethodBeforeAdvice</span> </span>&#123;</span><br><span class="line">    <span class="comment">//method: 要执行的目标对象的方法</span></span><br><span class="line">    <span class="comment">//args: 参数</span></span><br><span class="line">    <span class="comment">//target: 目标对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(Method method, Object[] args, Object target)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        System.out.println(target.getClass().getName() + <span class="string">&quot;的&quot;</span> + method.getName() + <span class="string">&quot;被执行了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.AfterReturningAdvice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> AfterLog</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/19 15:26</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AfterLog</span> <span class="keyword">implements</span> <span class="title">AfterReturningAdvice</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterReturning</span><span class="params">(Object returnValue, Method method, Object[] args, Object target)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行了&quot;</span> + method.getName() + <span class="string">&quot;方法,返回结果为&quot;</span> + returnValue);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.codelorin.server.UserService;</span><br><span class="line"><span class="keyword">import</span> com.codelorin.server.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> MyTest</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/19 15:25</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//动态代理的是接口</span></span><br><span class="line">        UserService userService = context.getBean(<span class="string">&quot;userService&quot;</span>, UserService.class);</span><br><span class="line"></span><br><span class="line">        userService.select();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>使用自定义来实现AOP</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;diy&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.codelorin.diy.DiyPointCut&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;diy&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;point&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.codelorin.server.UserServiceImpl.*(..))&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">&quot;before&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;point&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">&quot;after&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;point&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.diy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> DiyPointCut</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/19 15:41</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DiyPointCut</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法执行前&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法执行后&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>注解实现AOP</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    注解实现--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;annotationPointCut&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.codelorin.diy.AnnotationPointCut&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    开启注解支持 false就是JDK(默认) true就是cglib--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>/&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.diy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.Signature;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.After;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Before;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> AnnotationPointCut</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/9/19 15:47</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//注解实现AOP</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnnotationPointCut</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Before(&quot;execution(* com.codelorin.server.UserServiceImpl.*(..))&quot;)</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法执行前&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After(&quot;execution(* com.codelorin.server.UserServiceImpl.*(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法执行后&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;execution(* com.codelorin.server.UserServiceImpl.*(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">around</span><span class="params">(ProceedingJoinPoint jp)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;环绕前&quot;</span>);</span><br><span class="line">        <span class="comment">//获得签名</span></span><br><span class="line">        Signature signature = jp.getSignature();</span><br><span class="line">        System.out.println(signature);</span><br><span class="line"></span><br><span class="line">        Object proceed = jp.proceed();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;环绕后&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="十二-整合mybatis"><a href="#十二-整合mybatis" class="headerlink" title="十二.整合mybatis"></a>十二.整合mybatis</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210919201641442.png" alt="image-20210919201641442"></p><ul><li>导入jar包<ul><li>junit</li><li>mybatis</li><li>mysql</li><li>spring</li><li>aop</li><li>mybatis-spring</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.12.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.12.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>编写数据库源</li><li>sqlSessionFactory</li><li>sqlSessionTemplate</li><li>接口加实现类</li><li>实现类注入到spring中</li></ul><h2 id="十三-声明式事务"><a href="#十三-声明式事务" class="headerlink" title="十三.声明式事务"></a>十三.声明式事务</h2><ul><li>把一组业务当成一个义务来做:要不都成功,要不都失败</li><li>事务在项目开发中,涉及数据的一致性问题</li><li>确保完整性和一致性</li></ul><p>事务的ACID原则:</p><ul><li>原子性</li><li>一致性</li><li>隔离性</li><li>持久性</li></ul><ul><li>声明式事务:AOP</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--开启声明式事务--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- AOP   --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;txPointCut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.codelorin.mapper.*.*(..))&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;txPointCut&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>编程式事务:异常处理手动回滚</li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis-Plus学习笔记</title>
      <link href="posts/875224ee4405/"/>
      <url>posts/875224ee4405/</url>
      
        <content type="html"><![CDATA[<h1 id="Mybatis-Plus学习笔记"><a href="#Mybatis-Plus学习笔记" class="headerlink" title="Mybatis-Plus学习笔记"></a>Mybatis-Plus学习笔记</h1><h2 id="1-快速入门"><a href="#1-快速入门" class="headerlink" title="1.快速入门"></a>1.快速入门</h2><ul><li>数据库创建</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> <span class="keyword">user</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span></span><br><span class="line">(</span><br><span class="line">id <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">age <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">email <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">user</span> (id, name, age, email) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;Jone&#x27;</span>, <span class="number">18</span>, <span class="string">&#x27;test1@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="number">20</span>, <span class="string">&#x27;test2@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;Tom&#x27;</span>, <span class="number">28</span>, <span class="string">&#x27;test3@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">&#x27;Sandy&#x27;</span>, <span class="number">21</span>, <span class="string">&#x27;test4@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="string">&#x27;Billie&#x27;</span>, <span class="number">24</span>, <span class="string">&#x27;test5@baomidou.com&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li>新建springboot项目</li><li>配置文件</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">123456</span></span><br><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/mybatis_plus?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=GMT%2B8</span></span><br><span class="line"><span class="meta">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br></pre></td></tr></table></figure><ul><li>mapper接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.codelorin.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 只需要继承BaseMapper,泛型填写实体类,所有的CURD操作就已经完成了</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2021/10/8 23:10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">User</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>扫描mapper文件夹</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.codelorin.mapper&quot;)</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisPlusStudyApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MybatisPlusStudyApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>test</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codelorin.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.codelorin.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MybatisPlusStudyApplicationTests</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;User&gt; users = userMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line">        users.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-配置日志"><a href="#2-配置日志" class="headerlink" title="2.配置日志"></a>2.配置日志</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置日志</span></span><br><span class="line"><span class="meta">mybatis-plus.configuration.log-impl</span>=<span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><h2 id="3-CURD"><a href="#3-CURD" class="headerlink" title="3.CURD"></a>3.CURD</h2><h3 id="1-插入"><a href="#1-插入" class="headerlink" title="1.插入"></a>1.插入</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableId(type = IdType.AUTO)</span>   </span><br><span class="line">AUTO(<span class="number">0</span>), <span class="comment">//数据库自增</span></span><br><span class="line">    NONE(<span class="number">1</span>), <span class="comment">//没有</span></span><br><span class="line">    INPUT(<span class="number">2</span>), <span class="comment">//手动输入</span></span><br><span class="line">    ID_WORKER(<span class="number">3</span>),<span class="comment">//雪花</span></span><br><span class="line">    UUID(<span class="number">4</span>), <span class="comment">//uuid</span></span><br><span class="line">    ID_WORKER_STR(<span class="number">5</span>);<span class="comment">//截取字符串</span></span><br></pre></td></tr></table></figure><p>主键生成策略</p><blockquote><p>雪花算法</p></blockquote><p>Twitter开源的分布式id生成算法</p><blockquote><p>数据库主键自增</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setAge(<span class="number">18</span>);</span><br><span class="line">user.setEmail(<span class="string">&quot;codelorin@163.com&quot;</span>);</span><br><span class="line">user.setName(<span class="string">&quot;codelorin&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> result = userMapper.insert(user);</span><br></pre></td></tr></table></figure><h3 id="2-更新"><a href="#2-更新" class="headerlink" title="2.更新"></a>2.更新</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setId(<span class="number">6L</span>);</span><br><span class="line">user.setEmail(<span class="string">&quot;bylorin@163.com&quot;</span>);</span><br><span class="line">user.setName(<span class="string">&quot;codelorin&quot;</span>);</span><br><span class="line">userMapper.updateById(user);</span><br></pre></td></tr></table></figure><h3 id="3-自动填充时间"><a href="#3-自动填充时间" class="headerlink" title="3.自动填充时间"></a>3.自动填充时间</h3><p>1.新增字段 create_time update_time</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `<span class="keyword">user</span>`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `<span class="keyword">user</span>`  (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">30</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">  `age` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">  `email` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">  `create_time` datetime(<span class="number">0</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">0</span>),</span><br><span class="line">  `update_time` datetime(<span class="number">0</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">0</span>) <span class="keyword">ON</span> UPDATE <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">0</span>),</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">1446495940495015940</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_unicode_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br></pre></td></tr></table></figure><h4 id="3-1-数据库实现"><a href="#3-1-数据库实现" class="headerlink" title="3.1.数据库实现"></a>3.1.数据库实现</h4><h3 id="4-乐观锁"><a href="#4-乐观锁" class="headerlink" title="4.乐观锁"></a>4.乐观锁</h3><blockquote><p>十分乐观,总是认为不会出现问题,无论都不加锁,如果出现了问题,再次更新测试</p></blockquote><ul><li>取出记录时，获取当前version</li><li>更新时，带上这个version</li><li>执行更新时， set version = newVersion where version = oldVersion</li><li>如果version不对，就更新失败</li></ul><h3 id="5-悲观锁"><a href="#5-悲观锁" class="headerlink" title="5.悲观锁"></a>5.悲观锁</h3><blockquote><p>十分悲观,总是认为会出现问题,无论干什么都会上锁,再去操作</p></blockquote><h3 id="6-查询操作"><a href="#6-查询操作" class="headerlink" title="6.查询操作"></a>6.查询操作</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    User user = userMapper.selectById(<span class="number">1L</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectBYBatchId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    List&lt;User&gt; users = userMapper.selectBatchIds(Arrays.asList(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line">    users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSelectByMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;10ng123&quot;</span>);</span><br><span class="line">    userMapper.selectByMap(map);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-分页实现"><a href="#7-分页实现" class="headerlink" title="7.分页实现"></a>7.分页实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> MybatisPlusConfig</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2021/11/18 19:49</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.codelorin.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisPlusConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MybatisPlusInterceptor <span class="title">mybatisPlusInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MybatisPlusInterceptor interceptor = <span class="keyword">new</span> MybatisPlusInterceptor();</span><br><span class="line">        interceptor.addInnerInterceptor(<span class="keyword">new</span> PaginationInnerInterceptor(DbType.MYSQL));</span><br><span class="line">        <span class="keyword">return</span> interceptor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>使用</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Page&lt;User&gt; page = <span class="keyword">new</span> Page&lt;&gt;(<span class="number">2</span>, <span class="number">5</span>);</span><br><span class="line">    userMapper.selectPage(page, <span class="keyword">null</span>);</span><br><span class="line">    List&lt;User&gt; records = page.getRecords();</span><br><span class="line">    records.forEach(System.out::println);</span><br><span class="line">    System.out.println(page.getTotal());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-删除"><a href="#8-删除" class="headerlink" title="8.删除"></a>8.删除</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = userMapper.deleteById(<span class="number">2L</span>);</span><br><span class="line">    System.out.println(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-逻辑删除"><a href="#9-逻辑删除" class="headerlink" title="9.逻辑删除"></a>9.逻辑删除</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mybatis-plus.global-config.db-config.logic-delete-field</span>=<span class="string">deleted</span></span><br><span class="line"><span class="meta">mybatis-plus.global-config.db-config.logic-delete-value</span>=<span class="string">1</span></span><br><span class="line"><span class="meta">mybatis-plus.global-config.db-config.logic-not-delete-value</span>=<span class="string">0</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableLogic</span></span><br><span class="line"><span class="keyword">private</span> Integer deleted;</span><br></pre></td></tr></table></figure><h2 id="4-性能分析插件"><a href="#4-性能分析插件" class="headerlink" title="4.性能分析插件"></a>4.性能分析插件</h2><blockquote><p>见官网</p></blockquote><h2 id="5-条件构造器"><a href="#5-条件构造器" class="headerlink" title="5.条件构造器"></a>5.条件构造器</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//模糊查询</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    wrapper.notLike(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;lorin&quot;</span>).likeRight(<span class="string">&quot;email&quot;</span>, <span class="string">&quot;t&quot;</span>);</span><br><span class="line">    List&lt;Map&lt;String, Object&gt;&gt; maps = userMapper.selectMaps(wrapper);</span><br><span class="line">    maps.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mybatis-plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> mybatis-plus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git学习</title>
      <link href="posts/03e117f2f4ce/"/>
      <url>posts/03e117f2f4ce/</url>
      
        <content type="html"><![CDATA[<h1 id="Git-amp-GitHub的使用"><a href="#Git-amp-GitHub的使用" class="headerlink" title="Git&amp;GitHub的使用"></a>Git&amp;GitHub的使用</h1><blockquote><p>目前最强大的版本控制工具</p></blockquote><h2 id="1-目录"><a href="#1-目录" class="headerlink" title="1.目录"></a>1.目录</h2><p>工作区-&gt;暂存区-&gt;本地库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git add</span><br><span class="line">git commit -m &quot;xxxx&quot;</span><br></pre></td></tr></table></figure><h2 id="2-命令"><a href="#2-命令" class="headerlink" title="2.命令"></a>2.命令</h2><h3 id="1-查看状态"><a href="#1-查看状态" class="headerlink" title="1.查看状态"></a>1.查看状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><h3 id="2-查看版本历史"><a href="#2-查看版本历史" class="headerlink" title="2.查看版本历史"></a>2.查看版本历史</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br><span class="line">git log --pretty&#x3D;oneline</span><br><span class="line">git log --online &#x2F;&#x2F;哈希</span><br><span class="line">git reflog &#x2F;&#x2F;指针,推荐</span><br></pre></td></tr></table></figure><h3 id="3-回退版本"><a href="#3-回退版本" class="headerlink" title="3.回退版本"></a>3.回退版本</h3><blockquote><p>本质是指针的指向</p></blockquote><h4 id="1-索引值"><a href="#1-索引值" class="headerlink" title="1.索引值"></a>1.索引值</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reflog</span><br><span class="line">git reset --hard (哈希值)</span><br></pre></td></tr></table></figure><h4 id="2-只能往后退"><a href="#2-只能往后退" class="headerlink" title="2.^(只能往后退)"></a>2.^(只能往后退)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD^</span><br></pre></td></tr></table></figure><h4 id="3-只能往前进"><a href="#3-只能往前进" class="headerlink" title="3.~(只能往前进)"></a>3.~(只能往前进)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD~</span><br></pre></td></tr></table></figure><h4 id="4-reset命令的三个参数对比"><a href="#4-reset命令的三个参数对比" class="headerlink" title="4.reset命令的三个参数对比"></a>4.reset命令的三个参数对比</h4><h5 id="1-–soft"><a href="#1-–soft" class="headerlink" title="1.–soft"></a>1.–soft</h5><blockquote><p>本地库移动指针</p></blockquote><h5 id="2-–mixed"><a href="#2-–mixed" class="headerlink" title="2.–mixed"></a>2.–mixed</h5><blockquote><p>本地库移动指针,重置暂存区</p></blockquote><h5 id="3-–hard"><a href="#3-–hard" class="headerlink" title="3.–hard"></a>3.–hard</h5><blockquote><p>本地库移动指针,重置暂存区和工作区</p></blockquote><h4 id="5删除文件找回"><a href="#5删除文件找回" class="headerlink" title="5删除文件找回"></a>5删除文件找回</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rm xx</span><br><span class="line">git rm filename &#x2F;&#x2F;删除git暂存区文件</span><br><span class="line">git add xx</span><br><span class="line">git commit -m xx</span><br><span class="line">git reset --hard xxx</span><br><span class="line">git checkout -- test.txt &#x2F;&#x2F;用版本库的版本替换工作区的版本，即是找回此文件</span><br></pre></td></tr></table></figure><h4 id="6-添加到暂存区的文件找回"><a href="#6-添加到暂存区的文件找回" class="headerlink" title="6.添加到暂存区的文件找回"></a>6.添加到暂存区的文件找回</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD</span><br></pre></td></tr></table></figure><h4 id="7-版本库替换工作区的版本"><a href="#7-版本库替换工作区的版本" class="headerlink" title="7.版本库替换工作区的版本"></a>7.版本库替换工作区的版本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -- xxx</span><br></pre></td></tr></table></figure><h3 id="4-比较文件"><a href="#4-比较文件" class="headerlink" title="4.比较文件"></a>4.比较文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git diff xxx &#x2F;&#x2F;暂存区比较</span><br><span class="line">git diff HEAD xxx &#x2F;&#x2F;查看工作区和版本库里面最新版本的区别</span><br></pre></td></tr></table></figure><h3 id="5-分支"><a href="#5-分支" class="headerlink" title="5.分支"></a>5.分支</h3><ul><li>master</li><li>feature_xxx</li><li>hot_fix</li></ul><h4 id="1-查看所有分支"><a href="#1-查看所有分支" class="headerlink" title="1.查看所有分支"></a>1.查看所有分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch -v</span><br><span class="line">git branch</span><br></pre></td></tr></table></figure><h4 id="2-创建新分支"><a href="#2-创建新分支" class="headerlink" title="2.创建新分支"></a>2.创建新分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch xxx</span><br></pre></td></tr></table></figure><h4 id="3-切换分支"><a href="#3-切换分支" class="headerlink" title="3.切换分支"></a>3.切换分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout xxx</span><br><span class="line">git switch xxx</span><br></pre></td></tr></table></figure><h4 id="4-创建并切换分支"><a href="#4-创建并切换分支" class="headerlink" title="4.创建并切换分支"></a>4.创建并切换分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git switch -c xxx</span><br><span class="line">git checkout -b xxx</span><br></pre></td></tr></table></figure><h4 id="5-合并分支"><a href="#5-合并分支" class="headerlink" title="5.合并分支"></a>5.合并分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge dev</span><br></pre></td></tr></table></figure><h4 id="6-删除分支"><a href="#6-删除分支" class="headerlink" title="6.删除分支"></a>6.删除分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d dev</span><br></pre></td></tr></table></figure><h4 id="7-解决冲突"><a href="#7-解决冲突" class="headerlink" title="7.解决冲突"></a>7.解决冲突</h4><blockquote><p>自动合并不了,开始手动解决冲突</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">编辑文件修改合适</span><br><span class="line">git add .</span><br><span class="line">git commit</span><br></pre></td></tr></table></figure><h4 id="8-Bug分支"><a href="#8-Bug分支" class="headerlink" title="8.Bug分支"></a>8.Bug分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;如果没有工作完成，提交不了 可以把工作现场存储起来当前处于dev分支</span><br><span class="line">git stash</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;接受到一个101bug</span><br><span class="line">git switch master   &#x2F;&#x2F;切换到主分支</span><br><span class="line">git checkout -b issue-101&#x2F;&#x2F;创建一个新分支issue-101并且切换</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;fix 101 bug&quot;</span><br><span class="line">git switch master</span><br><span class="line">git merge --no-ff -m &quot;merged bug fix 101&quot; issue-101 </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;回到dev分支干活</span><br><span class="line">git switch dev</span><br><span class="line">git status  &#x2F;&#x2F;干净的</span><br><span class="line">git stash list&#x2F;&#x2F;查看工作现场存储</span><br><span class="line">git stash apply &#x2F;&#x2F;恢复不删除stash 需要使用git stash drop删除</span><br><span class="line">git stash pop &#x2F;&#x2F;恢复并且删除</span><br><span class="line">git stash apply stash@&#123;0&#125; &#x2F;&#x2F;多次存储恢复指定的stash</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;master上的bug在dev分支上也存在</span><br><span class="line">git cherry-pick 4c805e2 把master上的分支4c805e2提交到dev分支中</span><br></pre></td></tr></table></figure><h3 id="6-远程库"><a href="#6-远程库" class="headerlink" title="6.远程库"></a>6.远程库</h3><h4 id="1-设置远程库"><a href="#1-设置远程库" class="headerlink" title="1.设置远程库"></a>1.设置远程库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;查看远程库信息</span><br><span class="line">git remote -v</span><br><span class="line">&#x2F;&#x2F;删除远程库</span><br><span class="line">git remote rm origin</span><br><span class="line">&#x2F;&#x2F;创建dev</span><br><span class="line">git checkout -b dev origin&#x2F;dev</span><br><span class="line">&#x2F;&#x2F;推送到远程dev</span><br><span class="line">git push origin dev</span><br><span class="line">&#x2F;&#x2F;github为别名</span><br><span class="line">git remote add github git@github.com:michaelliao&#x2F;learngit.git</span><br><span class="line"></span><br><span class="line">git remote add gitee git@gitee.com:liaoxuefeng&#x2F;learngit.git</span><br><span class="line">git push github master</span><br><span class="line"></span><br><span class="line">pull&#x3D;fetch+merge</span><br><span class="line">&#x2F;&#x2F;抓取下来,只是抓取下来不会改变工作区</span><br><span class="line">git fetch github master</span><br><span class="line">&#x2F;&#x2F;合并</span><br><span class="line">git merge github&#x2F;dev</span><br></pre></td></tr></table></figure><h4 id="2-标签"><a href="#2-标签" class="headerlink" title="2.标签"></a>2.标签</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;用于新建一个标签，默认为HEAD，也可以指定一个commit id；</span><br><span class="line">git tag &lt;tagname&gt;</span><br><span class="line">git log --pretty&#x3D;oneline --abbrev-commit &#x2F;&#x2F;找到历史记录</span><br><span class="line">git tag v0.9 f52c633</span><br><span class="line">&#x2F;&#x2F;可以指定标签信息；</span><br><span class="line">git tag -a &lt;tagname&gt; -m &quot;blablabla...&quot;</span><br><span class="line">&#x2F;&#x2F;可以看到标签信息</span><br><span class="line">git show &lt;tagname&gt;</span><br><span class="line">&#x2F;&#x2F;可以查看所有标签。</span><br><span class="line">git tag</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;可以推送一个本地标签；</span><br><span class="line">git push origin &lt;tagname&gt;</span><br><span class="line">&#x2F;&#x2F;可以推送全部未推送过的本地标签；</span><br><span class="line">git push origin --tags</span><br><span class="line">&#x2F;&#x2F;可以删除一个本地标签；</span><br><span class="line">git tag -d &lt;tagname&gt;</span><br><span class="line">&#x2F;&#x2F;可以删除一个远程标签。</span><br><span class="line">git push origin :refs&#x2F;tags&#x2F;&lt;tagname&gt;</span><br></pre></td></tr></table></figure><h4 id="3-跨团队协作"><a href="#3-跨团队协作" class="headerlink" title="3.跨团队协作"></a>3.跨团队协作</h4><blockquote><p>fork-&gt;pull-request</p></blockquote><h4 id="4-gitignore"><a href="#4-gitignore" class="headerlink" title="4.gitignore"></a>4.gitignore</h4><blockquote><p>git忽略的一些文件</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基础学习</title>
      <link href="posts/f9b8e94ad21f/"/>
      <url>posts/f9b8e94ad21f/</url>
      
        <content type="html"><![CDATA[<h1 id="linux学习笔记"><a href="#linux学习笔记" class="headerlink" title="linux学习笔记"></a>linux学习笔记</h1><h2 id="一-目录结构"><a href="#一-目录结构" class="headerlink" title="一.目录结构"></a>一.目录结构</h2><blockquote><p>linux的世界,一切皆文件</p></blockquote><ul><li><p>/bin(/user/bin /user/local/bin) 常见的命令</p></li><li><p>/sbin 管理员使用的系统管理程序</p></li><li><p>/home 用户目录</p></li><li><p>/root 系统管理员目录</p></li><li><p>/lib 动态连接库</p></li><li><p>/lost+found  非法关机</p></li><li><p>/etc 配置文件</p></li><li><p>/user 用户程序和文件</p></li><li><p>/boot 启动核心文件</p></li><li><p>/proc 虚拟目录,系统内存映射</p></li><li><p>/srv 服务启动需要提取的数据</p></li><li><p>/sys 文件系统</p></li><li><p>/tmp 临时文件</p></li><li><p>/dev 设备管理</p></li><li><p>/media 设备</p></li><li><p>/mnt 临时挂载文件系统</p></li><li><p>/opt 额外安装软件的目录</p></li><li><p>/user/local 额外安装软件的目录</p></li><li><p>/var 不断修改的文件,日志</p></li><li><p>selinux 安全子系统</p></li></ul><h2 id="二-vi和vim"><a href="#二-vi和vim" class="headerlink" title="二.vi和vim"></a>二.vi和vim</h2><ul><li>i /a编辑模式</li><li>ese 正常模式</li><li>:或者/ 命令行模式 wq q q!</li></ul><ul><li>jk 上下</li><li>hl 左右</li><li>gg回到头</li><li>G尾部</li><li>yy 5yy 拷贝当前行或者向下的5行,粘贴p</li><li>dd 5dd 删除当前行或向下的5行</li><li>查找单词/关键字 n下一个</li><li>设置文件行号 命令行set nu set nonu</li><li>u撤销</li><li>行号+shift+g 移动行</li><li>dG 删除全部</li></ul><h2 id="三-开机-重启"><a href="#三-开机-重启" class="headerlink" title="三.开机,重启"></a>三.开机,重启</h2><blockquote><p>无论是重启还是关闭系统,都要使用sync吧内存的数据写到磁盘中.</p><p>虽然现在的系统均在关机重启执行了sync命令,但是最好再执行一次sync</p></blockquote><ul><li><p>shutdown -h now 现在立刻关机</p></li><li><p>shutdown -h 1 一分钟后关机</p></li><li><p>shutdown -r now 现在重启</p></li><li><p>halt 现在关机</p></li><li><p>reboot 重启</p></li><li><p>sync 内存同步到磁盘</p></li></ul><h2 id="四-用户登录和注销"><a href="#四-用户登录和注销" class="headerlink" title="四.用户登录和注销"></a>四.用户登录和注销</h2><ul><li>su - 用户名 切换用户</li><li>logout 注销用户</li></ul><h2 id="五-用户管理"><a href="#五-用户管理" class="headerlink" title="五.用户管理"></a>五.用户管理</h2><ul><li>添加用户 useradd 用户名 ||  useradd -d /home/指定 用户名</li><li>设置密码 passwd 用户名</li><li>删除用户 userdel 用户名|| userdel -r 用户名(删除用户目录)</li><li>查询用户信息 id 用户名</li></ul><ul><li>我是谁 whoami who am i</li></ul><ul><li>新增用户组 groupadd 组名</li><li>删除用户组groupdel 组名</li><li>添加用户时候加上组 useradd -g 用户组 用户名</li><li>修改用户的组 uermod -g 用户组 用户名</li></ul><ul><li><p>/etc/passwd 用户配置文件</p><blockquote><p>用户名:口令:用户标志符:组标识号:注释性描述:主目录:登录shell</p></blockquote></li><li><p>/etc/shadow 文件 口令配置文件</p><blockquote><p>登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志</p></blockquote></li><li><p>/etc/group 文件 组的配置文件</p><blockquote><p>组名:口令:组标识号:组内用户列表</p></blockquote></li></ul><h2 id="六-运行级别"><a href="#六-运行级别" class="headerlink" title="六.运行级别"></a>六.运行级别</h2><blockquote><p>init 运行级别 </p></blockquote><ul><li>0 关机</li><li>1 单用户</li><li>2 多用户没有网络</li><li>3 多用户有网络</li><li>4 系统未使用保留给用户</li><li>5 图像界面</li><li>6 系统重启</li></ul><blockquote><p>查看运行级别 systemctl get-default</p><p>systemctl set-default multi-user.target</p></blockquote><p>​    </p><h2 id="七-帮助命令"><a href="#七-帮助命令" class="headerlink" title="七.帮助命令"></a>七.帮助命令</h2><ul><li>man 命令</li><li>help 命令</li></ul><h2 id="八-文件目录类"><a href="#八-文件目录类" class="headerlink" title="八.文件目录类"></a>八.文件目录类</h2><ul><li>ls -al</li><li>pwd</li></ul><ul><li><p>mkdir</p><blockquote><p>mkdir 文件目录 -p可以递归创建</p></blockquote></li><li><p>rmdir 删除空目录</p></li><li><p>rm -r 递归 -f 强制</p></li><li><p>touch 创建新文件</p></li></ul><ul><li><p>cp 拷贝</p><blockquote><p>cp xx xx -r递归</p><p>强制覆盖使用\cp</p></blockquote></li></ul><ul><li>mv 移动文件与目录或者重命名</li></ul><blockquote><p>mv 旧文件名 新文件名 重命名</p><p>mv /xxx/xx /xxx 移动文件</p></blockquote><ul><li>cat 查看文件 -n查看行号 </li></ul><blockquote><p>cat xxx | more</p></blockquote><ul><li><p>more 显示内容</p><blockquote><p>enter 一行</p><p>空格 一页</p><p>q离开</p></blockquote></li><li><p>less</p><blockquote><p>空格 一页</p><p>上下方向</p><p>q离开</p><p>/字符串 搜索向上</p><p>?字符串 搜索向下</p></blockquote></li><li><p>echo</p><blockquote><p>输出内容</p></blockquote></li><li><p>head</p><blockquote><p>head 文件 查看前10行</p><p>head -n 5 文件 查看前5行</p></blockquote></li><li><p>tail</p><blockquote><p>tail 文件 查看尾部10行</p><p>tail -n 5 文件查看尾5行</p><p>tail -f 文件 实时追踪文件的所有更新</p></blockquote></li><li><p>&gt; and &gt;&gt;</p><blockquote><p>ls - l &gt; 文件 将内容覆盖写入</p><p>ls -l &gt;&gt; 追加写入</p></blockquote></li><li><p>&amp; and &amp;&amp; and | and ||</p></li></ul><blockquote><p>&amp; 后台</p><p>&amp;&amp;成功执行后面</p><p>| 管道 第一个输出 作为第二个的输入</p><p>|| 第一个失败才执行第二个</p></blockquote><ul><li><p>ln</p><blockquote><p>软链接 类似于快捷方式</p><p>ln -s 原来文件或目录 软链接名称</p><p>rm 软链接名称</p></blockquote></li><li><p>history</p><blockquote><p>查看历史指令</p><p>history 10</p><p>!行数 执行行数的指令</p></blockquote></li></ul><ul><li><p>date</p><blockquote><p>date</p><p>date “+%Y-%m-%d %H:%M:%S”</p><p>date -s “2020-11-02 20:02:02” 修改</p></blockquote></li><li><p>cal</p><blockquote><p>查看日历</p><p>cal 2020</p></blockquote></li></ul><ul><li><p>find查找</p><blockquote><p>find 搜索范围 </p><p>-name 按照制定的文件名</p><p>-user 用户所属文件</p><p>-size 制定大小 + - 大于小于等于</p></blockquote></li><li><p>locate </p><blockquote><p>快速定位文件路径</p><p>1.updatedb</p><p>2.locate xxx</p></blockquote></li><li><p>which</p><blockquote><p>which xx</p></blockquote></li><li><p>grep过滤查找</p><blockquote><p>-n行号 -i忽略大小写</p><p>cat /hello | grep “yes”</p></blockquote></li></ul><ul><li><p>gzip</p><blockquote><p>gzip xxx</p><p>gunzip xxx</p></blockquote></li><li><p>zip </p><blockquote><p>zip -r 压缩文件名 目录</p><p>unzip -d 目录 xxx</p></blockquote></li><li><p>tar</p><blockquote><p>-c  产生tar打包文件</p><p>-v 显示详细信息</p><p>-f 制定文件名</p><p>-z 打包且压缩</p><p>-x 解包</p><p>压缩 tar -zcvf 文件名  目录文件</p><p>解压tar -zxvf 文件名  -C 目录文件</p></blockquote></li></ul><h2 id="九-组管理和权限管理"><a href="#九-组管理和权限管理" class="headerlink" title="九.组管理和权限管理"></a>九.组管理和权限管理</h2><ul><li><p>文件所有者修改</p><blockquote><p>chown 用户名 文件名</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911142409505.png" alt="image-20210911142409505"></p></li><li><p>组的创建</p><blockquote><p>groupadd 组名</p><p>创建用户并放入一个组中</p><p>useradd -g 组名 用户名</p></blockquote></li><li><p>文件的所在组修改</p><blockquote><p>chgrp 组名 文件名</p></blockquote></li><li><p>改变用户所在组</p><blockquote><p>usermod -g 新组名 用户名</p><p>usermod -d 目录名 用户名 改变改用户登录的初始目录</p></blockquote></li></ul><blockquote><p>权限的基本介绍</p></blockquote><p>第一个参数的第一个字母</p><ul><li>d为目录</li><li>-为文件</li><li>l为链接文档</li><li>b接口设备</li><li>c为类似端口设备</li></ul><p>接下来的9个字母</p><p>三个为一组</p><ul><li>所有者权限</li><li>同用户组权限</li><li>其他用户权限</li></ul><p>r=4,w=2,x=1</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210518102507583.png" alt="image-20210518102507583"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911141617635.png" alt="image-20210911141617635"></p><ul><li>修改文件目录权限</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911141959311.png" alt="image-20210911141959311"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911142254650.png" alt="image-20210911142254650"></p><h2 id="十-定时任务调度"><a href="#十-定时任务调度" class="headerlink" title="十.定时任务调度"></a>十.定时任务调度</h2><blockquote><p>使用crontab指令进行crond任务调度</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911145527056.png" alt="image-20210911145527056"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911145659430.png" alt="image-20210911145659430"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911145921588.png" alt="image-20210911145921588"></p><blockquote><p>at定时任务(只执行一次)</p></blockquote><h2 id="十一-硬盘"><a href="#十一-硬盘" class="headerlink" title="十一.硬盘"></a>十一.硬盘</h2><h2 id="十二-网络配置"><a href="#十二-网络配置" class="headerlink" title="十二.网络配置"></a>十二.网络配置</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911151822164.png" alt="image-20210911151822164"></p><h2 id="十三-进程管理"><a href="#十三-进程管理" class="headerlink" title="十三.进程管理"></a>十三.进程管理</h2><ul><li>ps指令</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911152307631.png" alt="image-20210911152307631"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911152725513.png" alt="image-20210911152725513"></p><ul><li><p>kill</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911153659709.png" alt="image-20210911153659709"></p></li><li><p>pstree</p></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911153729692.png" alt="image-20210911153729692"></p><h2 id="十四-服务管理"><a href="#十四-服务管理" class="headerlink" title="十四.服务管理"></a>十四.服务管理</h2><ul><li>service</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911154328023.png" alt="image-20210911154328023"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911155046103.png" alt="image-20210911155046103"></p><ul><li>chkconfig</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911155034407.png" alt="image-20210911155034407"></p><ul><li>systemctl</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911155134551.png" alt="image-20210911155134551"></p><ul><li>防火墙</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911155736155.png" alt="image-20210911155736155"></p><ul><li><p>top指令</p><blockquote><p>-d 秒数 多少秒更新一次</p><p>-i 使 top不显示任何限制或者僵死进程</p><p>-p 通过指定监控进程id来监控特定进程</p></blockquote><blockquote><p>可以使用使用u筛选指定用户</p><p>k来杀死指定进程</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911203936495.png" alt="image-20210911203936495"></p></li></ul><h2 id="十五-网络状况监控"><a href="#十五-网络状况监控" class="headerlink" title="十五.网络状况监控"></a>十五.网络状况监控</h2><ul><li><p>netstat</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911204828092.png" alt="image-20210911204828092"></p></li></ul><h2 id="十六-rpm-yum"><a href="#十六-rpm-yum" class="headerlink" title="十六. rpm yum"></a>十六. rpm yum</h2><blockquote><p>rpm</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911205437657.png" alt="image-20210911205437657"></p><ul><li>卸载</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911205930537.png" alt="image-20210911205930537"></p><ul><li>安装</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911205948967.png" alt="image-20210911205948967"></p><blockquote><p>yum</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911210132946.png" alt="image-20210911210132946"></p><h2 id="十七-shell快速入门"><a href="#十七-shell快速入门" class="headerlink" title="十七.shell快速入门"></a>十七.shell快速入门</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210911211413030.png" alt="image-20210911211413030"></p><ul><li>shell的变量</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 系统变量 </span></span><br><span class="line"><span class="variable">$Home</span> <span class="variable">$PWD</span> <span class="variable">$SHELL</span> <span class="variable">$USER</span></span><br><span class="line"><span class="comment"># 显示所有变量</span></span><br><span class="line"><span class="built_in">set</span></span><br><span class="line"><span class="comment"># 定义变量</span></span><br><span class="line">A=1</span><br><span class="line"><span class="comment"># 撤销变量</span></span><br><span class="line"><span class="built_in">unset</span> A</span><br><span class="line"><span class="comment"># 声明静态变量</span></span><br><span class="line"><span class="built_in">readonly</span> 变量</span><br><span class="line"><span class="comment"># 命令的返回赋值给变量</span></span><br><span class="line">A=`date`</span><br><span class="line">A=$(date)</span><br></pre></td></tr></table></figure><ul><li>设置环境变量</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912132900422.png" alt="image-20210912132900422"></p><ul><li><p>注释</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单行注释</span></span><br><span class="line"></span><br><span class="line">:&lt;&lt;!</span><br><span class="line">多行注释</span><br><span class="line">!</span><br></pre></td></tr></table></figure></li><li><p>位置参数</p></li></ul><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/202206231954947.png" alt="image-20210912133935119"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> 0=<span class="variable">$0</span>,1=<span class="variable">$1</span></span><br><span class="line"><span class="built_in">echo</span> $*</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$@</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$#</span></span><br></pre></td></tr></table></figure><ul><li>预定义变量</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912134501459.png" alt="image-20210912134501459"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> 当前执行的进程id=$$</span><br><span class="line">/test.sh &amp;</span><br><span class="line"><span class="built_in">echo</span> 最后一个后台运行的进程id=$!</span><br><span class="line"><span class="built_in">echo</span> 执行的结果$?</span><br></pre></td></tr></table></figure><ul><li>运算符</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912135008533.png" alt="image-20210912135008533"></p><ul><li>条件判断</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912135602540.png" alt="image-20210912135602540"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912135616917.png" alt="image-20210912135616917"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912135946202.png" alt="image-20210912135946202"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912140016038.png" alt="image-20210912140016038"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912140246529.png" alt="image-20210912140246529"></p><ul><li>for循环</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912140520479.png" alt="image-20210912140520479"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912140627019.png" alt="image-20210912140627019"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912140902077.png" alt="image-20210912140902077"></p><ul><li>while循环</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912141011920.png" alt="image-20210912141011920"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912141101769.png" alt="image-20210912141101769"></p><ul><li>读取控制台输入read</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912141128285.png" alt="image-20210912141128285"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">read</span> -p 请输入 n</span><br></pre></td></tr></table></figure><ul><li>系统函数</li></ul><blockquote><p>basename</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912141755987.png" alt="image-20210912141755987"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912141834857.png" alt="image-20210912141834857"></p><blockquote><p>dirname</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912141856219.png" alt="image-20210912141856219"></p><ul><li>自定义函数</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912142032457.png" alt="image-20210912142032457"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img@master/img/xxx.3vu34f1zz280.png" alt="image-20210912142217880"></p><h2 id="十八-shell综合案例"><a href="#十八-shell综合案例" class="headerlink" title="十八.shell综合案例"></a>十八.shell综合案例</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912142450248.png" alt="image-20210912142450248"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="十九-日志管理"><a href="#十九-日志管理" class="headerlink" title="十九.日志管理"></a>十九.日志管理</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210912143751377.png" alt="image-20210912143751377"></p><ul><li>rsyslogd</li></ul><blockquote><p>ps -aux | grep rsyslogd | grep -v grep</p></blockquote><h2 id="二十-面试题"><a href="#二十-面试题" class="headerlink" title="二十.面试题"></a>二十.面试题</h2><p>锁住一些重要文件</p><p>chattr +i /etc/passwd</p><h2 id="二十一-一些补充知识"><a href="#二十一-一些补充知识" class="headerlink" title="二十一.一些补充知识"></a>二十一.一些补充知识</h2><h3 id="文件描述符"><a href="#文件描述符" class="headerlink" title="文件描述符"></a>文件描述符</h3><p>当执行shell命令时，会默认打开3个文件，每个文件有对应的文件描述符来方便我们使用：</p><table><thead><tr><th>类型</th><th>文件描述符</th><th>默认情况</th><th>对应文件句柄位置</th></tr></thead><tbody><tr><td>标准输入（standard input）</td><td>0</td><td>从键盘获得输入</td><td>/proc/slef/fd/0</td></tr><tr><td>标准输出（standard output）</td><td>1</td><td>输出到屏幕（即控制台）</td><td>/proc/slef/fd/1</td></tr><tr><td>错误输出（error output）</td><td>2</td><td>输出到屏幕（即控制台）</td><td>/proc/slef/fd/2</td></tr></tbody></table><p>所以我们平时在执行shell命令中，都默认是从键盘获得输入，并且将结果输出到控制台上。但是我们可以通过更改文件描述符默认的指向，从而实现输入输出的重定向。比如我们将1指向文件，那么标准的输出就会输出到文件中。</p><h2 id="输出重定向"><a href="#输出重定向" class="headerlink" title="输出重定向"></a>输出重定向</h2><p>输出重定向的使用方式很简单，基本的一些命令如下：</p><table><thead><tr><th>命令</th><th>介绍</th></tr></thead><tbody><tr><td>command &gt;filename</td><td>把标准输出重定向到新文件中</td></tr><tr><td>command 1&gt;filename</td><td>同上</td></tr><tr><td>command &gt;&gt;filename</td><td>把标准输出追加到文件中</td></tr><tr><td>command 1&gt;&gt;filename</td><td>同上</td></tr><tr><td>command 2&gt;filename</td><td>把标准错误重定向到新文件中</td></tr><tr><td>command 2&gt;&gt;filename</td><td>把标准错误追加到新文件中</td></tr></tbody></table><p>我们使用<code>&gt;</code>或者<code>&gt;&gt;</code>对输出进行重定向。符号的左边表示文件描述符，<strong>如果没有的话表示1，也就是标准输出</strong>，符号的右边可以是一个文件，也可以是一个输出设备。当使用<code>&gt;</code>时，会判断右边的文件存不存在，如果存在的话就先删除，然后创建一个新的文件，不存在的话则直接创建。但是当使用<code>&gt;&gt;</code>进行追加时，则不会删除原来已经存在的文件。</p><h2 id="输入重定向"><a href="#输入重定向" class="headerlink" title="输入重定向"></a>输入重定向</h2><p>在理解了输出重定向之后，理解输入重定向就会容易得多。对输入重定向的基本命令如下：</p><table><thead><tr><th>命令</th><th>介绍</th></tr></thead><tbody><tr><td>command &lt;filename</td><td>以filename文件作为标准输入</td></tr><tr><td>command 0&lt;filename</td><td>同上</td></tr><tr><td>command &lt;&lt;delimiter</td><td>从标准输入中读入，直到遇到delimiter分隔符</td></tr></tbody></table><p>我们使用<code>&lt;</code>对输入做重定向，<strong>如果符号左边没有写值，那么默认就是0</strong>。</p><p>我们这次以cat命令为例，如果cat后面没有跟文件名的话，那它的作用就是将标准输入（比如键盘）回显到标准输出（比如屏幕）上：</p><p>我们看到，当我们输入完<code>cat &gt;out &lt;&lt;end</code>，然后敲下回车之后，命令并没有结束，此时cat命令像一开始一样，等待你给它输入数据。然后当我们敲入<code>end</code>之后，cat命令就结束了。<code>end</code>之前输入的字符都已经被写入到了out文件中。这就是输入分割符的作用。</p><blockquote><p> 重定向绑定</p></blockquote><p>好了，在有了以上知识的基础上，我们再来看开头提到的<code>&gt;/dev/null 2&gt;&amp;1</code>。这条命令其实分为两命令，一个是<code>&gt;/dev/null</code>，另一个是<code>2&gt;&amp;1</code>。</p><blockquote><ol><li><blockquote><p>/dev/null</p></blockquote></li></ol></blockquote><p>这条命令的作用是将标准输出1重定向到/dev/null中。/dev/null代表linux的空设备文件，所有往这个文件里面写入的内容都会丢失，俗称“黑洞”。那么执行了<code>&gt;/dev/null</code>之后，标准输出就会不再存在，没有任何地方能够找到输出的内容。</p><blockquote><ol start="2"><li>2&gt;&amp;1</li></ol></blockquote><p>这条命令用到了重定向绑定，采用&amp;可以将两个输出绑定在一起。这条命令的作用是错误输出将和标准输出同用一个文件描述符，说人话就是错误输出将会和标准输出输出到同一个地方。</p><p>linux在执行shell命令之前，就会确定好所有的输入输出位置，并且从左到右依次执行重定向的命令，所以<code>&gt;/dev/null 2&gt;&amp;1</code>的作用就是让标准输出重定向到/dev/null中（丢弃标准输出），然后错误输出由于重用了标准输出的描述符，所以错误输出也被定向到了/dev/null中，错误输出同样也被丢弃了。执行了这条命令之后，<strong>该条shell命令将不会输出任何信息到控制台，也不会有任何信息输出到文件中</strong>。</p><blockquote><p>&gt;/dev/null 2&gt;&amp;1        2&gt;&amp;1 &gt;/dev/null</p></blockquote><p>再回到文章的开头，我说我弄反了<code>&gt;/dev/null</code>和<code>2&gt;&amp;1</code>拼装的顺序，导致出了一点小问题。乍眼看这两条命令貌似是等同的，但其实大为不同。刚才提到了，linux在执行shell命令之前，就会确定好所有的输入输出位置，并且从左到右依次执行重定向的命令。那么我们同样从左到右地来分析<code>2&gt;&amp;1 &gt;/dev/null</code>：</p><ol><li>2&gt;&amp;1，将错误输出绑定到标准输出上。由于此时的标准输出是默认值，也就是输出到屏幕，所以错误输出会输出到屏幕。</li><li>&gt;/dev/null，将标准输出1重定向到/dev/null中。</li></ol><p>我们用一个表格来更好地说明这两条命令的区别：</p><table><thead><tr><th>命令</th><th>标准输出</th><th>错误输出</th></tr></thead><tbody><tr><td>&gt;/dev/null 2&gt;&amp;1</td><td>丢弃</td><td>丢弃</td></tr><tr><td>2&gt;&amp;1 &gt;/dev/null</td><td>丢弃</td><td>屏幕</td></tr></tbody></table><blockquote><p> &gt;/dev/null 2&gt;&amp;1 VS &gt;/dev/null 2&gt;/dev/null</p></blockquote><p>那么可能会有些同学会疑问，为什么要用重定向绑定，而不是像<code>&gt;/dev/null 2&gt;/dev/null</code>这样子重复一遍呢。</p><p>为了回答这个问题，我们回到刚才介绍输出重定向的场景。我们尝试将标准输出和错误输出都定向到out文件中：</p><p>WTF？竟然出现了乱码，这是为啥呢？这是因为采用这种写法，标准输出和错误输出会抢占往out文件的管道，所以可能会导致输出内容的时候出现缺失、覆盖等情况。现在是出现了乱码，有时候也有可能出现只有error信息或者只有正常信息的情况。不管怎么说，采用这种写法，最后的情况是无法预估的。</p><p>而且，由于out文件被打开了两次，两个文件描述符会抢占性的往文件中输出内容，所以整体IO效率不如<code>&gt;/dev/null 2&gt;&amp;1</code>来得高。</p><p>nohup结合</p><p>我们经常使用<code>nohup command &amp;</code>命令形式来启动一些后台程序，比如一些java服务：</p><blockquote><p> nohup java -jar xxxx.jar &amp;</p></blockquote><p>为了不让一些执行信息输出到前台（控制台），我们还会加上刚才提到的<code>&gt;/dev/null 2&gt;&amp;1</code>命令来丢弃所有的输出：</p><blockquote><p> nohup java -jar xxxx.jar &gt;/dev/null 2&gt;&amp;1 &amp;</p></blockquote><p>总结</p><p>本文主要介绍了linux重定向的原理以及一些基本命令，并且详细地分析了<code>&gt;/dev/null 2&gt;&amp;1</code>这个命令以及一些注意点。</p><p>总而言之，在工作中用到最多的就是<code>nohup command &gt;/dev/null 2&gt;&amp;1 &amp;</code>命令</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker的学习笔记</title>
      <link href="posts/1ab9c6f4fb04/"/>
      <url>posts/1ab9c6f4fb04/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><blockquote><p>弱小和无知不是生存的障碍,傲慢才是</p></blockquote><h2 id="1-Docker概述"><a href="#1-Docker概述" class="headerlink" title="1.Docker概述"></a>1.Docker概述</h2><blockquote><p>Docker为什么会出现</p></blockquote><p>一款产品:开发-&gt;上先 两套环境! 应用环境,应用配置</p><p>问题:我的电脑可以运行!版本更新,导致服务不可用!</p><p>环境配置十分麻烦,docker就可以解决这个问题</p><h2 id="2-Docker思想"><a href="#2-Docker思想" class="headerlink" title="2.Docker思想"></a>2.Docker思想</h2><blockquote><p>隔离</p></blockquote><p>集装箱的每个箱子互相隔离,打包装箱</p><h2 id="3-docker的结构"><a href="#3-docker的结构" class="headerlink" title="3.docker的结构"></a>3.docker的结构</h2><table><thead><tr><th align="center"><strong>Lib App |Lib App</strong></th></tr></thead><tbody><tr><td align="center"><strong>Kernel</strong></td></tr></tbody></table><p>docker和虚拟机的不同:</p><ul><li>传统虚拟机,虚拟出硬件,运行完整的操作系统,然后在这个系统上安装和运行软件</li><li>容器内的应用直接运行宿主机的内容,容器是没有自己的内核的,也没有虚拟我们的硬件</li><li>每个容器间互相隔离</li></ul><h2 id="4-Docker的优点"><a href="#4-Docker的优点" class="headerlink" title="4.Docker的优点"></a>4.Docker的优点</h2><ul><li>应用更快速的交付和部署</li><li>更便携的升级和扩缩容</li><li>更简单的系统运维</li><li>更高效的计算资源利用</li></ul><h2 id="5-Docker的名词概念"><a href="#5-Docker的名词概念" class="headerlink" title="5.Docker的名词概念"></a>5.Docker的名词概念</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img@master/img/xxx.2oau29n92pa0.png" alt="image-20210513000000059"></p><h3 id="1-镜像-image"><a href="#1-镜像-image" class="headerlink" title="1.镜像(image):"></a>1.镜像(image):</h3><p>docker镜像就是一个模板,可以通过镜像创建多个容器.tomcat镜像-&gt;run-&gt;tomcat01容器</p><h3 id="2-容器-container"><a href="#2-容器-container" class="headerlink" title="2.容器(container)"></a>2.容器(container)</h3><p>docker利用容器技术,独立运行一个或者一组应用,它是通过镜像创建的</p><p>启动,停止,删除,基本命令</p><h3 id="3-仓库-repository"><a href="#3-仓库-repository" class="headerlink" title="3.仓库(repository)"></a>3.仓库(repository)</h3><p>存放镜像的地方</p><p>公有和私有仓库</p><h2 id="6-安装docker"><a href="#6-安装docker" class="headerlink" title="6.安装docker"></a>6.安装docker</h2><p><a href="https://docs.docker.com/engine/install/">docker安装卸载文档</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 卸载旧版本</span></span><br><span class="line">sudo yum remove docker \</span><br><span class="line">                 docker-client \</span><br><span class="line">                 docker-client-latest \</span><br><span class="line">                 docker-common \</span><br><span class="line">                 docker-latest \</span><br><span class="line">                 docker-latest-logrotate \</span><br><span class="line">                 docker-logrotate \</span><br><span class="line">                 docker-engine</span><br><span class="line"><span class="meta">#</span><span class="bash"> 需要的安装包</span>  </span><br><span class="line">sudo yum install -y yum-utils</span><br><span class="line"><span class="meta">#</span><span class="bash"> 镜像仓库</span></span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">   --add-repo \</span><br><span class="line">   http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装docker引擎</span></span><br><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><blockquote><p>阿里云镜像加速</p></blockquote><p><a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">文档</a></p><h2 id="7-docker-run流程"><a href="#7-docker-run流程" class="headerlink" title="7.docker run流程"></a>7.docker run流程</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img@master/img/xxx.1i8k22ze4rkw.png" alt="image-20210513002653977"></p><h2 id="8-底层原理"><a href="#8-底层原理" class="headerlink" title="8.底层原理"></a>8.底层原理</h2><blockquote><p>docker是怎么工作的？</p></blockquote><p>Docker是一个c/s的结构的系统，Docker的守护运行在主机上。通过Socket从客户端访问！</p><p>Docker Server接收到Docker-Client的指令,就会执行这个命令.</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img@master/img/xxx.4bni55fk5xq0.png" alt="xxx"></p><p>Docker为什么比虚拟机块？</p><ul><li>Docker有比虚拟机更少的抽象层</li><li>Docker利用的是宿主机的内核，vm需要是Guest OS</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img@master/img/xxx.6lelclt307k0.png" alt="xxx"></p><h2 id="9-Docker的常用命令"><a href="#9-Docker的常用命令" class="headerlink" title="9.Docker的常用命令"></a>9.Docker的常用命令</h2><blockquote><p>帮助命令 <a href="https://docs.docker.com/engine/reference/commandline/docker/">文档</a>      <a href="https://hub.docker.com/">下载</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker version # 显示docker的版本信息</span><br><span class="line">docker info   # 显示docker的系统信息,包括镜像和容器的数量</span><br><span class="line">docker 命令 --help # 帮助命令</span><br></pre></td></tr></table></figure><h2 id="10-镜像命令"><a href="#10-镜像命令" class="headerlink" title="10.镜像命令"></a>10.镜像命令</h2><h3 id="1-docker-images-显示所有镜像"><a href="#1-docker-images-显示所有镜像" class="headerlink" title="1.docker images(显示所有镜像)"></a>1.docker images(显示所有镜像)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">docker images --help</span><br><span class="line">Options:</span><br><span class="line">  -a, --all             Show all images (default hides intermediate images) #列出所有镜像</span><br><span class="line">      --digests         Show digests</span><br><span class="line">  -f, --filter filter   Filter output based on conditions provided</span><br><span class="line">      --format string   Pretty-print images using a Go template</span><br><span class="line">      --no-trunc        Don&#x27;t truncate output</span><br><span class="line">  -q, --quiet           Only show image IDs# 只显示镜像的id</span><br><span class="line"></span><br><span class="line">docker images</span><br><span class="line"><span class="meta">#</span><span class="bash"> REPOSITORY    TAG       IMAGE ID       CREATED        SIZE</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 镜像仓库源 标签         id           创建时间         大小</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img@master/img/xxx.76mvcdjibww0.png" alt="xxx"></p><h3 id="2-docker-search-镜像搜索"><a href="#2-docker-search-镜像搜索" class="headerlink" title="2.docker search(镜像搜索)"></a>2.docker search(镜像搜索)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker search mysql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">可选性</span> </span><br><span class="line">--filter=starts=3000</span><br></pre></td></tr></table></figure><h3 id="3-docker-pull-拉取镜像"><a href="#3-docker-pull-拉取镜像" class="headerlink" title="3.docker pull(拉取镜像)"></a>3.docker pull(拉取镜像)</h3><blockquote><p>不写tag就是latest 最新版本</p><p>分层下载</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql</span><br><span class="line"><span class="meta">#</span><span class="bash"> 等价于</span></span><br><span class="line">docker pull docker.io/library/mysql:latest</span><br></pre></td></tr></table></figure><h3 id="4-docker-rmi-删除镜像"><a href="#4-docker-rmi-删除镜像" class="headerlink" title="4.docker rmi(删除镜像)"></a>4.docker rmi(删除镜像)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 通过id删除</span></span><br><span class="line">docker rmi -f id</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除所有</span></span><br><span class="line">docker rmi -f $(docker images -aq)</span><br></pre></td></tr></table></figure><h2 id="11-容器命令"><a href="#11-容器命令" class="headerlink" title="11.容器命令"></a>11.容器命令</h2><blockquote><p>有了镜像才可以创建容器</p></blockquote><p>新建容器并启动</p><h3 id="1-docker-run-容器启动"><a href="#1-docker-run-容器启动" class="headerlink" title="1.docker run(容器启动)"></a>1.docker run(容器启动)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">docker run [可选参数] image</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 参数说明</span></span><br><span class="line">--name=&quot;Name&quot; 容器名字</span><br><span class="line">-d 后台启动</span><br><span class="line">-it 交互方式运行,进入容器查看内容</span><br><span class="line">-p 制定端口 -p8080:8080</span><br><span class="line">1.主机:容器</span><br><span class="line">2.容器</span><br><span class="line">3.ip:容器端口</span><br><span class="line"><span class="meta">#</span><span class="bash"> 交互进行</span></span><br><span class="line">docker run -it centos /bin/bash</span><br><span class="line"><span class="meta">#</span><span class="bash"> 退出停止</span></span><br><span class="line">exit</span><br><span class="line"><span class="meta">#</span><span class="bash"> 退出不停止</span></span><br><span class="line">ctrl+p+q</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-查看运行的容器"><a href="#2-查看运行的容器" class="headerlink" title="2.查看运行的容器"></a>2.查看运行的容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 正在运行</span></span><br><span class="line">docker ps</span><br><span class="line"><span class="meta">#</span><span class="bash"> 全部</span></span><br><span class="line">docker ps -a</span><br><span class="line"><span class="meta">#</span><span class="bash"> -n=?  显示最近创建的容器 ?为个数</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -q 只显示id</span></span><br></pre></td></tr></table></figure><h3 id="3-删除容器"><a href="#3-删除容器" class="headerlink" title="3.删除容器"></a>3.删除容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker rm 容器id</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除所有容器(可以删除活动的容器)</span></span><br><span class="line">docker rm -f $(docker ps -aq)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 下面等价</span></span><br><span class="line">docker ps -a -q|xargs docker rm</span><br></pre></td></tr></table></figure><h3 id="4-启动停止操作"><a href="#4-启动停止操作" class="headerlink" title="4.启动停止操作"></a>4.启动停止操作</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker start id</span><br><span class="line">docker restart id</span><br><span class="line">docker stop id</span><br><span class="line">docker kill id</span><br></pre></td></tr></table></figure><h2 id="12-其他命令"><a href="#12-其他命令" class="headerlink" title="12.其他命令"></a>12.其他命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d centos</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 为什么centos停止了?</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> docker 后台运行需要一个前台进程,docker发现没有应用,就会自动停止</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-查看日志"><a href="#1-查看日志" class="headerlink" title="1.查看日志"></a>1.查看日志</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker logs --help</span><br><span class="line"></span><br><span class="line">dockers log -tf --tail 10 id</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-查看容器进程信息"><a href="#2-查看容器进程信息" class="headerlink" title="2.查看容器进程信息"></a>2.查看容器进程信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker top id</span><br></pre></td></tr></table></figure><h3 id="3-查看容器元数据"><a href="#3-查看容器元数据" class="headerlink" title="3.查看容器元数据"></a>3.查看容器元数据</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect id</span><br></pre></td></tr></table></figure><h3 id="4-进入正在运行的容器"><a href="#4-进入正在运行的容器" class="headerlink" title="4.进入正在运行的容器"></a>4.进入正在运行的容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 新窗口</span></span><br><span class="line">docker exec -it id [/bin/bash]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 旧窗口,进入正在执行的终端</span></span><br><span class="line">docker attach -it id [/bin/bash]</span><br></pre></td></tr></table></figure><h3 id="5-容器拷贝数据到主机"><a href="#5-容器拷贝数据到主机" class="headerlink" title="5.容器拷贝数据到主机"></a>5.容器拷贝数据到主机</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp id:/home/xx /home</span><br></pre></td></tr></table></figure><h2 id="13-Docker镜像详解"><a href="#13-Docker镜像详解" class="headerlink" title="13.Docker镜像详解"></a>13.Docker镜像详解</h2><blockquote><p>镜像就是一个独立的软件包</p></blockquote><h3 id="1-UoionFS-联合文件系统"><a href="#1-UoionFS-联合文件系统" class="headerlink" title="1.UoionFS(联合文件系统)"></a>1.UoionFS(联合文件系统)</h3><blockquote><p>一次性加载多个文件系统,但从外面看,只能看到一个文件系统,联合加载会把各层的文件系统叠加起来,这样最终的文件系统会包含所有的底层的文件和目录</p></blockquote><h3 id="2-docker镜像加载"><a href="#2-docker镜像加载" class="headerlink" title="2.docker镜像加载"></a>2.docker镜像加载</h3><blockquote><p>bootfs引导加载</p></blockquote><blockquote><p>rootfs linux系统标准目录和文件,rootfs就是不同操作系统的发行版</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="C:\Users\CodeLorin\Desktop\cloud\文档\img\image-20210513182104650.png" alt="image-20210513182104650"></p><h3 id="3-分层理解"><a href="#3-分层理解" class="headerlink" title="3.分层理解"></a>3.分层理解</h3><p>所有的docker镜像都始于一个基础镜像层,当修改和增加新的内容之后,就会再当今镜像层上,创建新的镜像层<img src= "/img/loading.gif" data-lazy-src="C:\Users\CodeLorin\Desktop\cloud\文档\img\image-20210513182549708.png" alt="image-20210513182549708"></p><p>docker镜像都是只读的,当容器启动后,一个新的可读写层被加载到镜像的顶部</p><p>(这一层就是我们说的镜像层,镜像层以下都叫做容器层)</p><h3 id="4-commit镜像"><a href="#4-commit镜像" class="headerlink" title="4.commit镜像"></a>4.commit镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker commit # 提交容器成为一个新的版本</span><br><span class="line">docker commit -m=&quot;描述信息&quot; -a=&quot;作者&quot; 容器id 目标镜像名称:[tag]</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动一个默认的tomcat</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 发现这个tomcat没有webapps应用</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 我自己做了一些操作</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 提交</span></span><br><span class="line">docker commit -a=&quot;codelorin&quot; -m=&quot;add webapps&quot; 容器id 目标镜像名称:版本</span><br></pre></td></tr></table></figure><h2 id="14-容器数据卷"><a href="#14-容器数据卷" class="headerlink" title="14.容器数据卷"></a>14.容器数据卷</h2><blockquote><p>数据可以持久化</p><p>Mysql的数据可以储存在本地</p><p>容器之间可以有一个数据共享的功能</p></blockquote><h3 id="1-使用"><a href="#1-使用" class="headerlink" title="1.使用"></a>1.使用</h3><blockquote><p>直接使用命令挂载</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -v 主机目录:容器目录</span><br></pre></td></tr></table></figure><h3 id="2-实战同步mysql"><a href="#2-实战同步mysql" class="headerlink" title="2.实战同步mysql"></a>2.实战同步mysql</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:5.7</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动mysql</span></span><br><span class="line">docker run -d -p 3306:3306 -v /home/mysql/conf:/etc/mysql/conf.d -v /home/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=密码 --name mysql5.7 mysql:5.7</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash">-d 后台</span></span><br><span class="line">-p 端口映射</span><br><span class="line">-v 卷挂载</span><br><span class="line">-e 环境配置</span><br><span class="line">--name 名字</span><br></pre></td></tr></table></figure><h3 id="3-具名挂载和匿名挂载"><a href="#3-具名挂载和匿名挂载" class="headerlink" title="3.具名挂载和匿名挂载"></a>3.具名挂载和匿名挂载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 匿名挂载 只写了容器内的路径</span></span><br><span class="line">-v 容器内路径</span><br><span class="line">docker run -d -P --name nginx01 -v /etc/nginx nginx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看所有数据卷的情况</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> docker volume</span></span><br><span class="line">create</span><br><span class="line">inspect 查看</span><br><span class="line">ls</span><br><span class="line">prune</span><br><span class="line">rm</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 具名挂载</span></span><br><span class="line">docker run -d -P --name nginx01 -v juming-nginx:/etc/nginx nginx</span><br></pre></td></tr></table></figure><blockquote><p>扩展 可以使用:ro :rw 改变读写权限</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p --name nginx -v juming-nginx:/etc/nginx:ro nginx</span><br><span class="line"><span class="meta">#</span><span class="bash"> ro只能通过宿主机改变,容器无法操作</span></span><br></pre></td></tr></table></figure><h2 id="15-DockerFile"><a href="#15-DockerFile" class="headerlink" title="15.DockerFile"></a>15.DockerFile</h2><h3 id="1-初见dockerfile"><a href="#1-初见dockerfile" class="headerlink" title="1.初见dockerfile"></a>1.初见dockerfile</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> [<span class="string">&quot;volume01&quot;</span>,<span class="string">&quot;volume02&quot;</span>]</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> <span class="built_in">echo</span> <span class="string">&quot;-----end-----&quot;</span></span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> /bin/bash</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -f dockerfile -t ./centos:1.0</span><br></pre></td></tr></table></figure><h3 id="2-数据卷容器"><a href="#2-数据卷容器" class="headerlink" title="2.数据卷容器"></a>2.数据卷容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name docker02 --volumes-from docker01</span><br><span class="line"><span class="meta">#</span><span class="bash"> 这样docker01 02会自动同步</span></span><br></pre></td></tr></table></figure><blockquote><p>容器数据卷的生命周期一直持续到没有容器使用为止</p></blockquote><h3 id="3-构建步骤"><a href="#3-构建步骤" class="headerlink" title="3.构建步骤"></a>3.构建步骤</h3><ul><li>编写一个dockerfile文件</li><li>docker build 构建成为一个镜像</li><li>docker run 运行镜像</li><li>docker push 发布镜像(Docker Hub或者阿里云镜像仓库)</li></ul><p>基础知识:</p><ul><li>指令是大写字母</li><li>#注释</li><li>每个指令都会创建提交一个新的镜像层</li></ul><blockquote><p>指令</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">FROM xxx  # 基础镜像,一切从这里开始构建</span><br><span class="line">MAINTAINER # 名字+邮箱</span><br><span class="line">RUN # docker构建需要运行的命令</span><br><span class="line">ADD # 步骤:tomcat镜像,tomcat压缩包</span><br><span class="line">WORKDIR # 镜像的工作目录</span><br><span class="line">VOLUME # 挂载的目录</span><br><span class="line">EXPOSE # 指定暴露端口</span><br><span class="line">CMD # 指定容器启动需要运行的命令,只有最后一个会生效,可被替代</span><br><span class="line">ENTRYPOINT # 指定容器运行的命令,可以追加命令</span><br><span class="line">ONBUILD # 当构建一个被继承Dockerfile 就会运行ONBUILD的指令,触发指令</span><br><span class="line">COPY # 类型ADD,将我们文件拷贝到镜像中</span><br><span class="line">ENV # 设置环境变量</span><br></pre></td></tr></table></figure><h3 id="4-实战构建centos"><a href="#4-实战构建centos" class="headerlink" title="4.实战构建centos"></a>4.实战构建centos</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">MAINTAINER</span> codelorin&lt;codelorin@<span class="number">163</span>.com&gt;</span><br><span class="line"><span class="keyword">ENV</span> MYPATH /<span class="keyword">user</span>/local</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> <span class="variable">$MYPATH</span></span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum -y install vim</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum -y install net-tools</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> <span class="built_in">echo</span> <span class="variable">$MYPATH</span></span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> <span class="built_in">echo</span> <span class="string">&quot;END!!&quot;</span></span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> /bin/bash</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -f dockerfile -t mycentos:0.1 .</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker history 容器id</span><br></pre></td></tr></table></figure><h3 id="5-CMD和ENTRYPOINT的区别"><a href="#5-CMD和ENTRYPOINT的区别" class="headerlink" title="5.CMD和ENTRYPOINT的区别"></a>5.CMD和ENTRYPOINT的区别</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CMD # 指定容器启动需要运行的命令,只有最后一个会生效,可被替代</span><br><span class="line">ENTRYPOINT # 指定容器运行的命令,可以追加命令</span><br></pre></td></tr></table></figure><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;ls&quot;</span>,<span class="string">&quot;-a&quot;</span>]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run id -l</span><br><span class="line"><span class="meta">#</span><span class="bash"> 报错CMD使用-l替代了ls-a</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ENTRYPOINT则会在末尾追加-l</span></span><br></pre></td></tr></table></figure><h3 id="6-制作tomcat镜像"><a href="#6-制作tomcat镜像" class="headerlink" title="6.制作tomcat镜像"></a>6.制作tomcat镜像</h3><h4 id="1-准备tomcat-jdk压缩包"><a href="#1-准备tomcat-jdk压缩包" class="headerlink" title="1.准备tomcat,jdk压缩包"></a>1.准备tomcat,jdk压缩包</h4><h4 id="2-编写dockerfile-官方建议-Dockerfile"><a href="#2-编写dockerfile-官方建议-Dockerfile" class="headerlink" title="2.编写dockerfile 官方建议:Dockerfile"></a>2.编写dockerfile 官方建议:Dockerfile</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">MAINTAINER</span> codelorin&lt;codelorin@<span class="number">163</span>.com&gt;</span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> readme.md /user/<span class="built_in">local</span>/readme.md</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> jdk.tar.gz</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> tomcat.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum -y install vim</span></span><br><span class="line"><span class="keyword">ENV</span> MYPATH /<span class="keyword">user</span>/local</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> <span class="variable">$MYPATH</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> JAVA_HOME /<span class="keyword">user</span>/local/jdk1.<span class="number">8</span></span><br><span class="line"><span class="keyword">ENV</span> CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line"><span class="keyword">ENV</span> CATALINA_HOME /<span class="keyword">user</span>/local/apache-tomcat</span><br><span class="line"><span class="keyword">ENV</span> CATALINA_BASH /<span class="keyword">user</span>/local/apache-tomcat</span><br><span class="line"><span class="keyword">ENV</span> PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin</span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> /user/<span class="built_in">local</span>/apache-tomcat/bin/startup.sh &amp;&amp; tail -F /usr/<span class="built_in">local</span>/apache-tomcat/bin/logs/catalina.out</span></span><br></pre></td></tr></table></figure><h3 id="7-Docker-Hub发布镜像"><a href="#7-Docker-Hub发布镜像" class="headerlink" title="7.Docker-Hub发布镜像"></a>7.Docker-Hub发布镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker login -u bylorin -p xxx</span><br><span class="line">docker tag id codelorin/tomcat:1.0</span><br><span class="line">docker push codelorin/tomcat</span><br></pre></td></tr></table></figure><h3 id="8-阿里云发布镜像"><a href="#8-阿里云发布镜像" class="headerlink" title="8.阿里云发布镜像"></a>8.阿里云发布镜像</h3><blockquote><p>详见阿里云镜像官网</p></blockquote><h4 id="1-创建命名空间"><a href="#1-创建命名空间" class="headerlink" title="1.创建命名空间"></a>1.创建命名空间</h4><h4 id="2-创建容器镜像"><a href="#2-创建容器镜像" class="headerlink" title="2.创建容器镜像"></a>2.创建容器镜像</h4><h2 id="16-Docker网络"><a href="#16-Docker网络" class="headerlink" title="16.Docker网络"></a>16.Docker网络</h2><blockquote><p>待更新</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JQuery学习</title>
      <link href="posts/7f23f4f286a7/"/>
      <url>posts/7f23f4f286a7/</url>
      
        <content type="html"><![CDATA[<h1 id="JQuery"><a href="#JQuery" class="headerlink" title="JQuery"></a>JQuery</h1><h2 id="一-语法"><a href="#一-语法" class="headerlink" title="一.语法"></a>一.语法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(selector).action()</span><br><span class="line">$(操作的对象).action()</span><br></pre></td></tr></table></figure><ul><li>$(this).hide() - 隐藏当前元素</li><li>$(“p”).hide() - 隐藏所有 <p> 元素</li><li>$(“p.test”).hide() - 隐藏所有 class=”test” 的 <p> 元素</li><li>$(“#test”).hide() - 隐藏 id=”test” 的元素</li></ul><h2 id="二-文档就绪"><a href="#二-文档就绪" class="headerlink" title="二.文档就绪"></a>二.文档就绪</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// 开始写 jQuery 代码...</span></span><br><span class="line"> </span><br><span class="line">&#125;);</span><br><span class="line">使得dom树已经加载完成</span><br><span class="line"></span><br><span class="line">等价于</span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// 开始写 jQuery 代码...</span></span><br><span class="line"> </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>对比js</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210317153303893.png" alt="image-20210317153303893"></p><h2 id="三-基础使用"><a href="#三-基础使用" class="headerlink" title="三.基础使用"></a>三.基础使用</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.0/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">&quot;button&quot;</span>).click(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">&quot;p&quot;</span>).hide();</span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>这是一个标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是另一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><table><thead><tr><th>$(“*”)</th><th>选取所有元素</th><th><a href="https://www.runoob.com/try/try.php?filename=tryjquery_sel_all2">在线实例</a></th></tr></thead><tbody><tr><td>$(this)</td><td>选取当前 HTML 元素</td><td><a href="https://www.runoob.com/try/try.php?filename=tryjquery_sel_this">在线实例</a></td></tr><tr><td>$(“p.intro”)</td><td>选取 class 为 intro 的 <p> 元素</td><td><a href="https://www.runoob.com/try/try.php?filename=tryjquery_sel_pclass">在线实例</a></td></tr><tr><td>$(“p:first”)</td><td>选取第一个 <p> 元素</td><td><a href="https://www.runoob.com/try/try.php?filename=tryjquery_sel_pfirst">在线实例</a></td></tr><tr><td>$(“ul li:first”)</td><td>选取第一个 <ul> 元素的第一个 <li> 元素</td><td><a href="https://www.runoob.com/try/try.php?filename=tryjquery_sel_ullifirst">在线实例</a></td></tr><tr><td>$(“ul li:first-child”)</td><td>选取每个 <ul> 元素的第一个 <li> 元素</td><td><a href="https://www.runoob.com/try/try.php?filename=tryjquery_sel_ullifirstchild">在线实例</a></td></tr><tr><td>$(“[href]”)</td><td>选取带有 href 属性的元素</td><td><a href="https://www.runoob.com/try/try.php?filename=tryjquery_sel_hrefattr">在线实例</a></td></tr><tr><td>$(“a[target=’_blank’]”)</td><td>选取所有 target 属性值等于 “_blank” 的 <a> 元素</td><td><a href="https://www.runoob.com/try/try.php?filename=tryjquery_sel_hrefattrblank">在线实例</a></td></tr><tr><td>$(“a[target!=’_blank’]”)</td><td>选取所有 target 属性值不等于 “_blank” 的 <a> 元素</td><td><a href="https://www.runoob.com/try/try.php?filename=tryjquery_sel_hrefattrnotblank">在线实例</a></td></tr><tr><td>$(“:button”)</td><td>选取所有 type=”button” 的 <input> 元素 和 <button> 元素</td><td><a href="https://www.runoob.com/try/try.php?filename=tryjquery_sel_button2">在线实例</a></td></tr><tr><td>$(“tr:even”)</td><td>选取偶数位置的 <tr> 元素</td><td><a href="https://www.runoob.com/try/try.php?filename=tryjquery_sel_even">在线实例</a></td></tr><tr><td>$(“tr:odd”)</td><td>选取奇数位置的 <tr> 元素</td><td><a href="https://www.runoob.com/try/try.php?filename=tryjquery_sel_odd">在线实例</a></td></tr></tbody></table></li></ul><h2 id="四-Jquery的核心函数"><a href="#四-Jquery的核心函数" class="headerlink" title="四.Jquery的核心函数"></a>四.Jquery的核心函数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$(parm)</span><br><span class="line"><span class="number">1.</span>回调函数,dom树加载完成时,执行该函数</span><br><span class="line"><span class="number">2.</span>选择器</span><br><span class="line"><span class="number">3.</span>dom对象</span><br><span class="line"><span class="number">4.</span>html标签字符串</span><br><span class="line"></span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> </span><br><span class="line">   $(<span class="string">&#x27;#btn&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       alert($(<span class="built_in">this</span>).html())</span><br><span class="line">       $(<span class="string">&#x27;html内存或者选择其中一个&#x27;</span>).appendTO(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">   &#125;)</span><br><span class="line"> </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$.xxx()</span><br><span class="line"><span class="number">1.</span>$.each()</span><br><span class="line">隐式遍历数组</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">$.each(arr,<span class="function"><span class="keyword">function</span>(<span class="params">index,item</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(index,item)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="number">2.</span>$.trim()</span><br><span class="line">去除两端的空格</span><br></pre></td></tr></table></figure><h2 id="五-Jquery核心对象"><a href="#五-Jquery核心对象" class="headerlink" title="五.Jquery核心对象"></a>五.Jquery核心对象</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">size() length 长度</span><br><span class="line">[index] get(index)</span><br><span class="line">each()</span><br><span class="line">index()</span><br></pre></td></tr></table></figure><h2 id="六-选择器"><a href="#六-选择器" class="headerlink" title="六.选择器"></a>六.选择器</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;div&#x27;</span>).css(&#123;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//第一个</span></span><br><span class="line">$(<span class="string">&#x27;div:first&#x27;</span>).css(&#123;&#125;)</span><br><span class="line"><span class="comment">//最后一个</span></span><br><span class="line">$(<span class="string">&#x27;div:last&#x27;</span>).css(&#123;&#125;)</span><br><span class="line"><span class="comment">//不为</span></span><br><span class="line">$(<span class="string">&#x27;div:not(.box)&#x27;</span>).css(&#123;&#125;)</span><br><span class="line"><span class="comment">//文本输入框</span></span><br><span class="line">$(<span class="string">&#x27;:text&#x27;</span>).css(&#123;&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="七-方法"><a href="#七-方法" class="headerlink" title="七.方法"></a>七.方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$.each() 遍历数组或者对象</span><br><span class="line">$.trim() 去除空格 </span><br><span class="line">$.type(obj) 得到数据类型</span><br><span class="line">$.isArray(obj) </span><br><span class="line">$.isFunction(obj) </span><br><span class="line">$.parseJson(json) json转化为js的数组或者对象</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="八-位置方法"><a href="#八-位置方法" class="headerlink" title="八.位置方法"></a>八.位置方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">offset相对于页面</span><br><span class="line">position相对于父元素</span><br></pre></td></tr></table></figure><h2 id="五-事件"><a href="#五-事件" class="headerlink" title="五.事件"></a>五.事件</h2><table><thead><tr><th align="left">鼠标事件</th><th align="left">键盘事件</th><th align="left">表单事件</th><th align="left">文档/窗口事件</th></tr></thead><tbody><tr><td align="left"><a href="https://www.runoob.com/jquery/event-click.html">click</a></td><td align="left"><a href="https://www.runoob.com/jquery/event-keypress.html">keypress</a></td><td align="left"><a href="https://www.runoob.com/jquery/event-submit.html">submit</a></td><td align="left"><a href="https://www.runoob.com/jquery/event-load.html">load</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/jquery/event-dblclick.html">dblclick</a></td><td align="left"><a href="https://www.runoob.com/jquery/event-keydown.html">keydown</a></td><td align="left"><a href="https://www.runoob.com/jquery/event-change.html">change</a></td><td align="left"><a href="https://www.runoob.com/jquery/event-resize.html">resize</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/jquery/event-mouseenter.html">mouseenter</a></td><td align="left"><a href="https://www.runoob.com/jquery/event-keyup.html">keyup</a></td><td align="left"><a href="https://www.runoob.com/jquery/event-focus.html">focus</a></td><td align="left"><a href="https://www.runoob.com/jquery/event-scroll.html">scroll</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/jquery/event-mouseleave.html">mouseleave</a></td><td align="left"></td><td align="left"><a href="https://www.runoob.com/jquery/event-blur.html">blur</a></td><td align="left"><a href="https://www.runoob.com/jquery/event-unload.html">unload</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/jquery/event-hover.html">hover</a></td><td align="left"></td><td align="left"></td><td align="left"></td></tr></tbody></table><blockquote><p>常见的事件使用</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单击</span></span><br><span class="line">$(<span class="string">&quot;p&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 动作触发后执行的代码!!</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//双击</span></span><br><span class="line">$(<span class="string">&quot;p&quot;</span>).dblclick(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="built_in">this</span>).hide();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//当鼠标指针穿过元素时，会发生 mouseenter 事件。</span></span><br><span class="line">$(<span class="string">&quot;#p1&quot;</span>).mouseenter(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">&#x27;您的鼠标移到了 id=&quot;p1&quot; 的元素上!&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//当鼠标指针离开元素时，会发生 mouseleave 事件。</span></span><br><span class="line">$(<span class="string">&quot;#p1&quot;</span>).mouseleave(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">&quot;再见，您的鼠标离开了该段落。&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//当鼠标指针移动到元素上方，并按下鼠标按键时，会发生 mousedown 事件。</span></span><br><span class="line">$(<span class="string">&quot;#p1&quot;</span>).mousedown(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">&quot;鼠标在该段落上按下！&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//当在元素上松开鼠标按钮时，会发生 mouseup 事件。</span></span><br><span class="line">$(<span class="string">&quot;#p1&quot;</span>).mouseup(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">&quot;鼠标在段落上松开。&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//悬停</span></span><br><span class="line">$(<span class="string">&quot;#p1&quot;</span>).hover(</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">&quot;你进入了 p1!&quot;</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">&quot;拜拜! 现在你离开了 p1!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取焦点</span></span><br><span class="line">$(<span class="string">&quot;input&quot;</span>).focus(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="built_in">this</span>).css(<span class="string">&quot;background-color&quot;</span>,<span class="string">&quot;#cccccc&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//失去焦点</span></span><br><span class="line">$(<span class="string">&quot;input&quot;</span>).blur(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="built_in">this</span>).css(<span class="string">&quot;background-color&quot;</span>,<span class="string">&quot;#ffffff&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="六-效果"><a href="#六-效果" class="headerlink" title="六.效果"></a>六.效果</h2><h3 id="1-隐藏和显示"><a href="#1-隐藏和显示" class="headerlink" title="(1).隐藏和显示"></a>(1).隐藏和显示</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#hide&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">&quot;p&quot;</span>).hide();</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">$(<span class="string">&quot;#show&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">&quot;p&quot;</span>).show();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(selector).hide(speed,callback);</span><br><span class="line"></span><br><span class="line">$(selector).show(speed,callback);</span><br><span class="line">可选的 speed 参数规定隐藏/显示的速度，可以取以下值：<span class="string">&quot;slow&quot;</span>、<span class="string">&quot;fast&quot;</span> 或毫秒。</span><br><span class="line"></span><br><span class="line">第二个参数是过渡使用哪种缓动函数<span class="string">&quot;linear&quot;</span> 或者 <span class="string">&quot;swing&quot;</span></span><br><span class="line">可选的 callback 参数是隐藏或显示完成后所执行的函数名称</span><br><span class="line"></span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">&quot;.hidebtn&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">&quot;div&quot;</span>).hide(<span class="number">1000</span>,<span class="string">&quot;linear&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      alert(<span class="string">&quot;Hide() 方法已完成!&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过 jQuery，您可以使用 toggle() 方法来切换 hide() 和 show() 方法。</span></span><br><span class="line">$(<span class="string">&quot;button&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">&quot;p&quot;</span>).toggle();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="2-淡入淡出"><a href="#2-淡入淡出" class="headerlink" title="(2).淡入淡出"></a>(2).淡入淡出</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI框架学习</title>
      <link href="posts/21ed4f6cc7dd/"/>
      <url>posts/21ed4f6cc7dd/</url>
      
        <content type="html"><![CDATA[<h2 id="1-主要特点"><a href="#1-主要特点" class="headerlink" title="1.主要特点"></a>1.主要特点</h2><ul><li>性能优越</li><li>异步</li><li>开发效率高</li><li>自带开发文档</li></ul><h2 id="2-Pydantic"><a href="#2-Pydantic" class="headerlink" title="2.Pydantic"></a>2.Pydantic</h2><blockquote><p>基于python 类型提示来自定义数据验证,序列化和文档的库</p></blockquote><h2 id="3-Starlette"><a href="#3-Starlette" class="headerlink" title="3.Starlette"></a>3.Starlette</h2><blockquote><p>轻量级的ASGI框架/工具包,是构建高性能Asyncio服务的理想选择</p></blockquote><h2 id="4-ASGI"><a href="#4-ASGI" class="headerlink" title="4.ASGI"></a>4.ASGI</h2><ul><li>Uvicorn</li><li>Hypercorn</li><li>Daphne</li></ul><h2 id="5-Demo"><a href="#5-Demo" class="headerlink" title="5.Demo"></a>5.Demo</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"><span class="keyword">from</span> pydantic <span class="keyword">import</span> BaseModel</span><br><span class="line"></span><br><span class="line">app = FastAPI()  <span class="comment"># 这里不一定是app，名字随意</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CityInfo</span>(<span class="params">BaseModel</span>):</span></span><br><span class="line">    province: <span class="built_in">str</span></span><br><span class="line">    country: <span class="built_in">str</span></span><br><span class="line">    is_affected: <span class="type">Optional</span>[<span class="built_in">bool</span>] = <span class="literal">None</span>  <span class="comment"># 与bool的区别是可以不传，默认是null</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># @app.get(&#x27;/&#x27;)</span></span><br><span class="line"><span class="comment"># def hello_world():</span></span><br><span class="line"><span class="comment">#     return &#123;&#x27;hello&#x27;: &#x27;world&#x27;&#125;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># @app.get(&#x27;/city/&#123;city&#125;&#x27;)</span></span><br><span class="line"><span class="comment"># def result(city: str, query_string: Optional[str] = None):</span></span><br><span class="line"><span class="comment">#     return &#123;&#x27;city&#x27;: city, &#x27;query_string&#x27;: query_string&#125;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># @app.put(&#x27;/city/&#123;city&#125;&#x27;)</span></span><br><span class="line"><span class="comment"># def result(city: str, city_info: CityInfo):</span></span><br><span class="line"><span class="comment">#     return &#123;&#x27;city&#x27;: city, &#x27;country&#x27;: city_info.country, &#x27;is_affected&#x27;: city_info.is_affected&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">hello_world</span>():</span></span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;hello&#x27;</span>: <span class="string">&#x27;world&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&#x27;/city/&#123;city&#125;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">result</span>(<span class="params">city: <span class="built_in">str</span>, query_string: <span class="type">Optional</span>[<span class="built_in">str</span>] = <span class="literal">None</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;city&#x27;</span>: city, <span class="string">&#x27;query_string&#x27;</span>: query_string&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.put(<span class="params"><span class="string">&#x27;/city/&#123;city&#125;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">result</span>(<span class="params">city: <span class="built_in">str</span>, city_info: CityInfo</span>):</span></span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;city&#x27;</span>: city, <span class="string">&#x27;country&#x27;</span>: city_info.country, <span class="string">&#x27;is_affected&#x27;</span>: city_info.is_affected&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动命令  uvicorn hello_world:app --reload</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Python </category>
          
          <category> FastAPI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> FastAPI </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql数据库</title>
      <link href="posts/c40ae4b5eafd/"/>
      <url>posts/c40ae4b5eafd/</url>
      
        <content type="html"><![CDATA[<h2 id="1-数据库介绍"><a href="#1-数据库介绍" class="headerlink" title="1.数据库介绍"></a>1.数据库介绍</h2><blockquote><p>数据库是安装在操作系统,可以系统性的存储大量数据的软件.</p><p>作用:存储数据,管理数据</p></blockquote><h2 id="2-数据库的分类"><a href="#2-数据库的分类" class="headerlink" title="2.数据库的分类"></a>2.数据库的分类</h2><ul><li><p>SQL 关系型数据库</p><ul><li>Mysql ,Ocacle,Sql Server,DB2,SQLite</li><li>通过表和表,列和列的关系进行数据的存储</li></ul></li><li><p>NOSQL 非关系型数据库</p><ul><li>Redis,MongDB</li><li>非关系型数据库,对象存储,类型JSON或者字典方式存储数据</li></ul></li></ul><h2 id="3-命令行初见Mysql"><a href="#3-命令行初见Mysql" class="headerlink" title="3.命令行初见Mysql"></a>3.命令行初见Mysql</h2><h3 id="1-登录"><a href="#1-登录" class="headerlink" title="1.登录"></a>1.登录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p123456</span><br><span class="line">//-u用户名 -p密码</span><br></pre></td></tr></table></figure><p>命令都是以;结尾的</p><h3 id="2-查看数据库"><a href="#2-查看数据库" class="headerlink" title="2.查看数据库"></a>2.查看数据库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><h3 id="3-切换数据库"><a href="#3-切换数据库" class="headerlink" title="3.切换数据库"></a>3.切换数据库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use xxx;</span><br></pre></td></tr></table></figure><h3 id="4-查看数据库中的所有表"><a href="#4-查看数据库中的所有表" class="headerlink" title="4.查看数据库中的所有表"></a>4.查看数据库中的所有表</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure><h3 id="5-显示数据库中所有表的消息"><a href="#5-显示数据库中所有表的消息" class="headerlink" title="5.显示数据库中所有表的消息"></a>5.显示数据库中所有表的消息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">describe student;</span><br></pre></td></tr></table></figure><h3 id="6-退出"><a href="#6-退出" class="headerlink" title="6.退出"></a>6.退出</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit;</span><br></pre></td></tr></table></figure><h2 id="4-操作数据库"><a href="#4-操作数据库" class="headerlink" title="4.操作数据库"></a>4.操作数据库</h2><blockquote><p>小提示,如果你的表名或者字段是一个特殊字符需要用``包起来</p><p>数据库-&gt;数据表&gt;数据</p></blockquote><h3 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1.创建数据库"></a>1.创建数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE hello;</span><br><span class="line">CREATE DATABASE IF NOT EXISTS hello;</span><br></pre></td></tr></table></figure><h3 id="2-删除数据库"><a href="#2-删除数据库" class="headerlink" title="2.删除数据库"></a>2.删除数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP DATABASE IF EXISTS hello;</span><br></pre></td></tr></table></figure><h2 id="5-数据库的列类型"><a href="#5-数据库的列类型" class="headerlink" title="5.数据库的列类型"></a>5.数据库的列类型</h2><blockquote><p>数值</p></blockquote><table><thead><tr><th align="center">名称</th><th align="center">存储数据的大小</th><th align="center">占用的字节大小</th></tr></thead><tbody><tr><td align="center">tinyint</td><td align="center">十分小的数据</td><td align="center">1</td></tr><tr><td align="center">smallint</td><td align="center">较小的数据</td><td align="center">2</td></tr><tr><td align="center">mediumint</td><td align="center">中等大小的数据</td><td align="center">3</td></tr><tr><td align="center">int</td><td align="center">标准的整数(常用)</td><td align="center">4</td></tr><tr><td align="center">bigint</td><td align="center">较大的数据</td><td align="center">8</td></tr><tr><td align="center">float</td><td align="center">浮点数</td><td align="center">4</td></tr><tr><td align="center">double</td><td align="center">浮点数(精度问题)</td><td align="center">8</td></tr><tr><td align="center">decimal</td><td align="center">字符串形式的浮点数(金融)</td><td align="center">9</td></tr></tbody></table><blockquote><p>字符串</p></blockquote><table><thead><tr><th align="center">名称</th><th align="center">特点</th><th align="center">长度范围</th></tr></thead><tbody><tr><td align="center">char</td><td align="center">字符串固定大小的</td><td align="center">0-255</td></tr><tr><td align="center">varchar</td><td align="center">可变字符串(常用)</td><td align="center">0-65535</td></tr><tr><td align="center">tinytext</td><td align="center">微型文本</td><td align="center">2^8-1</td></tr><tr><td align="center">text</td><td align="center">文本串</td><td align="center">2^16-1</td></tr></tbody></table><blockquote><p>时间日期</p></blockquote><table><thead><tr><th align="center">名称</th><th align="center">格式</th></tr></thead><tbody><tr><td align="center">date</td><td align="center">YYYY-MM-DD</td></tr><tr><td align="center">time</td><td align="center">HH:MM:SS</td></tr><tr><td align="center">datetime</td><td align="center">YYYY-MM-DD HH:MM:SS(常用)</td></tr><tr><td align="center">timestamp</td><td align="center">时间戳(1970.1.1到现在的毫秒数 常用)</td></tr></tbody></table><blockquote><p>null</p></blockquote><ul><li>没有值,未知</li><li>==注意,不要使用NULL进行运算</li></ul><h2 id="6-数据库的字段属性"><a href="#6-数据库的字段属性" class="headerlink" title="6.数据库的字段属性"></a>6.数据库的字段属性</h2><p>Unsigned:</p><ul><li>无符号的整数</li><li>声明了该列不能声明为负数</li></ul><p>zerofill:</p><ul><li>0填充</li><li>不足的位数,使用0来填充,int(3), 5-&gt;005</li></ul><p>自增:</p><pre><code>*  自动在是一条记录的基础上+1*  通常来设置唯一的主键 index,必须是整数类型*  可以自定义设置主键初始值和步长</code></pre><p>非空 NULL not null:</p><ul><li> 如果不给他赋值,就会报错</li></ul><p>默认:</p><ul><li>设置默认的值</li></ul><p><strong>规范</strong></p><p>每个表都必须存在以下五个字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id 主键</span><br><span class="line">&#96;version&#96; 乐观锁</span><br><span class="line">is_delete 伪删除</span><br><span class="line">gmt_create 创建时间</span><br><span class="line">gmt_update 修改时间</span><br></pre></td></tr></table></figure><h2 id="7-创建数据表"><a href="#7-创建数据表" class="headerlink" title="7.创建数据表"></a>7.创建数据表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS &#96;student&#96;(</span><br><span class="line">   &#96;id&#96; INT(4) NOT NULL AUTO_INCREMENT COMMENT &#39;学号&#39;,</span><br><span class="line">   &#96;name&#96; VARCHAR(20) NOT NULL DEFAULT &#39;匿名&#39; COMMENT &#39;姓名&#39;,</span><br><span class="line">   &#96;pwd&#96; VARCHAR(20) NOT NULL DEFAULT &#39;123456&#39; COMMENT &#39;密码&#39;,</span><br><span class="line">   &#96;birthday&#96; DATETIME DEFAULT NULL COMMENT &#39;出事日期&#39;,</span><br><span class="line">   PRIMARY KEY ( &#96;id&#96; )</span><br><span class="line">)ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;</span><br><span class="line"></span><br><span class="line">CREATE TABLE [IF NOT EXISTS] &#96;表名&#96;(</span><br><span class="line">&#96;字段名&#96; 列类型 [属性] [索引] [注释],</span><br><span class="line">)[表类型][字符集设置][注释]</span><br></pre></td></tr></table></figure><blockquote><p>查看创建数据库的语句</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW CREATE DATABASE xxx;</span><br></pre></td></tr></table></figure><blockquote><p>查看创建数据表的定义语句</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">SHOW CREATE TABLE xxx;</span><br></pre></td></tr></table></figure><blockquote><p>显示表的结构</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DESC xxx;</span><br></pre></td></tr></table></figure><h2 id="8-数据库引擎的区别"><a href="#8-数据库引擎的区别" class="headerlink" title="8.数据库引擎的区别"></a>8.数据库引擎的区别</h2><ul><li>INNODB 默认使用</li><li>MYISAM 早些年使用的</li></ul><table><thead><tr><th align="center">特性</th><th align="center">MYISAM</th><th align="center">INNODB</th></tr></thead><tbody><tr><td align="center">事务支持</td><td align="center">不支持</td><td align="center">支持</td></tr><tr><td align="center">数据行锁定</td><td align="center">不支持</td><td align="center">支持</td></tr><tr><td align="center">外键约束</td><td align="center">不支持</td><td align="center">支持</td></tr><tr><td align="center">全文索引</td><td align="center">支持</td><td align="center">不支持</td></tr><tr><td align="center">表空间的大小</td><td align="center">较小</td><td align="center">较大，为两倍</td></tr></tbody></table><p>常规使用操作：</p><ul><li>MYISAM 节约空间，速度较快</li><li>INNODB 安全性高，事务的处理，多表多用户操作</li></ul><blockquote><p>在物理空间存在的位置</p></blockquote><p>所有数据库文件都存储在data目录下,一个文件夹对应一个数据库</p><p>本质还是文件存储</p><p>MySQL引擎在物理文件上的区别</p><ul><li>INNODB 在数据库表中只有一个*.frm文件，以及上级目录下的ibdata1文件</li><li>MYISAM 对应文件<ul><li>*.frm - 表结构的定义文件</li><li>*.MYD 数据文件(data)</li><li>*.MYI  索引文件(index)</li></ul></li></ul><blockquote><p>设置数据库的字符集</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CHARSET&#x3D;utf8</span><br></pre></td></tr></table></figure><h2 id="9-修改和删除表"><a href="#9-修改和删除表" class="headerlink" title="9.修改和删除表"></a>9.修改和删除表</h2><h3 id="1-修改表名"><a href="#1-修改表名" class="headerlink" title="1.修改表名"></a>1.修改表名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE student RENAME lorin</span><br></pre></td></tr></table></figure><h3 id="2-增加表的字段"><a href="#2-增加表的字段" class="headerlink" title="2.增加表的字段"></a>2.增加表的字段</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE student ADD age INT(11)</span><br></pre></td></tr></table></figure><h3 id="3-修改表的字段"><a href="#3-修改表的字段" class="headerlink" title="3.修改表的字段"></a>3.修改表的字段</h3><ul><li>重命名</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE student CHANGE age age1 int(1)</span><br></pre></td></tr></table></figure><ul><li>修改约束</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE student MODIFY age VARVHAR(11)</span><br></pre></td></tr></table></figure><h3 id="4-删除表的字段"><a href="#4-删除表的字段" class="headerlink" title="4.删除表的字段"></a>4.删除表的字段</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE student DROP age</span><br></pre></td></tr></table></figure><h3 id="5-删除表"><a href="#5-删除表" class="headerlink" title="5.删除表"></a>5.删除表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE IF EXISTS student</span><br></pre></td></tr></table></figure><p>注意:</p><ul><li>字段名为了安全使用``包裹起来</li><li>注释     –</li><li>sql关键字大小写不敏感,建议大家写小写</li></ul><h2 id="10-MySQL数据库管理"><a href="#10-MySQL数据库管理" class="headerlink" title="10.MySQL数据库管理"></a>10.MySQL数据库管理</h2><h3 id="1-外键-了解即可"><a href="#1-外键-了解即可" class="headerlink" title="1.外键(了解即可)"></a>1.外键(了解即可)</h3><blockquote><p>保证数据库的一致性,但是设置数据库层的外键会导致逻辑混乱.建议在应用层解决.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 定义外键key</span><br><span class="line">KEY &#96;FK_gradeid&#96; (&#96;gradeid&#96;)</span><br><span class="line">-- 给这个外键添加约束(执行引用) 到哪个表的那个键</span><br><span class="line">CONSTRAINT &#96;FK_gradeid&#96; FOREIGN KEY ( &#96;gradeid&#96; ) REFERENCES &#96;grade&#96; ( &#96;gradeid&#96; ) </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 创建好表折后添加</span><br><span class="line">ALTER TABLE &#96;student&#96; ADD CONSTRAINT &#96;FK_gradeid&#96; FOREIGN KEY(&#96;gradeid&#96;) REFERENCES &#96;grade&#96;(&#96;gradeid&#96;)</span><br></pre></td></tr></table></figure><h3 id="2-DML语言-全部记住"><a href="#2-DML语言-全部记住" class="headerlink" title="2.DML语言(全部记住)"></a>2.DML语言(全部记住)</h3><h4 id="1-添加"><a href="#1-添加" class="headerlink" title="1.添加"></a>1.添加</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- INSERT INTO 表名([字段1,字段2]) VALUES(&#39;值1&#39;,&#39;值2&#39;)</span><br><span class="line">-- 插入一条</span><br><span class="line">INSERT INTO &#96;grade&#96; (&#96;gradename&#96;) VALUES(&#39;大四&#39;)</span><br><span class="line">-- 插入多条</span><br><span class="line">INSERT INTO &#96;grade&#96; (&#96;gradename&#96;) VALUES(&#39;大一&#39;),(&#39;大三&#39;)</span><br></pre></td></tr></table></figure><h4 id="2-更新"><a href="#2-更新" class="headerlink" title="2.更新"></a>2.更新</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-- UPDATE &#96;表名&#96; SET &#96;字段&#96;&#x3D;&#39;codelorin&#39; WHERE 字段&#x3D;1;</span><br><span class="line">UPDATE &#96;grade&#96; SET &#96;gradename&#96;&#x3D;&#39;codelorin&#39; WHERE gradeid&#x3D;1;</span><br><span class="line">-- UPDATE &#96;表名&#96; SET &#96;字段&#96;&#x3D;&#39;codelorin&#39;</span><br><span class="line">-- 这样会修改所有的值</span><br><span class="line"></span><br><span class="line">-- 修改多个</span><br><span class="line">UPDATE &#96;grade&#96; SET &#96;gradename&#96;&#x3D;&#39;codelorin&#39;,xxx&#x3D;xxx WHERE gradeid&#x3D;1;</span><br></pre></td></tr></table></figure><p>where子句</p><table><thead><tr><th align="center">操作符</th><th align="center">含义</th><th align="center">范围</th><th align="center">结果</th></tr></thead><tbody><tr><td align="center">=</td><td align="center">等于</td><td align="center">5=6</td><td align="center">false</td></tr><tr><td align="center">&lt;&gt;或者!=</td><td align="center">不低于</td><td align="center">5&lt;&gt;6</td><td align="center">true</td></tr><tr><td align="center">&gt;</td><td align="center">大于</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">&lt;</td><td align="center">小于</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">&lt;=</td><td align="center">小于等于</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">BETWEEN…AND…</td><td align="center">在某个范围内</td><td align="center">[2,5]闭区间</td><td align="center"></td></tr><tr><td align="center">AND</td><td align="center">&amp;&amp;</td><td align="center">5&gt;1and 1&gt;2</td><td align="center">false</td></tr><tr><td align="center">OR</td><td align="center">||</td><td align="center"></td><td align="center"></td></tr></tbody></table><p>注意:</p><ul><li>数据库的列尽量带上``</li><li>条件没有指定会修改所有的列</li><li>value是一个具体的值也可以是变量(一般用于时间)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">UPDATE &#96;grade&#96; SET &#96;birthday&#96;&#x3D;CURRENT_TIME WHERE gradeid&#x3D;1;</span><br><span class="line">-- CURRENT_TIME当前时间</span><br></pre></td></tr></table></figure><h4 id="3-删除"><a href="#3-删除" class="headerlink" title="3.删除"></a>3.删除</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-- </span><br><span class="line">DELETE FROM grade WHERE gradeid &#x3D;1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 删除所有数据</span><br><span class="line">TRUNCATE &#96;grade&#96;</span><br><span class="line">TRUNCATE &#96;表名&#96;</span><br><span class="line">-- 删除所有数据</span><br><span class="line">DELETE FROM grade</span><br></pre></td></tr></table></figure><blockquote><p>DELETE和TRUNCATE的区别</p></blockquote><ul><li>相同点:都能删除数据,都不会删除表结构</li><li>不同点:<ul><li>TRUNCATE重新设置自增列 计数器会归零</li><li>TRUNCATE 不会影响事务</li></ul></li></ul><h3 id="3-DQL查询数据-最重点"><a href="#3-DQL查询数据-最重点" class="headerlink" title="3.DQL查询数据(最重点)"></a>3.DQL查询数据(最重点)</h3><blockquote><p>Data Query LANGUAGE: 数据库查询语言</p></blockquote><ul><li>最重要,频率最高的语句</li></ul><blockquote><p>完整语法</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select xxx from xxx</span><br><span class="line">join</span><br><span class="line">where</span><br><span class="line">group by 分组</span><br><span class="line">having过滤</span><br><span class="line">order by 排序</span><br><span class="line">limit限制</span><br></pre></td></tr></table></figure><h4 id="1-全部"><a href="#1-全部" class="headerlink" title="1.全部"></a>1.全部</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM &#96;subject&#96;</span><br></pre></td></tr></table></figure><h4 id="2-制定字段"><a href="#2-制定字段" class="headerlink" title="2.制定字段"></a>2.制定字段</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM &#96;subject&#96; WHERE &#96;gradeid&#96;&#x3D;1</span><br></pre></td></tr></table></figure><h4 id="3-别名"><a href="#3-别名" class="headerlink" title="3. 别名"></a>3. 别名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- AS起别名</span><br><span class="line">SELECT &#96;studentno&#96; AS 学号,&#96;loginpwd&#96; AS 密码 FROM student </span><br></pre></td></tr></table></figure><h4 id="4-函数"><a href="#4-函数" class="headerlink" title="4.函数"></a>4.函数</h4><blockquote><p>Concat 连接字符串</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT CONCAT(&#39;姓名:&#39;,studentname) AS 新名字 FROM student</span><br></pre></td></tr></table></figure><blockquote><p>系统版本</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT VERSION()</span><br></pre></td></tr></table></figure><h4 id="5-变量"><a href="#5-变量" class="headerlink" title="5.变量"></a>5.变量</h4><blockquote><p>自增</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT @@auto_increment_increment FROM &#96;grade&#96; </span><br></pre></td></tr></table></figure><h4 id="6-去重"><a href="#6-去重" class="headerlink" title="6.去重"></a>6.去重</h4><blockquote><p>distinct</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT &#96;studentno&#96; FROM result</span><br></pre></td></tr></table></figure><h4 id="7-where条件子句"><a href="#7-where条件子句" class="headerlink" title="7.where条件子句"></a>7.where条件子句</h4><blockquote><p>逻辑运算符</p></blockquote><ul><li>and &amp;&amp;</li><li>or ||</li><li>not !</li></ul><h4 id="8-模糊查询"><a href="#8-模糊查询" class="headerlink" title="8.模糊查询"></a>8.模糊查询</h4><blockquote><p>重点</p></blockquote><table><thead><tr><th align="center">运算符</th><th align="center">语法</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">IS NULL</td><td align="center">a is null</td><td align="center">如果操作符为NULL,结果为真</td></tr><tr><td align="center">IS NOT NULL</td><td align="center">a is not null</td><td align="center">如果操作符不为NULL,结果为真</td></tr><tr><td align="center">BETWEEN</td><td align="center">a between b and c</td><td align="center">若a在b和c之间,则结果为真</td></tr><tr><td align="center">LIKE</td><td align="center">a like b</td><td align="center">a相似匹配b</td></tr><tr><td align="center">IN</td><td align="center">a in(a1,a2)</td><td align="center">假设a在a1或a2其中的某一个,结果为真</td></tr></tbody></table><blockquote><p>like结合 %(匹配0到任意一个字符) _(一个字符)</p></blockquote><h4 id="9-联表查询"><a href="#9-联表查询" class="headerlink" title="9.联表查询"></a>9.联表查询</h4><blockquote><p>JOIN</p></blockquote><blockquote><p>on和where的区别</p><p>on 是关联条件,where 则是查询条件 </p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/20210429234339.png" alt="image-20210429234331783"></p><ul><li><p>inner join</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT s.studentno,&#96;studentname&#96;,&#96;subjectno&#96;,&#96;studentresult&#96; FROM student as s INNER JOIN result as r WHERE s.studentno&#x3D;r.studentno</span><br></pre></td></tr></table></figure></li><li><p>left join</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT s.studentno,&#96;studentname&#96;,&#96;subjectno&#96;,&#96;studentresult&#96; FROM student as s left JOIN result as r ON s.studentno&#x3D;r.studentno</span><br></pre></td></tr></table></figure></li><li><p>right join</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT s.studentno,&#96;studentname&#96;,&#96;subjectno&#96;,&#96;studentresult&#96; FROM student as s RIGHT JOIN result as r ON s.studentno&#x3D;r.studentno</span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th align="center">操作</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">inner join</td><td align="center">两个表的数据都可以拿到</td></tr><tr><td align="center">left join</td><td align="center">会从左表返回所有的值,即使右表中没有匹配</td></tr><tr><td align="center">right join</td><td align="center">会从右表中返回所有的值,即使左表没有匹配</td></tr></tbody></table><blockquote><p>没有匹配实践</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT s.studentno,&#96;studentname&#96;,&#96;subjectno&#96;,&#96;studentresult&#96; FROM student as s RIGHT JOIN result as r ON s.studentno&#x3D;r.studentno where studentresult is NULL</span><br></pre></td></tr></table></figure><h4 id="10-自连接"><a href="#10-自连接" class="headerlink" title="10.自连接"></a>10.自连接</h4><blockquote><p>自己的表和自己的表连接,核心:一张表拆为两张一样的表即可</p></blockquote><p>父类</p><table><thead><tr><th align="center">categoryid</th><th align="center">categoryname</th></tr></thead><tbody><tr><td align="center">2</td><td align="center">信息技术</td></tr><tr><td align="center">3</td><td align="center">软件开发</td></tr><tr><td align="center">5</td><td align="center">美术设计</td></tr></tbody></table><p>子类</p><table><thead><tr><th align="center">pid</th><th align="center">categoryid</th><th align="center">categoryname</th></tr></thead><tbody><tr><td align="center">3</td><td align="center">4</td><td align="center">数据库</td></tr><tr><td align="center">2</td><td align="center">8</td><td align="center">办公信息</td></tr><tr><td align="center">3</td><td align="center">6</td><td align="center">web开发</td></tr><tr><td align="center">5</td><td align="center">7</td><td align="center">pas技术</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT a.&#96;categoryname&#96; as &#39;father&#39;,b.&#96;categoryname&#96; as &#39;son&#39; FROM &#96;category&#96; as a,&#96;category&#96; as b WHERE a.&#96;categoryid&#96;&#x3D;b.&#96;pid&#96;</span><br></pre></td></tr></table></figure><h4 id="11-分页和排序"><a href="#11-分页和排序" class="headerlink" title="11.分页和排序"></a>11.分页和排序</h4><blockquote><p>order by ASC升序 DESC降序</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * from result ORDER BY studentresult DESC</span><br></pre></td></tr></table></figure><blockquote><p>分页 limit(下标,要几个)</p><p>规律: (n-1)*page size,page size</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT * from result</span><br><span class="line">LIMIT 0,2</span><br></pre></td></tr></table></figure><h4 id="12-子查询"><a href="#12-子查询" class="headerlink" title="12.子查询"></a>12.子查询</h4><blockquote><p>where这个值是计算出来的</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select xx from xx where xx&#x3D;(</span><br><span class="line">select xx form xx where </span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="13-函数"><a href="#13-函数" class="headerlink" title="13.函数"></a>13.函数</h4><blockquote><p>绝对值</p></blockquote><p>​    ABS()</p><blockquote><p>向上取整</p></blockquote><p>​    CEILING() </p><blockquote><p>向下取整</p></blockquote><p>​    FLOOR()</p><blockquote><p>0-1的随机数</p></blockquote><p>​    RAND()</p><blockquote><p>判断一个数的符号 负数返回-1正数返回1</p></blockquote><p>​    SIGN()</p><blockquote><p>字符串长度 </p></blockquote><p>​    CHAR_LENGTH()</p><blockquote><p>字符串拼接</p></blockquote><p>​    CONCAT()</p><blockquote><p>当前时间</p></blockquote><p> CURRENT_DATE()</p><blockquote><p>当前日期</p></blockquote><p>​    CURRENT()</p><blockquote><p>当前时间</p></blockquote><p>​    NOW()</p><blockquote><p>本地时间</p></blockquote><p>​    LOCALTIME()</p><h4 id="14-聚合函数"><a href="#14-聚合函数" class="headerlink" title="14.聚合函数"></a>14.聚合函数</h4><table><thead><tr><th align="center">函数名称</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">COUNT()</td><td align="center">计数</td></tr><tr><td align="center">SUM()</td><td align="center">求和</td></tr><tr><td align="center">AVG()</td><td align="center">平均值</td></tr><tr><td align="center">MAX()</td><td align="center">最大值</td></tr><tr><td align="center">MIN()</td><td align="center">最小值</td></tr></tbody></table><blockquote><p>count()</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">count(xx) 会忽略null</span><br><span class="line">count(*)  不会忽略null</span><br><span class="line">count(1)  不会忽略null</span><br></pre></td></tr></table></figure><blockquote><p>分组过滤 group by </p><p>having</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT studentno,SUM(studentresult) 总成绩 FROM &#96;result&#96; GROUP BY studentno HAVING studentno!&#x3D;1002</span><br></pre></td></tr></table></figure><h4 id="15-数据库级别的md5加密"><a href="#15-数据库级别的md5加密" class="headerlink" title="15.数据库级别的md5加密"></a>15.数据库级别的md5加密</h4><blockquote><p>md5(xxx)</p></blockquote><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>select 去重 字段 from 表</p><p>xx join 连接表 on 等值判断</p><p>where</p><p>group by 分组</p><p>having 过滤</p><p>order by 排序</p><p>limit 限制</p><h2 id="11-事务"><a href="#11-事务" class="headerlink" title="11.事务"></a>11.事务</h2><blockquote><p>要不都成功,要不都失败</p><p> 将一组sql放入一个批次中去执行</p></blockquote><blockquote><p>事务原则: ACID原则 脏读,幻读</p></blockquote><ul><li>原子性<ul><li>要不都成功,要不都失败</li></ul>A给B转账,B收到A转的钱,要不都成功,要不都失败</li><li>一致性<ul><li>事务前后的数据完整性要保持一致</li></ul>A有800元,B有200元无论怎么转,总价是1000</li><li>持久性<ul><li>事务结束后数据不随着外部原因导致数据丢失</li></ul>事务没有提交就恢复到原状,提交了就持久化到数据库</li><li>隔离性<ul><li>多个用户访问数据库时,为每个用户开启事务,事务间互相隔离</li></ul></li></ul><blockquote><p>隔离的问题</p></blockquote><p>脏读:</p><p>指一个事务读取了另外一个事务没有提交的数据</p><p>不可重复读:</p><p>一个事务多次读取结果不同,不一定是错误可能是场合不同</p><p>虚读(幻读):</p><p>一个事物读取别的事务插入的数据,导致前后读取不一致</p><p>事务在sql层面的操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">set autocommit &#x3D; -- 0 关闭事务</span><br><span class="line">set autocommit &#x3D; -- 1 开启事务(默认的)</span><br><span class="line"></span><br><span class="line">start transaction -- 标记一个事务的开启,一下执行的所有sql都在一个事务内</span><br><span class="line"></span><br><span class="line">insert xx</span><br><span class="line"></span><br><span class="line">-- 提交 持久化(成功)</span><br><span class="line">commit</span><br><span class="line">-- 回滚 回到原来的状态(失败)</span><br><span class="line">rollback</span><br><span class="line">-- 事务结束</span><br><span class="line">set autocommit &#x3D; 1 -- 自动提交</span><br><span class="line"></span><br><span class="line">-- 了解</span><br><span class="line">savepoint -- 设置一个事务的保存点</span><br><span class="line">rollback to savepoint -- 回滚到保存点</span><br><span class="line">release savepoint -- 撤销保存点</span><br></pre></td></tr></table></figure><h2 id="12-索引"><a href="#12-索引" class="headerlink" title="12.索引"></a>12.索引</h2><blockquote><p>索引是帮助mysql实现高效获取数据的<strong>数据结构</strong></p></blockquote><h3 id="1-索引的分类"><a href="#1-索引的分类" class="headerlink" title="1.索引的分类"></a>1.索引的分类</h3><ul><li>主键索引(PRIMARY KEY)<ul><li>唯一的标识,不可重复</li></ul></li><li>唯一索引(UNIQUE KEY)<ul><li>避免重复的列出现,唯一索引可以重复,多个列标识位</li></ul></li><li>常规索引(KEY/INDEX)<ul><li>默认的,index key关键字来设定</li></ul></li><li>全文索引(FullText)<ul><li>快速定位数据</li></ul></li></ul><p>用法:</p><p>索引名(列名)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table xxx add fulltext index &#96;studentName&#96; (&#96;studentName&#96;)</span><br></pre></td></tr></table></figure><h3 id="2-分析sql执行状况"><a href="#2-分析sql执行状况" class="headerlink" title="2.分析sql执行状况"></a>2.分析sql执行状况</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">explain xxxsql语句</span><br><span class="line">explain select * from xx where match(studentName) against(&#39;liu&#39;)</span><br></pre></td></tr></table></figure><blockquote><p>插入100万条数据测试</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE &#96;app_user&#96; (</span><br><span class="line">&#96;id&#96; BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT,</span><br><span class="line">&#96;name&#96; VARCHAR(50) DEFAULT &#39;&#39; COMMENT &#39;用户昵称&#39;,</span><br><span class="line">&#96;email&#96; VARCHAR(50) NOT NULL COMMENT &#39;用户邮箱&#39;,</span><br><span class="line">&#96;phone&#96; VARCHAR(20) DEFAULT &#39;&#39; COMMENT &#39;手机号&#39;,</span><br><span class="line">&#96;gender&#96; TINYINT(4) UNSIGNED DEFAULT 0 COMMENT &#39;性别（0：男;1:女）&#39;,</span><br><span class="line">&#96;password&#96; VARCHAR(100) NOT NULL COMMENT &#39;密码&#39;,</span><br><span class="line">&#96;age&#96; TINYINT(4) DEFAULT 0  COMMENT &#39;年龄&#39;,</span><br><span class="line">&#96;create_time&#96; DATETIME DEFAULT CURRENT_TIMESTAMP,</span><br><span class="line">&#96;update_time&#96; TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,</span><br><span class="line">PRIMARY KEY (&#96;id&#96;)</span><br><span class="line">) ENGINE&#x3D;INNODB DEFAULT CHARSET&#x3D;utf8 COMMENT &#x3D; &#39;app用户表&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line">CREATE FUNCTION mock_data()</span><br><span class="line">RETURNS INT</span><br><span class="line">BEGIN</span><br><span class="line">DECLARE num INT DEFAULT 1000000;</span><br><span class="line">DECLARE i INT DEFAULT 0;</span><br><span class="line">WHILE i&lt;num DO</span><br><span class="line">INSERT INTO &#96;app_user&#96;(&#96;name&#96;,&#96;email&#96;,&#96;phone&#96;,&#96;gender&#96;,&#96;PASSWORD&#96;,&#96;age&#96;)VALUES(CONCAT(&#39;用户&#39;,i),&#39;19224305@qq.com&#39;,123456789,FLOOR(RAND()*2),UUID(),FLOOR(RAND()*100));</span><br><span class="line">SET i&#x3D;i+1;</span><br><span class="line">END WHILE;</span><br><span class="line">RETURN i;</span><br><span class="line">END;</span><br><span class="line"></span><br><span class="line">SELECT mock_data() -- 执行此函数 生成一百万条数据</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 创建索引查看时间差别,数据结构yyds</span><br><span class="line">SELECT * FROM app_user WHERE &#96;name&#96;&#x3D;&#39;用户999999&#39;</span><br><span class="line">CREATE INDEX id_app_user_name ON app_user(&#96;name&#96;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>索引不是越多越好</li><li>不要对经常变动的数据增加索引</li><li>小数据的表不需要加索引</li><li>索引一般常用来查询的字段上</li></ul><blockquote><p>索引的数据结构</p></blockquote><p>Btree: InnoDB默认的数据类型</p><h2 id="13-权限管理"><a href="#13-权限管理" class="headerlink" title="13.权限管理"></a>13.权限管理</h2><h3 id="1-用户管理"><a href="#1-用户管理" class="headerlink" title="1.用户管理"></a>1.用户管理</h3><blockquote><p>本质是修改mysql下的user表</p></blockquote><ul><li>创建</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER lorin IDENTIFIED BY &#39;123456&#39;</span><br></pre></td></tr></table></figure><ul><li>修改当前用户</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set password &#x3D; password(&#39;123456&#39;)</span><br></pre></td></tr></table></figure><ul><li>修改制定用户</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set password for lorin&#x3D;password(&#39;123456&#39;)</span><br></pre></td></tr></table></figure><ul><li>修改用户名</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename user xxx to xxxx</span><br></pre></td></tr></table></figure><ul><li>授予用户全部权限</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO xxx</span><br></pre></td></tr></table></figure><ul><li>查询权限</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW GRANTS FOR root @localhost</span><br></pre></td></tr></table></figure><ul><li>撤销权限</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REMOVE ALL PRIVILEGES ON *.* FROM xxx</span><br></pre></td></tr></table></figure><h2 id="14-数据库的备份"><a href="#14-数据库的备份" class="headerlink" title="14.数据库的备份"></a>14.数据库的备份</h2><blockquote><p>保证重要的数据不丢失</p><p>数据转移</p></blockquote><p>数据库命令行备份</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -hlocalhost -uroot -p123456 数据库名称 表 &gt; D:&#x2F;1.sql</span><br></pre></td></tr></table></figure><p>数据库加载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">source d:&#x2F;1.sql</span><br><span class="line">mysql -uroot -p123456 库名&lt;备份文件</span><br></pre></td></tr></table></figure><h2 id="15-数据库的设计"><a href="#15-数据库的设计" class="headerlink" title="15.数据库的设计"></a>15.数据库的设计</h2><blockquote><p>当数据库比较复杂的时候</p></blockquote><p>设计数据库步骤:</p><ul><li>收集信息,分析需求<ul><li>用户表(用户登录注销,用户个人信息,写博客,创建分类)</li><li>分类表(文章分类,谁创建的)</li><li>文章表(文章的信息)</li><li>友链表(友链信息)</li></ul></li><li>标识实体(把需求落实到每个字段)</li><li>标识实体之间的关系<ul><li>写博客:user-&gt;blog</li><li>创建分类: user-&gt;category</li><li>关注:user-&gt;user</li><li>友链: links</li><li>评论: user-&gt;user-&gt;blog</li></ul></li></ul><h2 id="16-三大范式"><a href="#16-三大范式" class="headerlink" title="16.三大范式"></a>16.三大范式</h2><blockquote><p>数据规范化</p></blockquote><h3 id="1-第一范式"><a href="#1-第一范式" class="headerlink" title="1.第一范式"></a>1.第一范式</h3><blockquote><p>原子性:要求每一列都是不可分割的最小原子数据项</p></blockquote><h3 id="2-第二范式"><a href="#2-第二范式" class="headerlink" title="2.第二范式"></a>2.第二范式</h3><blockquote><p>前提满足第一范式</p><p>需要保证数据库的每一列都和主键相关,而不能只和主键的某一部分相关</p><p>每张表只做一件事</p></blockquote><h3 id="3-第三范式"><a href="#3-第三范式" class="headerlink" title="3.第三范式"></a>3.第三范式</h3><blockquote><p>满足第一,二范式</p><p>每一列数据都和主键直接相关而不能间接相关</p></blockquote><p>关联查询的表不能超过三张表</p><ul><li>数据库性能在某些情况更加重要</li><li>规范性</li><li>故意给表增加一些冗余的字段(多表-&gt;单表)</li><li>故意增加一些计算列(索引)</li></ul><h2 id="17-JDBC-重点"><a href="#17-JDBC-重点" class="headerlink" title="17.JDBC(重点)"></a>17.JDBC(重点)</h2><blockquote><p>数据库驱动</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/imgimgimage-20210430135328117.png" alt="image-20210430135328117"></p><h3 id="1-导入数据库驱动"><a href="#1-导入数据库驱动" class="headerlink" title="1.导入数据库驱动"></a>1.导入数据库驱动</h3><p>新建lib目录</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img@master/img/xxx.1ncl3xyml8e8.png" alt="image-20210430163719364"></p><p>可以展开即是导入成功</p><h3 id="2-代码demo"><a href="#2-代码demo" class="headerlink" title="2.代码demo"></a>2.代码demo</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codeloirn.jdbc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/1/30 16:40</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException </span>&#123;</span><br><span class="line">        <span class="comment">//1.加载驱动(固定写法)</span></span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.用户信息和url</span></span><br><span class="line">        String url = <span class="string">&quot;jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&quot;</span>;</span><br><span class="line">        <span class="comment">//3.连接成功,数据库对象</span></span><br><span class="line">        String username = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        String password = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        Connection connection = DriverManager.getConnection(url, username, password);</span><br><span class="line">        <span class="comment">//4.执行sql的对象</span></span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line">        <span class="comment">//5.执行sql的对象去执行sql,如果存在结果则返回</span></span><br><span class="line">        String sql = <span class="string">&quot;SELECT * FROM users&quot;</span>;</span><br><span class="line">        ResultSet resultSet = statement.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;id=&quot;</span> + resultSet.getObject(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;NAME=&quot;</span> + resultSet.getObject(<span class="string">&quot;NAME&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;PASSWORD=&quot;</span> + resultSet.getObject(<span class="string">&quot;PASSWORD&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;email=&quot;</span> + resultSet.getObject(<span class="string">&quot;email&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;birthday=&quot;</span> + resultSet.getObject(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//6.释放连接</span></span><br><span class="line">        resultSet.close();</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>connection</p></blockquote><p>代表数据库</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">connection.setAutoCommit();<span class="comment">//设置自动提交</span></span><br><span class="line">connection.commit();<span class="comment">//事务提交  </span></span><br><span class="line">connection.rollback();<span class="comment">//事务回滚 </span></span><br></pre></td></tr></table></figure><blockquote><p>statement</p></blockquote><p>执行sql</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">statement.executeQuery();<span class="comment">//查询操作返回ResultSet</span></span><br><span class="line">statement.execute();<span class="comment">//执行任何sql</span></span><br><span class="line">statement.executeUpdate();<span class="comment">//更新插入删除,返回收到影响的行数</span></span><br></pre></td></tr></table></figure><blockquote><p>ResultSet</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">resultset.getObjest();<span class="comment">//不知道类型</span></span><br><span class="line"></span><br><span class="line">resultset.getString();<span class="comment">//知道类型</span></span><br><span class="line">resultset.getDate();</span><br></pre></td></tr></table></figure><blockquote><p>close 释放连接</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">resultSet.close();</span><br><span class="line">statement.close();</span><br><span class="line">connection.close();</span><br></pre></td></tr></table></figure><h3 id="3-CURD"><a href="#3-CURD" class="headerlink" title="3.CURD"></a>3.CURD</h3><h4 id="1-create"><a href="#1-create" class="headerlink" title="1.create"></a>1.create</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Statement statement = connection.createStatement();</span><br><span class="line">String sql = <span class="string">&quot;insert into user() values()&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> num = statement.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;success!&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-update"><a href="#2-update" class="headerlink" title="2.update"></a>2.update</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Statement statement = connection.createStatement();</span><br><span class="line">String sql = <span class="string">&quot;update user set name =&#x27;&#x27; where name =&#x27;&#x27;&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> num = statement.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;success!&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-read"><a href="#3-read" class="headerlink" title="3.read"></a>3.read</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Statement statement = connection.createStatement();</span><br><span class="line">String sql = <span class="string">&quot;SELECT * FROM users&quot;</span>;</span><br><span class="line">ResultSet resultSet = statement.executeQuery(sql);</span><br><span class="line"><span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="4-delete"><a href="#4-delete" class="headerlink" title="4.delete"></a>4.delete</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Statement statement = connection.createStatement();</span><br><span class="line">String sql = <span class="string">&quot;delete from user where id=1&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> num = statement.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;success!&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-提取工具类"><a href="#4-提取工具类" class="headerlink" title="4.提取工具类"></a>4.提取工具类</h3><blockquote><p>properties</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">root</span></span><br></pre></td></tr></table></figure><blockquote><p>Utils</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.codeloirn.jdbc2.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String username = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream inputStream = JdbcUtils.class.getClassLoader().getResourceAsStream(<span class="string">&quot;db.properties&quot;</span>);</span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            properties.load(inputStream);</span><br><span class="line">            driver = properties.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">            url = properties.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">            username = properties.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">            password = properties.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">            Class.forName(driver);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException | ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(url, username, password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(Connection conn, Statement st, ResultSet rs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                rs.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (st != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                st.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                conn.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>main</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.codeloirn.jdbc2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codeloirn.jdbc2.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcStudy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        Statement st = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line">            st = conn.createStatement();</span><br><span class="line">            String sql = <span class="string">&quot;INSERT users VALUES(7,&#x27;codelorin&#x27;,123,&#x27;admin@l.cn&#x27;,&#x27;1980-12-04&#x27;)&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> i = st.executeUpdate(sql);</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;success!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn, st, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-sql注入"><a href="#5-sql注入" class="headerlink" title="5.sql注入"></a>5.sql注入</h3><blockquote><p>安全问题</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codeloirn.jdbc2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codeloirn.jdbc2.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcStudy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String username = <span class="string">&quot;&#x27;or&#x27; 1=1&quot;</span>; <span class="comment">//&#x27; or &#x27; 1=1 &#x27;-- &#x27;</span></span><br><span class="line">        String password = <span class="string">&quot;&#x27;or&#x27; 1=1&quot;</span>;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        Statement st = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line">            st = conn.createStatement();</span><br><span class="line">            String sql = <span class="string">&quot;SELECT * FROM `users` WHERE `name`=&#x27;&quot;</span> + username + <span class="string">&quot;&#x27; and `password` =&#x27;&quot;</span> + password + <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">            ResultSet resultSet = st.executeQuery(sql);</span><br><span class="line">            <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">                System.out.println(resultSet.getObject(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">                System.out.println(resultSet.getObject(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn, st, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>由于sql的逻辑运算符的原因,存在sql注入漏洞,会被攻击导致数据泄露.</p></blockquote><h3 id="6-解决sql注入问题"><a href="#6-解决sql注入问题" class="headerlink" title="6.解决sql注入问题"></a>6.解决sql注入问题</h3><blockquote><p>增删改</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codeloirn.jdbc3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codeloirn.jdbc2.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//st</span></span><br><span class="line">        PreparedStatement st = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">//预编译</span></span><br><span class="line">            String sql = <span class="string">&quot;INSERT INTO users(id,`name`,`password`,`email`,`birthday`) VALUES(?,?,?,?,?)&quot;</span>;</span><br><span class="line">            st = conn.prepareStatement(sql);</span><br><span class="line">            st.setInt(<span class="number">1</span>, <span class="number">10</span>);</span><br><span class="line">            st.setString(<span class="number">2</span>, <span class="string">&quot;lorin&quot;</span>);</span><br><span class="line">            st.setString(<span class="number">3</span>, <span class="string">&quot;123321&quot;</span>);</span><br><span class="line">            st.setString(<span class="number">4</span>, <span class="string">&quot;codelorin@163.com&quot;</span>);</span><br><span class="line">            st.setDate(<span class="number">5</span>, <span class="keyword">new</span> java.sql.Date(<span class="keyword">new</span> Date().getTime()));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> i = st.executeUpdate();</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;success!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn, st, <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>查</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codeloirn.jdbc2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codeloirn.jdbc2.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcStudy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String username = <span class="string">&quot;codelorin&quot;</span>;</span><br><span class="line">        String password = <span class="string">&quot;123&quot;</span>;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//st</span></span><br><span class="line">        PreparedStatement st = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line"><span class="comment">//预编译</span></span><br><span class="line">            String sql = <span class="string">&quot;SELECT * FROM `users` WHERE `name`=? and `password`=?&quot;</span>;</span><br><span class="line">            st = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">            st.setString(<span class="number">1</span>, username);</span><br><span class="line">            st.setString(<span class="number">2</span>, password);</span><br><span class="line">            rs = st.executeQuery();</span><br><span class="line">            <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">                System.out.println(rs.getObject(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">                System.out.println(rs.getObject(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn, st, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="18-事务问题"><a href="#18-事务问题" class="headerlink" title="18.事务问题"></a>18.事务问题</h2><blockquote><p>ACID原则</p></blockquote><p>原子性:要不都完成,要不都失败</p><p>一致性:总数不变</p><p>隔离性:多个进程互补干扰</p><p>持久性:一旦提交不可逆,持久化到数据库了</p><blockquote><p>隔离性的问题</p></blockquote><p>脏读:一个事务读取了另外一个没有提交的事务</p><p>不可重复读:在同一个事务内,重复读取表中的数据,表数据发生了改变</p><p>虚读(幻读):在一个事务内,读取到了别人插入的数据,导致前后读出来的结果不一致</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codeloirn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codeloirn.jdbc2.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/4/30 23:56</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TransactionDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement st = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">//关闭自动提交,开启事务</span></span><br><span class="line">            conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">            String sql1 = <span class="string">&quot;update account set money = money-100 where name =&#x27;A&#x27;&quot;</span>;</span><br><span class="line">            st = conn.prepareStatement(sql1);</span><br><span class="line">            st.executeUpdate();</span><br><span class="line">            String sql2 = <span class="string">&quot;update account set money = money+100 where name =&#x27;B&#x27;&quot;</span>;</span><br><span class="line">            st = conn.prepareStatement(sql2);</span><br><span class="line">            st.executeUpdate();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//业务完成,提交事务</span></span><br><span class="line">            conn.commit();</span><br><span class="line">            System.out.println(<span class="string">&quot;success&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//失败回滚</span></span><br><span class="line">                conn.rollback();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e1) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtils.release(conn, st, <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="19-数据库连接池"><a href="#19-数据库连接池" class="headerlink" title="19.数据库连接池"></a>19.数据库连接池</h2><blockquote><p>数据库连接完毕,执行完毕,释放</p><p>连接释放十分浪费资源</p></blockquote><p><strong>池化技术:准备一些预先的资源,过来就连接预先准备好的</strong></p><p>最小连接数:10</p><p>最大连接数:15</p><p>等待超时:100ms</p><p>编写连接池,实现DataSource接口</p><p>DBCP</p><p>C3P0</p><p>Druid:阿里巴巴</p><p>使用这些数据库连接池,我们就不需要编写连接数据库的代码了!</p><blockquote><p>DBCP</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#连接设置</span></span><br><span class="line"><span class="attr">driverClassName</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">root</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!-- 初始化连接 --</span></span><br><span class="line"><span class="attr">initialSize</span>=<span class="string">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#最大连接数量</span></span><br><span class="line"><span class="attr">maxActive</span>=<span class="string">50</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!-- 最大空闲连接 --</span></span><br><span class="line"><span class="attr">maxIdle</span>=<span class="string">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!-- 最小空闲连接 --</span></span><br><span class="line"><span class="attr">minIdle</span>=<span class="string">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!-- 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 --</span></span><br><span class="line"><span class="attr">maxWait</span>=<span class="string">60000</span></span><br><span class="line"><span class="comment">#JDBC驱动建立连接时附带的连接属性属性的格式必须为这样：【属性名=property;】</span></span><br><span class="line"><span class="comment">#注意：user 与 password 两个属性会被明确地传递，因此这里不需要包含他们。</span></span><br><span class="line"><span class="attr">connectionProperties</span>=<span class="string">useUnicode=true;characterEncoding=UTF8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#指定由连接池所创建的连接的自动提交（auto-commit）状态。</span></span><br><span class="line"><span class="attr">defaultAutoCommit</span>=<span class="string">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#driver default 指定由连接池所创建的连接的只读（read-only）状态。</span></span><br><span class="line"><span class="comment">#如果没有设置该值，则“setReadOnly”方法将不被调用。（某些驱动并不支持只读模式，如：Informix）</span></span><br><span class="line"><span class="attr">defaultReadOnly</span>=<span class="string"></span></span><br><span class="line"></span><br><span class="line"><span class="comment">#driver default 指定由连接池所创建的连接的事务级别（TransactionIsolation）。</span></span><br><span class="line"><span class="comment">#可用值为下列之一：（详情可见javadoc。）NONE,READ_UNCOMMITTED, READ_COMMITTED, REPEATABLE_READ, SERIALIZABLE</span></span><br><span class="line"><span class="attr">defaultTransactionIsolation</span>=<span class="string">READ_UNCOMMITTED</span></span><br></pre></td></tr></table></figure><blockquote><p>Dbcp工具类实现</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codeloirn.dbcp.utils;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.dbcp.BasicDataSourceFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/4/30 17:41</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtilsDbcp</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DataSource dataSource = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream inputStream = JdbcUtilsDbcp.class.getClassLoader().getResourceAsStream(<span class="string">&quot;dbcpconfig.properties&quot;</span>);</span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            properties.load(inputStream);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//创建数据源</span></span><br><span class="line">            dataSource = BasicDataSourceFactory.createDataSource(properties);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(Connection conn, Statement st, ResultSet rs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                rs.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (st != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                st.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                conn.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>demo</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codeloirn.dbcp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.codeloirn.dbcp.utils.JdbcUtilsDbcp;</span><br><span class="line"><span class="keyword">import</span> com.codeloirn.jdbc2.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/4/30 20:05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement st = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtilsDbcp.getConnection();</span><br><span class="line">            String sql = <span class="string">&quot;INSERT INTO users(id,`name`,`password`,`email`,`birthday`) VALUES(?,?,?,?,?)&quot;</span>;</span><br><span class="line">            st = conn.prepareStatement(sql);</span><br><span class="line">            st.setInt(<span class="number">1</span>, <span class="number">12</span>);</span><br><span class="line">            st.setString(<span class="number">2</span>, <span class="string">&quot;lorin111&quot;</span>);</span><br><span class="line">            st.setString(<span class="number">3</span>, <span class="string">&quot;123321&quot;</span>);</span><br><span class="line">            st.setString(<span class="number">4</span>, <span class="string">&quot;codelorin@163.com&quot;</span>);</span><br><span class="line">            st.setDate(<span class="number">5</span>, <span class="keyword">new</span> java.sql.Date(<span class="keyword">new</span> Date().getTime()));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> i = st.executeUpdate();</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;success!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            JdbcUtilsDbcp.release(conn, st, <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> Mysql </tag>
            
            <tag> JDBC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式</title>
      <link href="posts/4dc97b6bc1ae/"/>
      <url>posts/4dc97b6bc1ae/</url>
      
        <content type="html"><![CDATA[<h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><h2 id="1-定义re对象"><a href="#1-定义re对象" class="headerlink" title="1.定义re对象"></a>1.定义re对象</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;正则表达式&quot;</span>,<span class="string">&quot;匹配模式&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/正则表达式/</span>匹配模式</span><br><span class="line">i 忽略大小写</span><br><span class="line">g 全局匹配</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210427113220376.png" alt="image-20210427113220376"></p><h2 id="2-匹配"><a href="#2-匹配" class="headerlink" title="2.匹配"></a>2.匹配</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[^]除了</span><br><span class="line">/^/开头</span><br><span class="line">/$/结尾</span><br></pre></td></tr></table></figure><h2 id="3-方法"><a href="#3-方法" class="headerlink" title="3.方法"></a>3.方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">正则表达式的方法:</span><br><span class="line">test()</span><br><span class="line">使用这个方法可以用来检查一个字符串是否符合正则表达式的规则</span><br><span class="line">如果符合则返回<span class="literal">true</span>,否则返回fa1se</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">split</span><br><span class="line">replace</span><br><span class="line">search</span><br><span class="line">match</span><br></pre></td></tr></table></figure><h2 id="4-练习"><a href="#4-练习" class="headerlink" title="4.练习"></a>4.练习</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">手机号</span><br><span class="line"><span class="number">13467891234</span></span><br><span class="line">/^<span class="number">1</span>[<span class="number">3</span>-<span class="number">9</span>][<span class="number">0</span>-<span class="number">9</span>]&#123;<span class="number">9</span>&#125;$/</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">/^\s*|\s*$/</span><br><span class="line">开头或结尾的空格</span><br><span class="line"></span><br><span class="line">邮箱</span><br><span class="line">^\w&#123;<span class="number">3</span>,&#125;(\.\w+)*@[A-z0-<span class="number">9</span>]+(\[A-z]&#123;<span class="number">2</span>,<span class="number">5</span>&#125;)&#123;<span class="number">1</span>,<span class="number">2</span>&#125;$</span><br></pre></td></tr></table></figure><h2 id="5-查询图"><a href="#5-查询图" class="headerlink" title="5.查询图"></a>5.查询图</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210224182118499.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210224182307245.png" alt="image-20210224182307245"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210224183645544.png" alt="image-20210224183645544"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210224184729165.png" alt="image-20210224184729165"></p>]]></content>
      
      
      <categories>
          
          <category> 编程技能 </category>
          
          <category> 正则表达式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程技能 </tag>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java多线程</title>
      <link href="posts/def272cea73f/"/>
      <url>posts/def272cea73f/</url>
      
        <content type="html"><![CDATA[<h1 id="java多线程"><a href="#java多线程" class="headerlink" title="java多线程"></a>java多线程</h1><h2 id="一-多线程-多进程"><a href="#一-多线程-多进程" class="headerlink" title="一.多线程,多进程"></a>一.多线程,多进程</h2><blockquote><p>一个进程可以有多个线程</p></blockquote><h2 id="二-线程的创建"><a href="#二-线程的创建" class="headerlink" title="二.线程的创建"></a>二.线程的创建</h2><h3 id="1-Thread-class"><a href="#1-Thread-class" class="headerlink" title="1.Thread class"></a>1.Thread class</h3><p>(继承自Thread类 重点)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorni.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在看代码&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TestThread testThread = <span class="keyword">new</span> TestThread();</span><br><span class="line">        testThread.start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在学习多线程&quot;</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-Runnable接口"><a href="#2-Runnable接口" class="headerlink" title="2.Runnable接口"></a>2.Runnable接口</h3><p>(实现 Runnable 接口 重点)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorni.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">200</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在看代码&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TestThread testThread = <span class="keyword">new</span> TestThread();</span><br><span class="line">        <span class="comment">//通过线程对象开启我们的线程,代理</span></span><br><span class="line"><span class="comment">//        Thread thread = new Thread(testThread);</span></span><br><span class="line"><span class="comment">//        thread.start();</span></span><br><span class="line">        <span class="comment">//等价于下面</span></span><br><span class="line">        <span class="keyword">new</span> Thread(testThread).start();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在学习多线程&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-Callable-接口"><a href="#3-Callable-接口" class="headerlink" title="3.Callable 接口"></a>3.Callable 接口</h3><p>(实现 Callable接口 了解)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorni.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Future;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread</span> <span class="keyword">implements</span> <span class="title">Callable</span>&lt;<span class="title">Boolean</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TestThread testThread = <span class="keyword">new</span> TestThread();</span><br><span class="line"><span class="comment">//执行创建任务</span></span><br><span class="line">        ExecutorService ser = Executors.newFixedThreadPool(<span class="number">3</span>);</span><br><span class="line"><span class="comment">//提交执行</span></span><br><span class="line">        Future&lt;Boolean&gt; result = ser.submit(testThread);</span><br><span class="line">        <span class="comment">//获取结果</span></span><br><span class="line">        <span class="keyword">boolean</span> r1 = result.get();</span><br><span class="line">        <span class="comment">//结束</span></span><br><span class="line">        ser.shutdownNow();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="三-并发问题"><a href="#三-并发问题" class="headerlink" title="三.并发问题"></a>三.并发问题</h2><h3 id="1-初时并发问题"><a href="#1-初时并发问题" class="headerlink" title="1.初时并发问题"></a>1.初时并发问题</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorni.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> ticketNums = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (ticketNums &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">200</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;拿到了第&quot;</span> + ticketNums-- + <span class="string">&quot;张票&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TestThread testThread = <span class="keyword">new</span> TestThread();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(testThread, <span class="string">&quot;小明&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(testThread, <span class="string">&quot;小李&quot;</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(testThread, <span class="string">&quot;小张&quot;</span>).start();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//多个线程操作同一个资源,线程不安全,数据紊乱</span></span><br></pre></td></tr></table></figure><h2 id="四-静态代理模式"><a href="#四-静态代理模式" class="headerlink" title="四.静态代理模式"></a>四.静态代理模式</h2><ol><li>真实对象和代理对象都要实现同一个接口</li><li>代理对象要代理真实对象</li><li>代理对象可以做真实对象做不了的事情</li><li>真实对象专注做自己的事情</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorni.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticProxy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MarryProxy marryProxy = <span class="keyword">new</span> MarryProxy(<span class="keyword">new</span> You());</span><br><span class="line">        marryProxy.happyMarry();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Marry</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">happyMarry</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">You</span> <span class="keyword">implements</span> <span class="title">Marry</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">happyMarry</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;happy marry!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MarryProxy</span> <span class="keyword">implements</span> <span class="title">Marry</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Marry target;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MarryProxy</span><span class="params">(Marry target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.target = target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">happyMarry</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        before();</span><br><span class="line">        <span class="keyword">this</span>.target.happyMarry();</span><br><span class="line">        after();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;before&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;after&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="五-Lambda表达式"><a href="#五-Lambda表达式" class="headerlink" title="五.Lambda表达式"></a>五.Lambda表达式</h2><ul><li>避免匿名内部类定义过多</li><li>可以让你的代码开起来很简洁</li><li>去掉了一堆没有意义的代码</li></ul><blockquote><p>接口只包含一个抽象方法,那么它就是函数式接口</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorni.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestLambda</span> </span>&#123;</span><br><span class="line">    <span class="comment">//静态内部类</span></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Like2</span> <span class="keyword">implements</span> <span class="title">ILike</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;i like lambda2!!!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Like like = <span class="keyword">new</span> Like();</span><br><span class="line">        like.lambda();</span><br><span class="line"></span><br><span class="line">        Like2 like2 = <span class="keyword">new</span> Like2();</span><br><span class="line">        like2.lambda();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//局部内部类</span></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Like3</span> <span class="keyword">implements</span> <span class="title">ILike</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;i like lambda3!!!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Like3 like3 = <span class="keyword">new</span> Like3();</span><br><span class="line">        like3.lambda();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//匿名内部类</span></span><br><span class="line">       ILike like4 = <span class="keyword">new</span> ILike() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;i like lambda4!!!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">       like4.lambda();</span><br><span class="line"></span><br><span class="line"><span class="comment">//        lambda</span></span><br><span class="line">        ILike like5 = () -&gt; &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;i like lambda3!!!&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        like5.lambda();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">ILike</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Like</span> <span class="keyword">implements</span> <span class="title">ILike</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lambda</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;i like lambda!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
          <category> 多线程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>less学习</title>
      <link href="posts/b12955a527b0/"/>
      <url>posts/b12955a527b0/</url>
      
        <content type="html"><![CDATA[<h1 id="less学习"><a href="#less学习" class="headerlink" title="less学习"></a>less学习</h1><h2 id="一-变量"><a href="#一-变量" class="headerlink" title="一.变量"></a>一.变量</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">--<span class="attribute">color</span>:<span class="number">#bfa</span>; //定义</span><br><span class="line"><span class="selector-tag">var</span>(--<span class="attribute">color</span>) //使用</span><br><span class="line">calc()计算函数</span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;./index.css&quot;</span>;</span><br><span class="line">上面为css支持的</span><br></pre></td></tr></table></figure><h2 id="二-入门"><a href="#二-入门" class="headerlink" title="二.入门"></a>二.入门</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@变量名:<span class="selector-tag">xxx</span>; <span class="comment">//定义</span></span><br><span class="line">@变量名 <span class="comment">//使用</span></span><br><span class="line"></span><br><span class="line">可以嵌套选择器 子代用&gt; <span class="selector-tag">&amp;</span>表示外层的父级元素</span><br><span class="line"></span><br><span class="line">作为类名或者一部分值使用需要@&#123;&#125;</span><br><span class="line"></span><br><span class="line">$color 可以去属性对应的值</span><br></pre></td></tr></table></figure><h2 id="三-进阶"><a href="#三-进阶" class="headerlink" title="三.进阶"></a>三.进阶</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">继承: <span class="selector-class">.p2</span><span class="selector-class">.extend</span>(.p1)</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p1</span>() 直接引用<span class="selector-tag">p1</span>的样式</span><br><span class="line"></span><br><span class="line">函数</span><br><span class="line">使用类选择器可以加个()创建了一个类似于函数(mixins) 直接使用<span class="selector-class">.p1</span>使用</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p1</span>(<span class="variable">@w</span>)</span><br><span class="line">可以传送参数</span><br></pre></td></tr></table></figure><h2 id="四-内置函数"><a href="#四-内置函数" class="headerlink" title="四.内置函数"></a>四.内置函数</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">darken(<span class="selector-id">#bfa</span>,<span class="number">10%</span>) 比传入的颜色深一定比例</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> css </category>
          
          <category> less </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> css </tag>
            
            <tag> less </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flask框架快速入门</title>
      <link href="posts/93ceb07fd09c/"/>
      <url>posts/93ceb07fd09c/</url>
      
        <content type="html"><![CDATA[<h1 id="flask框架"><a href="#flask框架" class="headerlink" title="flask框架"></a>flask框架</h1><h2 id="一-入门"><a href="#一-入门" class="headerlink" title="一.入门"></a>一.入门</h2><h2 id="1-demo"><a href="#1-demo" class="headerlink" title="1.demo"></a>1.demo</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello, World!&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="2-可变参数"><a href="#2-可变参数" class="headerlink" title="2.可变参数"></a>2.可变参数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&lt;user&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span>(<span class="params">user</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(user)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210408102134741.png" alt="image-20210408102134741"></p><h2 id="3-唯一url和重定向"><a href="#3-唯一url和重定向" class="headerlink" title="3.唯一url和重定向"></a>3.唯一url和重定向</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// @app.route(<span class="string">&#x27;/project&#x27;</span>) @app.route(<span class="string">&#x27;/project/&#x27;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">projects</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;project1&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="4-url-for"><a href="#4-url-for" class="headerlink" title="4.url_for()"></a>4.url_for()</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, url_for</span><br><span class="line"><span class="keyword">from</span> markupsafe <span class="keyword">import</span> escape</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;index&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;login&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/user/&lt;username&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">profile</span>(<span class="params">username</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#123;&#125;\&#x27;s profile&#x27;</span>.<span class="built_in">format</span>(escape(username))</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> app.test_request_context():</span><br><span class="line">    <span class="built_in">print</span>(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(url_for(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(url_for(<span class="string">&#x27;login&#x27;</span>, <span class="built_in">next</span>=<span class="string">&#x27;/&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(url_for(<span class="string">&#x27;profile&#x27;</span>, username=<span class="string">&#x27;John Doe&#x27;</span>))</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"> <span class="comment"># 静态文件:</span></span><br><span class="line">    url_for(<span class="string">&#x27;static&#x27;</span>, filename=<span class="string">&#x27;style.css&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="5-http方法"><a href="#5-http方法" class="headerlink" title="5.http方法"></a>5.http方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> do_the_login()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> show_the_login_form()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取提交的数据</span></span><br><span class="line">    User = request.args.get(‘nm’)</span><br><span class="line">user = request.form[<span class="string">&#x27;nm&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="6-模板"><a href="#6-模板" class="headerlink" title="6.模板"></a>6.模板</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello/&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello/&lt;name&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span>(<span class="params">name=<span class="literal">None</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;hello.html&#x27;</span>, name=name)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello from Flask<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&#123;% if name %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello &#123;&#123; name &#125;&#125;!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h2 id="7-cookie"><a href="#7-cookie" class="headerlink" title="7.cookie"></a>7.cookie</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置</span></span><br><span class="line">resp = make_response(<span class="string">&quot;success&quot;</span>)   <span class="comment"># 设置响应体</span></span><br><span class="line">resp.set_cookie(<span class="string">&quot;w3cshool&quot;</span>, <span class="string">&quot;w3cshool&quot;</span>, max_age=<span class="number">3600</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取</span></span><br><span class="line">cookie_1 = request.cookies.get(<span class="string">&quot;w3cshool&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">resp = make_response(<span class="string">&quot;del success&quot;</span>)  <span class="comment"># 设置响应体</span></span><br><span class="line">resp.delete_cookie(<span class="string">&quot;w3cshool&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, make_response, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/set_cookies&quot;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_cookie</span>():</span></span><br><span class="line">    resp = make_response(<span class="string">&quot;success&quot;</span>)</span><br><span class="line">    resp.set_cookie(<span class="string">&quot;w3cshool&quot;</span>, <span class="string">&quot;w3cshool&quot;</span>,max_age=<span class="number">3600</span>)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/get_cookies&quot;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_cookie</span>():</span></span><br><span class="line">    cookie_1 = request.cookies.get(<span class="string">&quot;w3cshool&quot;</span>)  <span class="comment"># 获取名字为Itcast_1对应cookie的值</span></span><br><span class="line">    <span class="keyword">return</span> cookie_1</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/delete_cookies&quot;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_cookie</span>():</span></span><br><span class="line">    resp = make_response(<span class="string">&quot;del success&quot;</span>)</span><br><span class="line">    resp.delete_cookie(<span class="string">&quot;w3cshool&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h2 id="8-session"><a href="#8-session" class="headerlink" title="8.session"></a>8.session</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置</span></span><br><span class="line">Session[‘username’] = ’admin’</span><br><span class="line"><span class="comment"># 释放</span></span><br><span class="line">session.pop(<span class="string">&#x27;username&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line"><span class="comment"># </span></span><br></pre></td></tr></table></figure><p>9.重定向和错误</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, redirect, url_for, render_template, request</span><br><span class="line"><span class="comment"># Initialize the Flask application</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">   <span class="keyword">return</span> render_template(<span class="string">&#x27;log_in.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>,methods = [<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line">   <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span> <span class="keyword">and</span></span><br><span class="line">       request.form[<span class="string">&#x27;username&#x27;</span>] == <span class="string">&#x27;admin&#x27;</span> :</span><br><span class="line">           <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;success&#x27;</span>))</span><br><span class="line">           <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/success&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">success</span>():</span></span><br><span class="line">   <span class="keyword">return</span> <span class="string">&#x27;logged in successfully&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">   app.run(debug = <span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 错误</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, redirect, url_for, render_template, request, abort</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">   <span class="keyword">return</span> render_template(<span class="string">&#x27;log_in.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>,methods = [<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>():</span></span><br><span class="line">   <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">      <span class="keyword">if</span> request.form[<span class="string">&#x27;username&#x27;</span>] == <span class="string">&#x27;admin&#x27;</span> :</span><br><span class="line">         <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;success&#x27;</span>))</span><br><span class="line">      <span class="keyword">else</span>:</span><br><span class="line">         abort(<span class="number">401</span>)</span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">      <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/success&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">success</span>():</span></span><br><span class="line">   <span class="keyword">return</span> <span class="string">&#x27;logged in successfully&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">   app.run(debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h2 id="9-文件上传"><a href="#9-文件上传" class="headerlink" title="9.文件上传"></a>9.文件上传</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;File Upload&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;http://localhost:5000/uploader&quot;</span> method=<span class="string">&quot;POST&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">        &lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file&quot;</span> accept=<span class="string">&quot;.jpg,.png&quot;</span> /&gt;</span><br><span class="line">        &lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="comment"># python代码</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request</span><br><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> secure_filename</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>] = <span class="string">&#x27;upload/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/upload&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload_file</span>():</span></span><br><span class="line">   <span class="keyword">return</span> render_template(<span class="string">&#x27;upload.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/uploader&#x27;</span>, methods = [<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">uploader</span>():</span></span><br><span class="line">   <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">      f = request.files[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line">      f.save(os.path.join(app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>],secure_filename(f.filename)))</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&#x27;file uploaded successfully&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">   app.run()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Python </category>
          
          <category> flask </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> Python </tag>
            
            <tag> flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>async和await语法糖的使用</title>
      <link href="posts/6323576fa6a5/"/>
      <url>posts/6323576fa6a5/</url>
      
        <content type="html"><![CDATA[<h1 id="1-async"><a href="#1-async" class="headerlink" title="1.async"></a>1.async</h1><ul><li>返回值是一个promise对象</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> result = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">21</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(result());</span><br></pre></td></tr></table></figure><h1 id="2-await"><a href="#2-await" class="headerlink" title="2.await"></a>2.await</h1><ul><li>右侧表达式为promise对象,但也可以是其他的值</li><li>表达式为promise对象则为成功的值</li><li>其他值,则直接将此值作为await的返回值</li></ul><blockquote><p>注意</p><p>1.await必须写在async函数中,但async函数可以没有await</p><p>2.await的promise对象失败了,则会抛出异常,需要通过try catch进行捕获</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> result = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, rejsct</span>) =&gt;</span> &#123;</span><br><span class="line">        resolve(<span class="string">&quot;ok&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">let</span> res = <span class="keyword">await</span> p;</span><br><span class="line">    <span class="built_in">console</span>.log(res);</span><br><span class="line">&#125;;</span><br><span class="line">result();</span><br></pre></td></tr></table></figure><h1 id="3-结合实践"><a href="#3-结合实践" class="headerlink" title="3.结合实践"></a>3.结合实践</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">btn.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">               <span class="keyword">let</span> duanzi = <span class="keyword">await</span> sendAJAX(<span class="string">&quot;https://api.apiopen.top/getJoke&quot;</span>);</span><br><span class="line">               <span class="built_in">console</span>.log(duanzi);</span><br><span class="line">           &#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> ajax </category>
          
          <category> promise </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> ajax </tag>
            
            <tag> 前后端交互 </tag>
            
            <tag> promise </tag>
            
            <tag> vue.js </tag>
            
            <tag> jQuery </tag>
            
            <tag> axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AJAX在各种框架下的使用</title>
      <link href="posts/60229e7c7527/"/>
      <url>posts/60229e7c7527/</url>
      
        <content type="html"><![CDATA[<h1 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h1><h2 id="1-ajax"><a href="#1-ajax" class="headerlink" title="1.ajax"></a>1.ajax</h2><blockquote><p>不刷新的情况下,向服务器发起请求</p></blockquote><h3 id="1-优点"><a href="#1-优点" class="headerlink" title="1.优点:"></a>1.优点:</h3><ul><li>无需刷新</li><li>事件触发更新部分内容</li></ul><h3 id="2-缺点"><a href="#2-缺点" class="headerlink" title="2.缺点:"></a>2.缺点:</h3><ul><li>没有浏览历史,不能回退</li><li>跨域问题</li><li>SEO不友好</li></ul><h2 id="2-使用ajax原生"><a href="#2-使用ajax原生" class="headerlink" title="2.使用ajax原生"></a>2.使用ajax原生</h2><h3 id="1-get-post"><a href="#1-get-post" class="headerlink" title="1.get/post"></a>1.get/post</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取button元素</span></span><br><span class="line">  <span class="keyword">const</span> btn = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;button&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">const</span> result = <span class="built_in">document</span>.getElementById(<span class="string">&quot;result&quot;</span>)</span><br><span class="line">  <span class="comment">//绑定事件</span></span><br><span class="line">  btn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">//1. 创建对象</span></span><br><span class="line">      <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest()</span><br><span class="line">      <span class="comment">//2. 初始化 设置请求方法和 url</span></span><br><span class="line">      xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;http://127.0.0.1:8000/server?a=100&amp;b=200&amp;c=300&quot;</span>)</span><br><span class="line">      <span class="comment">//3. 发送</span></span><br><span class="line">      xhr.send()</span><br><span class="line">      <span class="comment">//4. 事件绑定 处理服务端返回的结果</span></span><br><span class="line">      <span class="comment">// on  when 当....时候</span></span><br><span class="line">      <span class="comment">// readystate 是 xhr 对象中的属性, 表示状态 0 1 2 3 4</span></span><br><span class="line">      <span class="comment">// change  改变</span></span><br><span class="line">      xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="comment">//判断 (服务端返回了所有的结果)</span></span><br><span class="line">          <span class="keyword">if</span> (xhr.readyState === <span class="number">4</span>) &#123;</span><br><span class="line">              <span class="comment">//判断响应状态码 200  404  403 401 500</span></span><br><span class="line">              <span class="comment">// 2xx 成功</span></span><br><span class="line">              <span class="keyword">if</span> (xhr.status &gt;= <span class="number">200</span> &amp;&amp; xhr.status &lt; <span class="number">300</span>) &#123;</span><br><span class="line">                  <span class="comment">//处理结果  行 头 空行 体</span></span><br><span class="line">                  <span class="comment">//响应</span></span><br><span class="line">                  <span class="comment">// console.log(xhr.status);//状态码</span></span><br><span class="line">                  <span class="comment">// console.log(xhr.statusText);//状态字符串</span></span><br><span class="line">                  <span class="comment">// console.log(xhr.getAllResponseHeaders());//所有响应头</span></span><br><span class="line">                  <span class="comment">// console.log(xhr.response);//响应体</span></span><br><span class="line">                  <span class="comment">//设置 result 的文本</span></span><br><span class="line">                  result.innerHTML = xhr.response</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  xhr.open(<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;http://127.0.0.1:8000/server&#x27;</span>);</span><br><span class="line">  <span class="comment">//设置请求头</span></span><br><span class="line">  xhr.setRequestHeader(<span class="string">&#x27;Content-Type&#x27;</span>,<span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>);</span><br><span class="line">  xhr.setRequestHeader(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;atguigu&#x27;</span>);</span><br><span class="line">  <span class="comment">//3. 发送</span></span><br><span class="line">  xhr.send(<span class="string">&#x27;a=100&amp;b=200&amp;c=300&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="2-设置返回json"><a href="#2-设置返回json" class="headerlink" title="2.设置返回json"></a>2.设置返回json</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">xhr.responseType = <span class="string">&#x27;json&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 手动对数据转化</span></span><br><span class="line"><span class="comment">// let data = JSON.parse(xhr.response);</span></span><br><span class="line"><span class="comment">// console.log(data);</span></span><br><span class="line"><span class="comment">// result.innerHTML = data.name;</span></span><br><span class="line"><span class="comment">// 2. 自动转换</span></span><br><span class="line"><span class="built_in">console</span>.log(xhr.response);</span><br><span class="line">result.innerHTML = xhr.response.name;</span><br><span class="line"></span><br><span class="line"><span class="comment">//后端</span></span><br><span class="line"><span class="keyword">const</span> data = &#123;</span><br><span class="line">    name: <span class="string">&#x27;atguigu&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//对对象进行字符串转换</span></span><br><span class="line"><span class="keyword">let</span> str = <span class="built_in">JSON</span>.stringify(data);</span><br></pre></td></tr></table></figure><h3 id="3-IE缓存问题"><a href="#3-IE缓存问题" class="headerlink" title="3.IE缓存问题"></a>3.IE缓存问题</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;http://127.0.0.1:8000/?t=&quot;</span> + <span class="built_in">Date</span>.now())</span><br></pre></td></tr></table></figure><h3 id="4-请求超时和网络超时处理"><a href="#4-请求超时和网络超时处理" class="headerlink" title="4.请求超时和网络超时处理"></a>4.请求超时和网络超时处理</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//超时设置 2s 设置</span></span><br><span class="line">xhr.timeout = <span class="number">2000</span>;</span><br><span class="line"><span class="comment">//超时回调</span></span><br><span class="line">xhr.ontimeout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">&quot;网络异常, 请稍后重试!!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//网络异常回调</span></span><br><span class="line">xhr.onerror = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">&quot;你的网络似乎出了一些问题!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-取消请求"><a href="#5-取消请求" class="headerlink" title="5.取消请求"></a>5.取消请求</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x.abort();</span><br></pre></td></tr></table></figure><h3 id="6-重复请求"><a href="#6-重复请求" class="headerlink" title="6.重复请求"></a>6.重复请求</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取元素对象</span></span><br><span class="line"><span class="keyword">const</span> btns = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> x = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">//标识变量</span></span><br><span class="line"><span class="keyword">let</span> isSending = <span class="literal">false</span>; <span class="comment">// 是否正在发送AJAX请求</span></span><br><span class="line"></span><br><span class="line">btns[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//判断标识变量</span></span><br><span class="line">    <span class="keyword">if</span>(isSending) x.abort();<span class="comment">// 如果正在发送, 则取消该请求, 创建一个新的请求</span></span><br><span class="line">    x = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    <span class="comment">//修改 标识变量的值</span></span><br><span class="line">    isSending = <span class="literal">true</span>;</span><br><span class="line">    x.open(<span class="string">&quot;GET&quot;</span>,<span class="string">&#x27;http://127.0.0.1:8000/delay&#x27;</span>);</span><br><span class="line">    x.send();</span><br><span class="line">    x.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(x.readyState === <span class="number">4</span>)&#123;</span><br><span class="line">            <span class="comment">//修改标识变量</span></span><br><span class="line">            isSending = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// abort</span></span><br><span class="line">btns[<span class="number">1</span>].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    x.abort();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-jquery"><a href="#3-jquery" class="headerlink" title="3.jquery"></a>3.jquery</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           $.get(<span class="string">&#x27;http://127.0.0.1:8000/jquery-server&#x27;</span>, &#123;<span class="attr">a</span>:<span class="number">100</span>, <span class="attr">b</span>:<span class="number">200</span>&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">               <span class="built_in">console</span>.log(data);</span><br><span class="line">           &#125;,<span class="string">&#x27;json&#x27;</span>);</span><br><span class="line">       &#125;);</span><br><span class="line"></span><br><span class="line">       $(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">1</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           $.post(<span class="string">&#x27;http://127.0.0.1:8000/jquery-server&#x27;</span>, &#123;<span class="attr">a</span>:<span class="number">100</span>, <span class="attr">b</span>:<span class="number">200</span>&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">               <span class="built_in">console</span>.log(data);</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;);</span><br><span class="line"></span><br><span class="line">       $(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">2</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           $.ajax(&#123;</span><br><span class="line">               <span class="comment">//url</span></span><br><span class="line">               url: <span class="string">&#x27;http://127.0.0.1:8000/jquery-server&#x27;</span>,</span><br><span class="line">               <span class="comment">//参数</span></span><br><span class="line">               data: &#123;<span class="attr">a</span>:<span class="number">100</span>, <span class="attr">b</span>:<span class="number">200</span>&#125;,</span><br><span class="line">               <span class="comment">//请求类型</span></span><br><span class="line">               type: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">               <span class="comment">//响应体结果</span></span><br><span class="line">               dataType: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">               <span class="comment">//成功的回调</span></span><br><span class="line">               success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">                   <span class="built_in">console</span>.log(data);</span><br><span class="line">               &#125;,</span><br><span class="line">               <span class="comment">//超时时间</span></span><br><span class="line">               timeout: <span class="number">2000</span>,</span><br><span class="line">               <span class="comment">//失败的回调</span></span><br><span class="line">               error: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                   <span class="built_in">console</span>.log(<span class="string">&#x27;出错啦!!&#x27;</span>);</span><br><span class="line">               &#125;,</span><br><span class="line">               <span class="comment">//头信息</span></span><br><span class="line">               headers: &#123;</span><br><span class="line">                   c:<span class="number">300</span>,</span><br><span class="line">                   d:<span class="number">400</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure><h2 id="4-axios"><a href="#4-axios" class="headerlink" title="4.axios"></a>4.axios</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">axios.defaults.baseURL = <span class="string">&#x27;http://127.0.0.1:8000&#x27;</span>;</span><br><span class="line"></span><br><span class="line">       btns[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="comment">//GET 请求</span></span><br><span class="line">           axios.get(<span class="string">&#x27;/axios-server&#x27;</span>, &#123;</span><br><span class="line">               <span class="comment">//url 参数</span></span><br><span class="line">               params: &#123;</span><br><span class="line">                   id: <span class="number">100</span>,</span><br><span class="line">                   vip: <span class="number">7</span></span><br><span class="line">               &#125;,</span><br><span class="line">               <span class="comment">//请求头信息</span></span><br><span class="line">               headers: &#123;</span><br><span class="line">                   name: <span class="string">&#x27;atguigu&#x27;</span>,</span><br><span class="line">                   age: <span class="number">20</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;).then(<span class="function"><span class="params">value</span> =&gt;</span> &#123;</span><br><span class="line">               <span class="built_in">console</span>.log(value);</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       btns[<span class="number">1</span>].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           axios.post(<span class="string">&#x27;/axios-server&#x27;</span>, &#123;</span><br><span class="line">               username: <span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">               password: <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">           &#125;, &#123;</span><br><span class="line">               <span class="comment">//url </span></span><br><span class="line">               params: &#123;</span><br><span class="line">                   id: <span class="number">200</span>,</span><br><span class="line">                   vip: <span class="number">9</span></span><br><span class="line">               &#125;,</span><br><span class="line">               <span class="comment">//请求头参数</span></span><br><span class="line">               headers: &#123;</span><br><span class="line">                   height: <span class="number">180</span>,</span><br><span class="line">                   weight: <span class="number">180</span>,</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line">   </span><br><span class="line">       btns[<span class="number">2</span>].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           axios(&#123;</span><br><span class="line">               <span class="comment">//请求方法</span></span><br><span class="line">               method : <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">               <span class="comment">//url</span></span><br><span class="line">               url: <span class="string">&#x27;/axios-server&#x27;</span>,</span><br><span class="line">               <span class="comment">//url参数</span></span><br><span class="line">               params: &#123;</span><br><span class="line">                   vip:<span class="number">10</span>,</span><br><span class="line">                   level:<span class="number">30</span></span><br><span class="line">               &#125;,</span><br><span class="line">               <span class="comment">//头信息</span></span><br><span class="line">               headers: &#123;</span><br><span class="line">                   a:<span class="number">100</span>,</span><br><span class="line">                   b:<span class="number">200</span></span><br><span class="line">               &#125;,</span><br><span class="line">               <span class="comment">//请求体参数</span></span><br><span class="line">               data: &#123;</span><br><span class="line">                   username: <span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">                   password: <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;).then(<span class="function"><span class="params">response</span>=&gt;</span>&#123;</span><br><span class="line">               <span class="comment">//响应状态码</span></span><br><span class="line">               <span class="built_in">console</span>.log(response.status);</span><br><span class="line">               <span class="comment">//响应状态字符串</span></span><br><span class="line">               <span class="built_in">console</span>.log(response.statusText);</span><br><span class="line">               <span class="comment">//响应头信息</span></span><br><span class="line">               <span class="built_in">console</span>.log(response.headers);</span><br><span class="line">               <span class="comment">//响应体</span></span><br><span class="line">               <span class="built_in">console</span>.log(response.data);</span><br><span class="line">           &#125;)</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h2 id="5-fetch"><a href="#5-fetch" class="headerlink" title="5.fetch"></a>5.fetch</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;fetch 发送 AJAX请求&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;AJAX请求&lt;/button&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">//文档地址</span></span><br><span class="line">        <span class="comment">//https://developer.mozilla.org/zh-CN/docs/Web/API/WindowOrWorkerGlobalScope/fetch</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">const</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            fetch(<span class="string">&#x27;http://127.0.0.1:8000/fetch-server?vip=10&#x27;</span>, &#123;</span><br><span class="line">                <span class="comment">//请求方法</span></span><br><span class="line">                method: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">                <span class="comment">//请求头</span></span><br><span class="line">                headers: &#123;</span><br><span class="line">                    name:<span class="string">&#x27;atguigu&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="comment">//请求体</span></span><br><span class="line">                body: <span class="string">&#x27;username=admin&amp;password=admin&#x27;</span></span><br><span class="line">            &#125;).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="comment">// return response.text();</span></span><br><span class="line">                <span class="keyword">return</span> response.json();</span><br><span class="line">            &#125;).then(<span class="function"><span class="params">response</span>=&gt;</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(response);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="6-同源策略"><a href="#6-同源策略" class="headerlink" title="6.同源策略"></a>6.同源策略</h2><blockquote><p>浏览器的安全机制</p><p>协议,域名,端口号必须完全相同</p></blockquote><h2 id="7-jsonp"><a href="#7-jsonp" class="headerlink" title="7.jsonp"></a>7.jsonp</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    用户名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//获取 input 元素</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> input = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> p = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;p&#x27;</span>);</span></span><br><span class="line">        </span><br><span class="line"><span class="javascript">        <span class="comment">//声明 handle 函数</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params">data</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            input.style.border = <span class="string">&quot;solid 1px #f00&quot;</span>;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//修改 p 标签的提示文本</span></span></span><br><span class="line">            p.innerHTML = data.msg;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//绑定事件</span></span></span><br><span class="line"><span class="javascript">        input.onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//获取用户的输入值</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> username = <span class="built_in">this</span>.value;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//向服务器端发送请求 检测用户名是否存在</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//1. 创建 script 标签</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> script = <span class="built_in">document</span>.createElement(<span class="string">&#x27;script&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="comment">//2. 设置标签的 src 属性</span></span></span><br><span class="line"><span class="javascript">            script.src = <span class="string">&#x27;http://127.0.0.1:8000/check-username&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//3. 将 script 插入到文档中</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.body.appendChild(script);</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;jQuery-jsonp&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        #result&#123;</span><br><span class="line">            width:300px;</span><br><span class="line">            height:100px;</span><br><span class="line">            border:solid 1px #089;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">    &lt;script crossorigin=<span class="string">&quot;anonymous&quot;</span> src=<span class="string">&#x27;https://cdn.bootcss.com/jquery/3.5.0/jquery.min.js&#x27;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;button&gt;点击发送 jsonp 请求&lt;/button&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;result&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(<span class="string">&#x27;button&#x27;</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            $.getJSON(<span class="string">&#x27;http://127.0.0.1:8000/jquery-jsonp-server?callback=?&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">                $(<span class="string">&#x27;#result&#x27;</span>).html(<span class="string">`</span></span><br><span class="line"><span class="string">                    名称: <span class="subst">$&#123;data.name&#125;</span>&lt;br&gt;</span></span><br><span class="line"><span class="string">                    校区: <span class="subst">$&#123;data.city&#125;</span></span></span><br><span class="line"><span class="string">                `</span>)</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="8-CROS"><a href="#8-CROS" class="headerlink" title="8.CROS"></a>8.CROS</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CORS<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        #result&#123;</span><br><span class="line"><span class="css">            <span class="attribute">width</span>:<span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>:<span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>:solid <span class="number">1px</span> <span class="number">#90b</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;button&#x27;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//1. 创建对象</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> x = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">            <span class="comment">//2. 初始化设置</span></span></span><br><span class="line"><span class="javascript">            x.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;http://127.0.0.1:8000/cors-server&quot;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="comment">//3. 发送</span></span></span><br><span class="line">            x.send();</span><br><span class="line"><span class="javascript">            <span class="comment">//4. 绑定事件</span></span></span><br><span class="line"><span class="javascript">            x.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">                if(x.readyState === 4)&#123;</span><br><span class="line">                    if(x.status &gt;= 200 &amp;&amp; x.status &lt; 300)&#123;</span><br><span class="line"><span class="javascript">                        <span class="comment">//输出响应体</span></span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(x.response);</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> ajax </category>
          
          <category> promise </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> ajax </tag>
            
            <tag> 前后端交互 </tag>
            
            <tag> promise </tag>
            
            <tag> vue.js </tag>
            
            <tag> jQuery </tag>
            
            <tag> axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue.js基础学习</title>
      <link href="posts/6275c3b43a36/"/>
      <url>posts/6275c3b43a36/</url>
      
        <content type="html"><![CDATA[<h2 id="一-vue入门"><a href="#一-vue入门" class="headerlink" title="一.vue入门"></a>一.vue入门</h2><h3 id="1-HelloWorld"><a href="#1-HelloWorld" class="headerlink" title="1.HelloWorld"></a>1.HelloWorld</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">声明式编程</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">                data: &#123;</span><br><span class="line"><span class="javascript">                    message: <span class="string">&quot;Hello World!&quot;</span>,</span></span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-声明式编程"><a href="#2-声明式编程" class="headerlink" title="2.声明式编程"></a>2.声明式编程</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                只需要声明这种结构</span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;items in movies&quot;</span>&gt;</span>&#123;&#123;items&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">                data: &#123;</span><br><span class="line"><span class="javascript">                    message: <span class="string">&quot;Hello World!&quot;</span>,</span></span><br><span class="line">                    movies: [1, 2, 3, 4, 5],</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-小案例"><a href="#3-小案例" class="headerlink" title="3.小案例"></a>3.小案例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前计数 &#123;&#123;counter&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sub&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">              el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">              data: &#123;</span><br><span class="line">                  counter: 0,</span><br><span class="line">              &#125;,</span><br><span class="line">              methods: &#123;</span><br><span class="line"><span class="javascript">                  add: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                      <span class="built_in">this</span>.counter++;</span></span><br><span class="line">                  &#125;,</span><br><span class="line"><span class="javascript">                  sub: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                      <span class="built_in">this</span>.counter--;</span></span><br><span class="line">                  &#125;,</span><br><span class="line">              &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">      <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-options"><a href="#4-options" class="headerlink" title="4.options"></a>4.options</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">el:</span><br><span class="line">类型 : string或者HTMLElement</span><br><span class="line">作用 : 决定vue实例会管理哪一个DOM</span><br><span class="line"></span><br><span class="line">data:</span><br><span class="line">类型 : Object|Function(组件当中data必须是一个函数)</span><br><span class="line">作用 : vue实例对应的数据对象</span><br><span class="line"></span><br><span class="line">methods:</span><br><span class="line">类型 : &#123;[key:string]:Function&#125;</span><br><span class="line">作用 : 定义属于Vue的一些方法,可以在其他地方调用,也可以在指令中调用</span><br></pre></td></tr></table></figure><h3 id="5-vue生命周期"><a href="#5-vue生命周期" class="headerlink" title="5.vue生命周期"></a>5.vue生命周期</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210225152951630.png" alt="image-20210225152951630"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">事物从诞生到消亡的过程</span><br><span class="line"></span><br><span class="line">生命周期函数</span><br><span class="line">1.created</span><br><span class="line">2.mounted</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="6-es6语法"><a href="#6-es6语法" class="headerlink" title="6.es6语法"></a>6.es6语法</h3><h4 id="1-let和const"><a href="#1-let和const" class="headerlink" title="1.let和const"></a>1.let和const</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> 块级作用域</span><br><span class="line"><span class="keyword">const</span> 常量</span><br><span class="line">不可以被修改,定义的时候必须赋值</span><br><span class="line">常量的含义是指向的对象不能被修改,但是可以改变对象内部的属性</span><br><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">    name:<span class="string">&#x27;codelorin&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-对象"><a href="#2-对象" class="headerlink" title="2.对象"></a>2.对象</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj &#123;</span><br><span class="line">name,age,height</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-函数"><a href="#3-函数" class="headerlink" title="3.函数"></a>3.函数</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj &#123;</span><br><span class="line"><span class="function"><span class="title">run</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">响应式参数</span><br><span class="line"><span class="function"><span class="title">run</span>(<span class="params">...num</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-js遍历"><a href="#4-js遍历" class="headerlink" title="4.js遍历"></a>4.js遍历</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i <span class="keyword">in</span> arr</span><br><span class="line">i就是下标</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> i <span class="keyword">of</span> arr</span><br><span class="line"> i就是取出的一个个对象</span><br></pre></td></tr></table></figure><h4 id="5-js高阶函数"><a href="#5-js高阶函数" class="headerlink" title="5.js高阶函数"></a>5.js高阶函数</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">1.filter必须返回一个boolean值,true自动加到数组,false则过滤掉</span><br><span class="line">const nums = [1,2,3,4,5]</span><br><span class="line">let newNums = nums.filter(</span><br><span class="line">function(n)&#123;</span><br><span class="line">return n&lt;2;</span><br><span class="line">&#125;)</span><br><span class="line">                </span><br><span class="line">2.map               </span><br><span class="line">let newNums = nums.map(function(n)&#123;</span><br><span class="line">        return n*2;</span><br><span class="line">                &#125;)</span><br><span class="line">3.reduce</span><br><span class="line">对数组中的内容进行汇总</span><br><span class="line"> 第一个值回调函数</span><br><span class="line"> 第二个preValue初始值</span><br><span class="line">let total = nums.reduce(function(preValue,n)&#123;</span><br><span class="line">        return preValue+n</span><br><span class="line">                &#125;,0)     </span><br><span class="line">                </span><br><span class="line">                </span><br><span class="line">   let total = nums</span><br><span class="line">  .filter(function (n) &#123;</span><br><span class="line">    return n &lt; 100;</span><br><span class="line">  &#125;)</span><br><span class="line">  .map(function (n) &#123;</span><br><span class="line">    return n * 2;</span><br><span class="line">  &#125;)</span><br><span class="line">  .reduce(function (preValue, n) &#123;</span><br><span class="line">    return preValue + n;</span><br><span class="line">  &#125;, 0);</span><br><span class="line"></span><br><span class="line">let total = nums</span><br><span class="line">  .filter((n) =&gt; n &lt; 100)</span><br><span class="line">  .map((n) =&gt; n * 2)</span><br><span class="line">  .reduce((preValue, n) =&gt; preValue + n);  </span><br></pre></td></tr></table></figure><h2 id="二-语法"><a href="#二-语法" class="headerlink" title="二.语法"></a>二.语法</h2><h3 id="1-插值操作"><a href="#1-插值操作" class="headerlink" title="1.插值操作"></a>1.插值操作</h3><h4 id="1-双括号"><a href="#1-双括号" class="headerlink" title="(1).双括号"></a>(1).双括号</h4><h4 id="2-v-once"><a href="#2-v-once" class="headerlink" title="(2).v-once"></a>(2).v-once</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;firstName+&quot; &quot;+lastName&#125;&#125;</span><br><span class="line">&#123;&#123;message&#125;&#125;</span><br><span class="line">&#123;&#123;firstName&#125;&#125;&#123;&#123;lastName&#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-once</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">v-once不会响应式的变化</span><br></pre></td></tr></table></figure><h4 id="3-v-html"><a href="#3-v-html" class="headerlink" title="(3).v-html"></a>(3).v-html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span> v-html=&quot;url&quot;&gt;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">会渲染html代码</span><br></pre></td></tr></table></figure><h4 id="4-v-text"><a href="#4-v-text" class="headerlink" title="(4).v-text"></a>(4).v-text</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">v-text=&quot;message&quot;</span><br><span class="line">不够灵活</span><br></pre></td></tr></table></figure><h4 id="5-v-pre"><a href="#5-v-pre" class="headerlink" title="(5).v-pre"></a>(5).v-pre</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-pre</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">不做任何处理直接输出</span><br></pre></td></tr></table></figure><h4 id="6-v-cloak"><a href="#6-v-cloak" class="headerlink" title="(6).v-cloak"></a>(6).v-cloak</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">在vue解析之前,div中有一个属性v-cloak</span><br><span class="line">在vue 解析之后,div中没有一个属性v-cloak</span><br><span class="line">所以我们可以通过可以属性</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">            <span class="selector-attr">[v-cloak]</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">display</span>: none;</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">v-cloak</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                    el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">                    data: &#123;</span><br><span class="line"><span class="javascript">                        message: <span class="string">&quot;你好啊&quot;</span>,</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    methods: &#123;&#125;,</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;, 1000);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-属性v-bind"><a href="#2-属性v-bind" class="headerlink" title="2.属性v-bind"></a>2.属性v-bind</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;url&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">语法糖</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;url&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">class的是否取决于boolean</span><br><span class="line">对象语法</span><br><span class="line"> <span class="tag">&lt;<span class="name">h2</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;类名1:boolean,类名2:boolean&#125;&quot;</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;active: isActive,line:isLine&#125;&quot;</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">                data: &#123;</span><br><span class="line"><span class="javascript">                    message: <span class="string">&quot;你好啊&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    isActive: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">                    isLine: <span class="literal">true</span>,</span></span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">可以写一个固定的属性在前面,classes太长可以在函数中返回</span><br><span class="line"><span class="javascript">&lt;h2 <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;title&quot;</span> :<span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;classes&quot;</span>&gt;Hello World&lt;/h2&gt;</span></span><br><span class="line"></span><br><span class="line">数组语法</span><br><span class="line"><span class="javascript">&lt;h2 <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;title&quot;</span> :<span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;[active,line]&quot;</span>&gt;Hello World&lt;/h2&gt;</span></span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">练习</span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line">                &lt;li</span><br><span class="line"><span class="javascript">                    v-<span class="keyword">for</span>=<span class="string">&quot;(item,index) in message&quot;</span></span></span><br><span class="line"><span class="javascript">                    @click=<span class="string">&quot;clickIndex=index&quot;</span></span></span><br><span class="line"><span class="javascript">                    :<span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;&#123;active:clickIndex==index&#125;&quot;</span></span></span><br><span class="line">                &gt;</span><br><span class="line"><span class="handlebars"><span class="xml">                    </span><span class="template-variable">&#123;&#123;<span class="name">item</span>&#125;&#125;</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">                data: &#123;</span><br><span class="line"><span class="javascript">                    message: [<span class="string">&quot;海王&quot;</span>, <span class="string">&quot;海尔兄弟&quot;</span>, <span class="string">&quot;火影忍者&quot;</span>, <span class="string">&quot;进击的巨人&quot;</span>],</span></span><br><span class="line">                    clickIndex: -1,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">绑定sytle</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;fontSize:finSize+&#x27;px&#x27;&#125;&quot;</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">                data: &#123;</span><br><span class="line"><span class="javascript">                    message: <span class="string">&quot;Hello&quot;</span>,</span></span><br><span class="line">                    finSize: 100,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> &quot; <span class="attr">:style</span>=<span class="string">&quot;[active,line]&quot;</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-计算属性"><a href="#3-计算属性" class="headerlink" title="3.计算属性"></a>3.计算属性</h3><h4 id="1-基本操作"><a href="#1-基本操作" class="headerlink" title="(1).基本操作"></a>(1).基本操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line"> fullName: function () &#123;</span><br><span class="line">return this.firstName + &quot; &quot; + this.lastName;</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br></pre></td></tr></table></figure><h4 id="2-复杂操作"><a href="#2-复杂操作" class="headerlink" title="(2).复杂操作"></a>(2).复杂操作</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">      totalPrice: function () &#123;</span><br><span class="line">      let result = 0;</span><br><span class="line">      for (let i = 0; i &lt; this.books.length; i++) &#123;</span><br><span class="line">               result += this.books[i].price;</span><br><span class="line">                      &#125;</span><br><span class="line">                      return result;</span><br><span class="line">                  &#125;,</span><br><span class="line">              &#125;,</span><br></pre></td></tr></table></figure><h4 id="3-setter-getter"><a href="#3-setter-getter" class="headerlink" title="(3).setter / getter"></a>(3).setter / getter</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> computed: &#123;</span><br><span class="line">                    fullName: &#123;</span><br><span class="line">//一般没有set方法,只读属性 set: function () &#123;&#125;,</span><br><span class="line">                        </span><br><span class="line">                        get: function () &#123;</span><br><span class="line">                            return this.firstName + &quot; &quot; + lastName;</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">get方法的简写</span><br><span class="line"> computed: &#123;</span><br><span class="line">                    fullName: function () &#123;</span><br><span class="line">                            return this.firstName + &quot; &quot; + lastName;</span><br><span class="line">                        &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line"></span><br><span class="line">set方法</span><br><span class="line">set: function (newValue) &#123;</span><br><span class="line">const names = newValue.split(&#x27; &#x27;)</span><br><span class="line"></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="4-计算属性的缓存"><a href="#4-计算属性的缓存" class="headerlink" title="(4).计算属性的缓存"></a>(4).计算属性的缓存</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">计算属性会有缓存,运行次数会变少</span><br></pre></td></tr></table></figure><h3 id="4-v-on"><a href="#4-v-on" class="headerlink" title="4.v-on"></a>4.v-on</h3><h4 id="1-使用"><a href="#1-使用" class="headerlink" title="(1).使用"></a>(1).使用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@click=&quot;方法&quot;</span><br><span class="line">1.</span><br><span class="line">vue会将event对象作为参数传递到方法当中</span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;test&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">test(event)&#123;&#125;</span><br><span class="line"></span><br><span class="line">2.有时候我们除了event对象还需要传入其他参数</span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;test(abc,$event)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">test(abc,event)&#123;&#125;</span><br></pre></td></tr></table></figure><h4 id="2-修饰符"><a href="#2-修饰符" class="headerlink" title="(2).修饰符"></a>(2).修饰符</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">阻止冒泡-&gt;stop</span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.stop</span>=<span class="string">&quot;test&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">阻止默认事件-&gt;prevent</span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;test&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">监听键盘点击-&gt;keyup keyup.enter回车 </span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">keyup</span>=<span class="string">&quot;test&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">只触发一次回调-&gt;once </span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">&quot;test&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-v-if"><a href="#5-v-if" class="headerlink" title="5.v-if"></a>5.v-if</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;false&quot;</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;false&quot;</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">h3</span> <span class="attr">v-else</span>&gt;</span>false<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;score&gt;90&quot;</span>&gt;</span>优秀<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-else-if</span>=<span class="string">&quot;score&gt;60&quot;</span>&gt;</span>良好<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">v-else</span>&gt;</span>及格<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line">加入key可以让vue不复用dom</span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span>用户账号<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;账号登录&quot;</span> <span class="attr">key</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span>邮箱登录<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;邮箱登录&quot;</span> <span class="attr">key</span>=<span class="string">&quot;email&quot;</span> /&gt;</span></span><br><span class="line">                </span><br></pre></td></tr></table></figure><h3 id="6-v-show"><a href="#6-v-show" class="headerlink" title="6.v-show"></a>6.v-show</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;flag&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span>用户账号<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;账号登录&quot;</span> <span class="attr">key</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">v-if是操作dom树</span><br><span class="line">v-show是通过内联样式设置display=none隐藏</span><br><span class="line">如果是切换频繁的元素,建议v-show</span><br></pre></td></tr></table></figure><h3 id="7-v-for"><a href="#7-v-for" class="headerlink" title="7.v-for"></a>7.v-for</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">遍历数组</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in arr&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in arr&quot;</span>&gt;</span>&#123;&#123;index+1&#125;&#125; &#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">遍历对象</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;value in arr&quot;</span>&gt;</span>&#123;&#123;value&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value,key) in arr&quot;</span>&gt;</span>&#123;&#123;key&#125;&#125; &#123;&#123;value&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value,key,index) in arr&quot;</span>&gt;</span>&#123;&#123;key&#125;&#125; &#123;&#123;value&#125;&#125; &#123;&#123;index&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">绑定key使得dom效率更高</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in info&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-数组的响应式"><a href="#1-数组的响应式" class="headerlink" title="(1).数组的响应式"></a>(1).数组的响应式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">响应式</span><br><span class="line">push</span><br><span class="line">splice</span><br><span class="line">unshift</span><br><span class="line">shift</span><br><span class="line">sort</span><br><span class="line">reverse</span><br><span class="line">非响应式</span><br><span class="line">索引值修改元素</span><br><span class="line"></span><br><span class="line">vue的方式 set</span><br><span class="line">Vue.set(this.letter,0,&#x27;修改后的值&#x27;)</span><br></pre></td></tr></table></figure><h3 id="8-过滤器"><a href="#8-过滤器" class="headerlink" title="8.过滤器"></a>8.过滤器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">可以对一些东西进行一些操作</span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.price|showPrice&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">filters: &#123;</span><br><span class="line">                    showPrice(price) &#123;</span><br><span class="line">                        return &quot;$&quot; + price.toFixed(2);</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br></pre></td></tr></table></figure><h3 id="9-练习"><a href="#9-练习" class="headerlink" title="9.练习"></a>9.练习</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./style.css&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">            <span class="selector-attr">[v-cloak]</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="attribute">display</span>: none;</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">v-cloak</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>书籍名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>出版日期<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>价格<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>购买数量<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in books&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.date&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.price|showPrice&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sub(index)&quot;</span> <span class="attr">:disabled</span>=<span class="string">&quot;item.count &lt;=1&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                            &#123;&#123;item.count&#125;&#125;</span><br><span class="line">                            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add(index)&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;removeBook(index)&quot;</span>&gt;</span>移出<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>总价: &#123;&#123;totalPrice|showPrice&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">                data: &#123;</span><br><span class="line">                    books: [</span><br><span class="line"><span class="javascript">                        &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&quot;《算法导论》&quot;</span>, <span class="attr">date</span>: <span class="string">&quot;2006-9&quot;</span>, <span class="attr">price</span>: <span class="number">85.0</span>, <span class="attr">count</span>: <span class="number">1</span> &#125;,</span></span><br><span class="line"><span class="javascript">                        &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&quot;《JAVA》&quot;</span>, <span class="attr">date</span>: <span class="string">&quot;2006-1&quot;</span>, <span class="attr">price</span>: <span class="number">59.0</span>, <span class="attr">count</span>: <span class="number">1</span> &#125;,</span></span><br><span class="line"><span class="javascript">                        &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&quot;《编程珠玑》&quot;</span>, <span class="attr">date</span>: <span class="string">&quot;2006-10&quot;</span>, <span class="attr">price</span>: <span class="number">39.0</span>, <span class="attr">count</span>: <span class="number">1</span> &#125;,</span></span><br><span class="line"><span class="javascript">                        &#123; <span class="attr">id</span>: <span class="number">4</span>, <span class="attr">name</span>: <span class="string">&quot;《代码大全》&quot;</span>, <span class="attr">date</span>: <span class="string">&quot;2016-9&quot;</span>, <span class="attr">price</span>: <span class="number">128.0</span>, <span class="attr">count</span>: <span class="number">2</span> &#125;,</span></span><br><span class="line">                    ],</span><br><span class="line">                &#125;,</span><br><span class="line">                methods: &#123;</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">add</span>(<span class="params">index</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.books[index].count++;</span></span><br><span class="line">                    &#125;,</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">sub</span>(<span class="params">index</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.books[index].count--;</span></span><br><span class="line">                    &#125;,</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">removeBook</span>(<span class="params">index</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.books.splice(index, <span class="number">1</span>);</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">                computed: &#123;</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">totalPrice</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> temp = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> <span class="built_in">this</span>.books) &#123;</span></span><br><span class="line">                            temp += i.price * i.count;</span><br><span class="line">                        &#125;</span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> temp;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">                filters: &#123;</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">showPrice</span>(<span class="params">price</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> <span class="string">&quot;$&quot;</span> + price.toFixed(<span class="number">2</span>);</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="10-v-model"><a href="#10-v-model" class="headerlink" title="10.v-model"></a>10.v-model</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据的双向绑定</span><br><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> v-model=<span class="string">&quot;message&quot;</span> /&gt;</span><br><span class="line">    </span><br><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> :value=<span class="string">&quot;message&quot;</span> @input=<span class="string">&quot;message=$event.target.value&quot;</span> /&gt;</span><br></pre></td></tr></table></figure><h4 id="1-radio"><a href="#1-radio" class="headerlink" title="1.radio"></a>1.radio</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="tag">                &gt;</span>男<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="tag">                &gt;</span>女<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123&quot;</span> /&gt;</span></span><br><span class="line">message: &quot;男&quot;,</span><br></pre></td></tr></table></figure><h4 id="2-checkbox"><a href="#2-checkbox" class="headerlink" title="2.checkbox"></a>2.checkbox</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span> /&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span> /&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span> /&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span> /&gt;</span></span><br><span class="line">message: [],</span><br></pre></td></tr></table></figure><h4 id="3-select"><a href="#3-select" class="headerlink" title="3.select"></a>3.select</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">单选            </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;123&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;fruit&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">多选         <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;123&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;fruit&quot;</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-值绑定"><a href="#4-值绑定" class="headerlink" title="4.值绑定"></a>4.值绑定</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">:for</span>=<span class="string">&quot;item&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;item in originHobbies&quot;</span></span></span><br><span class="line"><span class="tag">                &gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;item&quot;</span> <span class="attr">:id</span>=<span class="string">&quot;item&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;hobby&quot;</span> /&gt;</span>&#123;&#123;item&#125;&#125;&lt;/label</span><br><span class="line">&gt;</span><br><span class="line"></span><br><span class="line">originHobbies: [&quot;篮球&quot;, &quot;足球&quot;, &quot;乒乓球&quot;],</span><br><span class="line">hobby: [],</span><br></pre></td></tr></table></figure><h4 id="5-修饰符"><a href="#5-修饰符" class="headerlink" title="5.修饰符"></a>5.修饰符</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">lazy 失去焦点或者回车才记载数据</span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;&quot;</span>&gt;</span>输入: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.lazy</span>=<span class="string">&quot;hobby&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">number 输入数字</span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;&quot;</span>&gt;</span>输入: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.number</span>=<span class="string">&quot;hobby&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">trim去除两边空格</span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;&quot;</span>&gt;</span>输入: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model.trim</span>=<span class="string">&quot;hobby&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="三-组件化"><a href="#三-组件化" class="headerlink" title="三.组件化"></a>三.组件化</h2><h3 id="1-创建组件构造器"><a href="#1-创建组件构造器" class="headerlink" title="1.创建组件构造器"></a>1.创建组件构造器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">const cpnC = Vue.extend(&#123;</span><br><span class="line">                template: `</span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>titile<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                `,</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-注册组件"><a href="#2-注册组件" class="headerlink" title="2.注册组件"></a>2.注册组件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">全局注册,可以在多个vue实例下使用</span><br><span class="line"> Vue.component(&quot;cpn&quot;, cpnC);</span><br><span class="line">第一个参数为为组件标签名,第二个为组件构造器</span><br><span class="line"></span><br><span class="line">局部组件</span><br><span class="line">const app &#x3D; new Vue(&#123;</span><br><span class="line">                el: &quot;#app&quot;,</span><br><span class="line">                data: &#123;&#125;,</span><br><span class="line">                methods: &#123;&#125;,</span><br><span class="line">                components: &#123;</span><br><span class="line">                    cpn: cpnC,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">注册组件的语法糖</span><br><span class="line"> Vue.component(&quot;cpn&quot;, &#123;</span><br><span class="line">                template: &#96;</span><br><span class="line">                &lt;div&gt;</span><br><span class="line">                &lt;h2&gt;titile&lt;&#x2F;h2&gt;</span><br><span class="line">                &lt;p&gt;我是内容1&lt;&#x2F;p&gt;</span><br><span class="line">                &lt;p&gt;我是内容2&lt;&#x2F;p&gt;</span><br><span class="line">                &lt;&#x2F;div&gt;</span><br><span class="line">                &#96;,</span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure><h3 id="3-使用组件"><a href="#3-使用组件" class="headerlink" title="3.使用组件"></a>3.使用组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">必须挂载到vue实例下</span><br></pre></td></tr></table></figure><h4 id="3-1-最佳"><a href="#3-1-最佳" class="headerlink" title="3-1.最佳"></a>3-1.最佳</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">const</span> cpn = &#123;</span></span><br><span class="line"><span class="javascript">              template: <span class="string">&quot;#cpn&quot;</span>,</span></span><br><span class="line">          &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">          <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">              el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">              data: &#123;  &#125;,</span><br><span class="line">              methods: &#123;&#125;,</span><br><span class="line">              components: &#123;</span><br><span class="line">                  cpn,</span><br><span class="line">              &#125;,</span><br><span class="line">          &#125;);</span><br><span class="line">      <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-父子组件"><a href="#4-父子组件" class="headerlink" title="4.父子组件"></a>4.父子组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">         const cpnC1 = Vue.extend(&#123;</span><br><span class="line">             template: `</span><br><span class="line">             <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">h2</span>&gt;</span>titile<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是儿子<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">             `,</span><br><span class="line">         &#125;);</span><br><span class="line">         const cpnC2 = Vue.extend(&#123;</span><br><span class="line">             template: `</span><br><span class="line">             <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">h2</span>&gt;</span>titile<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是父亲<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">cpn1</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn1</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">             `,</span><br><span class="line">             components: &#123;</span><br><span class="line">                 cpn1: cpnC1,</span><br><span class="line">             &#125;,</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root组件</span><br><span class="line">         const app = new Vue(&#123;</span><br><span class="line">             el: &quot;#app&quot;,</span><br><span class="line">             data: &#123;&#125;,</span><br><span class="line">             methods: &#123;&#125;,</span><br><span class="line">             components: &#123;</span><br><span class="line">                 cpn2: cpnC2,</span><br><span class="line">             &#125;,</span><br><span class="line">         &#125;);</span><br></pre></td></tr></table></figure><h3 id="5-组件模板"><a href="#5-组件模板" class="headerlink" title="5.组件模板"></a>5.组件模板</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1.        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/x-template&quot;</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>titile<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是哈哈哈<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">2.</span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>titile<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是哈哈哈<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-组件的data为什么必须是函数"><a href="#6-组件的data为什么必须是函数" class="headerlink" title="6.组件的data为什么必须是函数"></a>6.组件的data为什么必须是函数</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"> const cpnC1 = Vue.extend(&#123;</span><br><span class="line">                template: cpn,</span><br><span class="line">                data() &#123;</span><br><span class="line">                    return &#123;</span><br><span class="line">                        title: &quot;我是title&quot;,</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">      Vue.component(&quot;cpn&quot;, &#123;</span><br><span class="line">        template: &quot;#cpn&quot;,</span><br><span class="line">           data() &#123;</span><br><span class="line">          return &#123;</span><br><span class="line">            counter: 0,</span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">如果返回的是一个对象,那组件用的都是一个对象的内容,会造成连锁反应</span><br><span class="line"></span><br><span class="line">如果需要返回同一个对象,可以使用下面的写法</span><br><span class="line">const obj = &#123;</span><br><span class="line">        counter: 0,</span><br><span class="line">      &#125;;</span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">        data() &#123;</span><br><span class="line">          return obj;</span><br><span class="line">        &#125;,</span><br></pre></td></tr></table></figure><h3 id="7-父子组件之间的通信"><a href="#7-父子组件之间的通信" class="headerlink" title="7.父子组件之间的通信"></a>7.父子组件之间的通信</h3><h4 id="1-父向子通信"><a href="#1-父向子通信" class="headerlink" title="1.父向子通信"></a>1.父向子通信</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">props</span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">cpn1</span> <span class="attr">:cmovies</span>=<span class="string">&quot;movies&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in cmovies&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">1.使用数组</span><br><span class="line"> props: [&quot;cmovies&quot;],</span><br><span class="line"></span><br><span class="line">2.使用对象</span><br><span class="line">props: &#123;</span><br><span class="line">cmovies: Array,</span><br><span class="line"> &#125;,</span><br><span class="line"></span><br><span class="line">字符串</span><br><span class="line">props: &#123;</span><br><span class="line">cmovies: &#123;</span><br><span class="line">type: String,</span><br><span class="line">default: &quot;aaaa&quot;,</span><br><span class="line">required: true,</span><br><span class="line"> &#125;,</span><br><span class="line"> &#125;,</span><br><span class="line">对象或者数组 默认值必须以工厂函数返回一个默认值</span><br><span class="line">props: &#123;</span><br><span class="line">cmovies: &#123;</span><br><span class="line">type: Array,</span><br><span class="line">default() &#123;</span><br><span class="line">        return [];</span><br><span class="line">        &#125;</span><br><span class="line">required: true,</span><br><span class="line"> &#125;,</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><h4 id="2-子向父通信"><a href="#2-子向父通信" class="headerlink" title="2.子向父通信"></a>2.子向父通信</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">自定义事件</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">      //接受子组件过来的事件</span><br><span class="line">            <span class="tag">&lt;<span class="name">cpn</span> @<span class="attr">item-click</span>=<span class="string">&quot;cpnClick&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-for</span>=<span class="string">&quot;item in categories&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;btnClick(item)&quot;</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> cpn = &#123;</span></span><br><span class="line"><span class="javascript">                template: <span class="string">&quot;#cpn&quot;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> &#123;</span></span><br><span class="line">                        categories: [</span><br><span class="line">                            &#123;</span><br><span class="line"><span class="javascript">                                id: <span class="string">&quot;1&quot;</span>,</span></span><br><span class="line"><span class="javascript">                                name: <span class="string">&quot;热门推荐&quot;</span>,</span></span><br><span class="line">                            &#125;,</span><br><span class="line">                            &#123;</span><br><span class="line"><span class="javascript">                                id: <span class="string">&quot;2&quot;</span>,</span></span><br><span class="line"><span class="javascript">                                name: <span class="string">&quot;手机数码&quot;</span>,</span></span><br><span class="line">                            &#125;,</span><br><span class="line">                            &#123;</span><br><span class="line"><span class="javascript">                                id: <span class="string">&quot;3&quot;</span>,</span></span><br><span class="line"><span class="javascript">                                name: <span class="string">&quot;家用家电&quot;</span>,</span></span><br><span class="line">                            &#125;,</span><br><span class="line">                            &#123;</span><br><span class="line"><span class="javascript">                                id: <span class="string">&quot;4&quot;</span>,</span></span><br><span class="line"><span class="javascript">                                name: <span class="string">&quot;电脑办公&quot;</span>,</span></span><br><span class="line">                            &#125;,</span><br><span class="line">                        ],</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;,</span><br><span class="line">                methods: &#123;</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">btnClick</span>(<span class="params">item</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">//发射到父组件</span></span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.$emit(<span class="string">&quot;item-click&quot;</span>, item);</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">                el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">                data: &#123; movies: [1, 2, 3, 4, 5] &#125;,</span><br><span class="line">                methods: &#123;</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">cpnClick</span>(<span class="params">item</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(item.name);</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">                components: &#123;</span><br><span class="line">                    cpn,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-父访问子"><a href="#3-父访问子" class="headerlink" title="3.父访问子"></a>3.父访问子</h4><h5 id="1-children"><a href="#1-children" class="headerlink" title="(1).$children"></a>(1).$children</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">const app = new Vue(&#123;</span><br><span class="line">               el: &quot;#app&quot;,</span><br><span class="line">               data: &#123;</span><br><span class="line">                   message: &quot;&quot;,</span><br><span class="line">               &#125;,</span><br><span class="line">               methods: &#123;</span><br><span class="line">                   btnClick() &#123;</span><br><span class="line">                       console.log(this.$children);</span><br><span class="line"></span><br><span class="line">                       for (let i of this.$children) &#123;</span><br><span class="line">                           console.log(i.name);</span><br><span class="line">                           i.showMessage();</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;,</span><br><span class="line">               &#125;,</span><br><span class="line">               components: &#123;</span><br><span class="line">                   cpn: &#123;</span><br><span class="line">                       template: &quot;#cpn&quot;,</span><br><span class="line">                       data() &#123;</span><br><span class="line">                           return &#123;</span><br><span class="line">                               name: &quot;woshi cpn&quot;,</span><br><span class="line">                           &#125;;</span><br><span class="line">                       &#125;,</span><br><span class="line">                       methods: &#123;</span><br><span class="line">                           showMessage() &#123;</span><br><span class="line">                               console.log(&quot;123&quot;);</span><br><span class="line">                           &#125;,</span><br><span class="line">                       &#125;,</span><br><span class="line">                   &#125;,</span><br><span class="line">               &#125;,</span><br><span class="line">           &#125;);</span><br></pre></td></tr></table></figure><h5 id="2-refs"><a href="#2-refs" class="headerlink" title="(2).$refs"></a>(2).$refs</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cpn</span> <span class="attr">ref</span>=<span class="string">&quot;aaa&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">默认是一个空对象,必须在组件标签加入ref=&quot;aaa&quot;</span><br><span class="line">const app = new Vue(&#123;</span><br><span class="line">                el: &quot;#app&quot;,</span><br><span class="line">                data: &#123;</span><br><span class="line">                    message: &quot;&quot;,</span><br><span class="line">                &#125;,</span><br><span class="line">                methods: &#123;</span><br><span class="line">                    btnClick() &#123;</span><br><span class="line">                        console.log(this.$refs);</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">                components: &#123;</span><br><span class="line">                    cpn: &#123;</span><br><span class="line">                        template: &quot;#cpn&quot;,</span><br><span class="line">                        data() &#123;</span><br><span class="line">                            return &#123;</span><br><span class="line">                                name: &quot;woshi cpn&quot;,</span><br><span class="line">                            &#125;;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        methods: &#123;</span><br><span class="line">                            showMessage() &#123;</span><br><span class="line">                                console.log(&quot;123&quot;);</span><br><span class="line">                            &#125;,</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br></pre></td></tr></table></figure><h4 id="4-子访问父"><a href="#4-子访问父" class="headerlink" title="4.子访问父"></a>4.子访问父</h4><h5 id="1-parent"><a href="#1-parent" class="headerlink" title="(1).parent"></a>(1).parent</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">const app = new Vue(&#123;</span><br><span class="line">               el: &quot;#app&quot;,</span><br><span class="line">               data: &#123;</span><br><span class="line">                   message: &quot;123&quot;,</span><br><span class="line">               &#125;,</span><br><span class="line">               methods: &#123;&#125;,</span><br><span class="line">               components: &#123;</span><br><span class="line">                   cpn: &#123;</span><br><span class="line">                       template: &quot;#cpn&quot;,</span><br><span class="line"></span><br><span class="line">                       methods: &#123;</span><br><span class="line">                           btnClick() &#123;</span><br><span class="line">                               console.log(this.$parent);</span><br><span class="line">                           &#125;,</span><br><span class="line">                       &#125;,</span><br><span class="line">                   &#125;,</span><br><span class="line">               &#125;,</span><br><span class="line">           &#125;);</span><br></pre></td></tr></table></figure><h3 id="8-插槽slot"><a href="#8-插槽slot" class="headerlink" title="8.插槽slot"></a>8.插槽slot</h3><h4 id="1-基本使用"><a href="#1-基本使用" class="headerlink" title="1.基本使用"></a>1.基本使用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">为了让我们的组件有更好的扩展性</span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>我是组件<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">slot可以设置一个默认值</span><br><span class="line"><span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;<span class="name">button</span>&gt;</span>插槽<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-具名插槽的使用"><a href="#2-具名插槽的使用" class="headerlink" title="2.具名插槽的使用"></a>2.具名插槽的使用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">使用</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Here might be a page title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:default</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>A paragraph for the main content.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>And another one.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Here&#x27;s some contact info<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">模板</span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;cpn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;footer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">显示</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Here might be a page title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>A paragraph for the main content.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>And another one.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Here&#x27;s some contact info<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-编译作用域"><a href="#3-编译作用域" class="headerlink" title="3.编译作用域"></a>3.编译作用域</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在哪里使用,作用域就在哪里</span><br><span class="line">父找父 子找子</span><br></pre></td></tr></table></figure><h4 id="4-作用域插槽的使用"><a href="#4-作用域插槽的使用" class="headerlink" title="4.作用域插槽的使用"></a>4.作用域插槽的使用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">父组件替换插槽的标签,但是内容由子组件来提供</span><br><span class="line"><span class="tag">&lt;<span class="name">current-user</span>&gt;</span></span><br><span class="line">    子组件</span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">slot</span> <span class="attr">:user</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; user.lastName &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">current-user</span>&gt;</span></span><br><span class="line"></span><br><span class="line">使用</span><br><span class="line"><span class="tag">&lt;<span class="name">current-user</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot</span>=<span class="string">&quot;slotProps&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; slotProps.user.firstName &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">current-user</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="四-模块化开发"><a href="#四-模块化开发" class="headerlink" title="四.模块化开发"></a>四.模块化开发</h2><h3 id="1-匿名函数解决"><a href="#1-匿名函数解决" class="headerlink" title="1.匿名函数解决"></a>1.匿名函数解决</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">(function()&#123;</span><br><span class="line">&#125;)()</span><br><span class="line">会造成无法复用一些代码段</span><br><span class="line"></span><br><span class="line">导出对象</span><br><span class="line">let obj = &#123;&#125;;</span><br><span class="line">obj.flag = flag;</span><br><span class="line">obj.sun = sun;</span><br><span class="line">return obj</span><br><span class="line">然后就可以使用对象里面的东西了</span><br><span class="line">我们只需要保证模块名称不一样</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-commonJs"><a href="#2-commonJs" class="headerlink" title="2.commonJs"></a>2.commonJs</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">导出</span><br><span class="line">module.exports = &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">导入</span><br><span class="line">let &#123;xx,xx&#125; = require(&quot;文件名&quot;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-ES"><a href="#3-ES" class="headerlink" title="3.ES"></a>3.ES</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">需要设置html代码引入js文件的类型设置为module</span><br><span class="line">export &#123;</span><br><span class="line">flag,sum</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import &#123; &#125; from &quot;文件名&quot;;</span><br></pre></td></tr></table></figure><h2 id="五-webpack"><a href="#五-webpack" class="headerlink" title="五.webpack"></a>五.webpack</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">模块化打包工具</span><br><span class="line"></span><br><span class="line">webpack .\src\main.js dist/bundle.js</span><br></pre></td></tr></table></figure><h3 id="1-config"><a href="#1-config" class="headerlink" title="1.config"></a>1.config</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">npm install webpack@<span class="number">3.6</span><span class="number">.0</span> -g 全局安装</span><br><span class="line"></span><br><span class="line">npm init 初始化</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: <span class="string">&quot;./src/main.js&quot;</span>,</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.join(__dirname, <span class="string">&quot;dist&quot;</span>),</span><br><span class="line">        filename: <span class="string">&quot;bundle.js&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">配置 npm run build</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;meetwevpack&quot;</span>,</span><br><span class="line">  <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">  <span class="string">&quot;description&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;main&quot;</span>: <span class="string">&quot;index.js&quot;</span>,</span><br><span class="line">  <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;test&quot;</span>: <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build&quot;</span>: <span class="string">&quot;webpack&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;author&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;license&quot;</span>: <span class="string">&quot;ISC&quot;</span>,</span><br><span class="line">  <span class="string">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;webpack&quot;</span>: <span class="string">&quot;^3.6.0&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">npm install webpack@<span class="number">3.6</span><span class="number">.0</span> --save--dev 局部安装</span><br></pre></td></tr></table></figure><h3 id="2-loader"><a href="#2-loader" class="headerlink" title="2.loader"></a>2.loader</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">&quot;./src/main.js&quot;</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    path: path.resolve(__dirname, <span class="string">&quot;dist&quot;</span>),</span><br><span class="line">    filename: <span class="string">&quot;bundle.js&quot;</span>,</span><br><span class="line">    <span class="comment">// 涉及到url自动添加路径</span></span><br><span class="line">    publicPath: <span class="string">&quot;dist/&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 转义. 匹配所有css文件</span></span><br><span class="line">        test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        <span class="comment">// css-loader只负责将css文件进行加载</span></span><br><span class="line">        <span class="comment">// style-loader负责将样式添加到DOM中</span></span><br><span class="line">        <span class="comment">// 使用多个loader的时候，从右向左读取</span></span><br><span class="line">        use: [<span class="string">&quot;style-loader&quot;</span>, <span class="string">&quot;css-loader&quot;</span>],</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">&quot;style-loader&quot;</span>, <span class="comment">// 从 JS 中创建样式节点</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">&quot;css-loader&quot;</span>, <span class="comment">// 转化 CSS 为 CommonJS</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">&quot;less-loader&quot;</span>, <span class="comment">// 编译 Less 为 CSS</span></span><br><span class="line">          &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.(png|jpg|gif)$/i</span>,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">&quot;url-loader&quot;</span>,</span><br><span class="line">            options: &#123;</span><br><span class="line">              <span class="comment">// 当加载的图片小于limit时，会将图片编译成base64字符串形式</span></span><br><span class="line">              <span class="comment">// 大于的话会报错，Cannot find module &#x27;file-loader&#x27;</span></span><br><span class="line">              <span class="comment">// npm install file-loader --save-dev</span></span><br><span class="line">              <span class="comment">// 没有显示？报错文件找不到 路径 b939991dba660315bb66570ce2e58b6b.jpg</span></span><br><span class="line">              <span class="comment">// base64不需要单独的文件进行存储</span></span><br><span class="line">              <span class="comment">// 文件需要打包 添加publicPath</span></span><br><span class="line">              limit: <span class="number">8000</span>,</span><br><span class="line">              <span class="comment">// 命名规范</span></span><br><span class="line">              name: <span class="string">&quot;img/[name].[hash:8].[ext]&quot;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.m?js$/</span>,</span><br><span class="line">        <span class="comment">// 排除</span></span><br><span class="line">        exclude: <span class="regexp">/(node_modules|bower_components)/</span>,</span><br><span class="line">        use: &#123;</span><br><span class="line">          loader: <span class="string">&quot;babel-loader&quot;</span>,</span><br><span class="line">          options: &#123;</span><br><span class="line">            presets: [<span class="string">&quot;es2015&quot;</span>],</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  resolve: &#123;</span><br><span class="line">        <span class="comment">// 扩展名省略</span></span><br><span class="line">        extensions: [<span class="string">&quot;.js&quot;</span>, <span class="string">&quot;.css&quot;</span>, <span class="string">&quot;.vue&quot;</span>],</span><br><span class="line">        alias: &#123;</span><br><span class="line">            vue$: <span class="string">&quot;vue/dist/vue.esm.js&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> webpack.BannerPlugin(<span class="string">&quot;最终版权归aaa所有&quot;</span>),</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: <span class="string">&quot;index.html&quot;</span>,</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="comment">// 开发阶段不推荐打开 js代码压缩</span></span><br><span class="line">        <span class="comment">// new UglifyjsWebpackPlugin(),</span></span><br><span class="line">    ],</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        <span class="comment">//为哪一个文件进行服务</span></span><br><span class="line">        contentBase: <span class="string">&quot;./dist&quot;</span>,</span><br><span class="line">        <span class="comment">// 是否实时更新</span></span><br><span class="line">        inline: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h2 id="六-Vue-cli"><a href="#六-Vue-cli" class="headerlink" title="六.Vue-cli"></a>六.Vue-cli</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue&#x2F;li</span><br><span class="line"> npm install @vue&#x2F;cli-init -g</span><br><span class="line"></span><br><span class="line">vue init webpack demo 项目初始化</span><br><span class="line"></span><br><span class="line">vue create xxx</span><br></pre></td></tr></table></figure><h2 id="七-vue-router"><a href="#七-vue-router" class="headerlink" title="七.vue-router"></a>七.vue-router</h2><h4 id="1-路由操作"><a href="#1-路由操作" class="headerlink" title="1.路由操作"></a>1.路由操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">location.hash &#x3D; &#39;&#39;</span><br><span class="line">location.href &#x3D; &#39;&#39;</span><br><span class="line">history.pushState.(&#123;&#125;,&#39;&#39;,&#39;home&#39;)</span><br><span class="line">history.foward()</span><br><span class="line">history.back()</span><br><span class="line">任意回退</span><br><span class="line">history.go()</span><br><span class="line">回退不可以点击</span><br><span class="line">histrory.repalceState(&#123;&#125;,&#39;&#39;,&#39;about&#39;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-vue-router"><a href="#2-vue-router" class="headerlink" title="2.vue-router"></a>2.vue-router</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link to&#x3D;&quot;&#x2F;home&quot;&gt;Home&lt;&#x2F;router-link&gt; |</span><br><span class="line">&lt;router-link to&#x3D;&quot;&#x2F;about&quot;&gt;About&lt;&#x2F;router-link&gt;</span><br><span class="line"></span><br><span class="line">显示的标签</span><br><span class="line">&lt;router-view&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">改为history模式</span><br><span class="line">const router &#x3D; new VueRouter(&#123;</span><br><span class="line">  routes,</span><br><span class="line">  mode: &quot;history&quot;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">botton</span><br><span class="line">    &lt;router-link to&#x3D;&quot;&#x2F;home&quot; tag&#x3D;&quot;button&quot;&gt;首页&lt;&#x2F;router-link&gt;</span><br><span class="line">    &lt;router-link to&#x3D;&quot;&#x2F;about&quot; tag&#x3D;&quot;button&quot;&gt;关于&lt;&#x2F;router-link&gt;</span><br><span class="line"></span><br><span class="line">不能返回</span><br><span class="line"> &lt;router-link to&#x3D;&quot;&#x2F;home&quot; tag&#x3D;&quot;button&quot; replace&gt;首页&lt;&#x2F;router-link&gt;</span><br><span class="line">    &lt;router-link to&#x3D;&quot;&#x2F;about&quot; tag&#x3D;&quot;button&quot; replace&gt;关于&lt;&#x2F;router-link&gt;</span><br><span class="line"></span><br><span class="line">活跃状态的class</span><br><span class="line"> &lt;router-link to&#x3D;&quot;&#x2F;home&quot; tag&#x3D;&quot;button&quot; replace active-class&#x3D;&quot;active&quot;&gt;首页&lt;&#x2F;router-link&gt;</span><br><span class="line">    &lt;router-link to&#x3D;&quot;&#x2F;about&quot; tag&#x3D;&quot;button&quot; replace active-class&#x3D;&quot;active&quot;&gt;关于&lt;&#x2F;router-link&gt;</span><br><span class="line">    或者统一在路由中修改</span><br><span class="line">      routes,</span><br><span class="line">      mode: &quot;history&quot;,</span><br><span class="line">      linkActiveClass: &quot;active&quot;</span><br><span class="line">自己写标签修改路由</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;button @click&#x3D;&quot;home()&quot;&gt;首页&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;button @click&#x3D;&quot;about()&quot;&gt;关于&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;router-view&#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;App&#39;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    home()&#123;</span><br><span class="line">      this.$router.replace(&#39;&#x2F;home&#39;);</span><br><span class="line">    &#125;,about()&#123;</span><br><span class="line">      this.$router.replace(&#39;&#x2F;about&#39;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="3-动态路由"><a href="#3-动态路由" class="headerlink" title="3.动态路由"></a>3.动态路由</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">  &#123;</span><br><span class="line">    path: &quot;&#x2F;user&#x2F;:userid&quot;,</span><br><span class="line">    component: User</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&lt;router-link :to&#x3D;&quot;&#39;&#x2F;user&#x2F;&#39;+userid&quot; &gt;首页&lt;&#x2F;router-link&gt;</span><br><span class="line"></span><br><span class="line">computed:&#123;</span><br><span class="line">       userId()&#123;</span><br><span class="line">           return this.$route.params.userId</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="4-路由的软加载"><a href="#4-路由的软加载" class="headerlink" title="4.路由的软加载"></a>4.路由的软加载</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">const Home &#x3D; () &#x3D;&gt; import(&quot;..&#x2F;components&#x2F;Home.vue&quot;);</span><br><span class="line">const About &#x3D; () &#x3D;&gt; import(&quot;..&#x2F;components&#x2F;About.vue&quot;);</span><br><span class="line">const User &#x3D; () &#x3D;&gt; import(&quot;..&#x2F;components&#x2F;User.vue&quot;);</span><br></pre></td></tr></table></figure><h4 id="5-嵌套路由"><a href="#5-嵌套路由" class="headerlink" title="5.嵌套路由"></a>5.嵌套路由</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h2&gt;我是首页&lt;&#x2F;h2&gt;</span><br><span class="line">        &lt;router-link to&#x3D;&quot;&#x2F;home&#x2F;news&quot;  &gt;新闻&lt;&#x2F;router-link&gt;</span><br><span class="line">        &lt;router-link to&#x3D;&quot;&#x2F;home&#x2F;messages&quot;  &gt;信息&lt;&#x2F;router-link&gt;</span><br><span class="line">        &lt;router-view&gt;&lt;&#x2F;router-view&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">   name:&#39;Home&#39;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> path: &quot;&#x2F;home&quot;,</span><br><span class="line">    component: Home,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: &quot;news&quot;,</span><br><span class="line">        component: News</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: &quot;messages&quot;,</span><br><span class="line">        component: Messages</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure><h4 id="6-传递数据"><a href="#6-传递数据" class="headerlink" title="6.传递数据"></a>6.传递数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> &lt;router-link :to&#x3D;&quot;&#123;path:&#39;&#x2F;profile&#39;,query:&#123;name:id,imgUrl:imgUrl&#125;&#125;&quot; &gt;档案&lt;&#x2F;router-link&gt;</span><br><span class="line">$route.query.name</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="7-全局导航守卫"><a href="#7-全局导航守卫" class="headerlink" title="7.全局导航守卫"></a>7.全局导航守卫</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">前置钩子hook</span><br><span class="line">router.beforeEach((to, from, next) &#x3D;&gt; &#123;</span><br><span class="line">  document.title &#x3D; to.meta.title; &#x2F;&#x2F;to.matched[0].meta.title;</span><br><span class="line">  next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">后置钩子</span><br><span class="line">router.afterEach((to,from)&#x3D;&gt;&#123;</span><br><span class="line">  </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="1-keep-alive"><a href="#1-keep-alive" class="headerlink" title="1.keep-alive"></a>1.keep-alive</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">保留状态</span><br><span class="line"></span><br><span class="line">    &lt;keep-alive &gt;</span><br><span class="line">      &lt;router-view &#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;keep-alive&gt;</span><br><span class="line">排除</span><br><span class="line">exclude&#x3D;&quot;Profile,User&quot;</span><br><span class="line">包含</span><br><span class="line">include </span><br></pre></td></tr></table></figure><h2 id="八-promise"><a href="#八-promise" class="headerlink" title="八.promise"></a>八.promise</h2><h3 id="1-base"><a href="#1-base" class="headerlink" title="1.base"></a>1.base</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;处理ing&quot;</span>);</span><br><span class="line">        resolve();</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;)</span><br><span class="line">    .then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;处理ing2&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                resolve();</span><br><span class="line">            &#125;, <span class="number">1000</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;end&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;处理ing&quot;</span>);</span><br><span class="line">                resolve();</span><br><span class="line">            &#125;, <span class="number">1000</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">            .then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;处理ing2&quot;</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">            .catch(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;处理失败&quot;</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">或者</span><br><span class="line">            <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// resolve(&quot;Hello Vuejs&quot;);</span></span><br><span class="line">                    reject(<span class="string">&quot;error message&quot;</span>);</span><br><span class="line">                &#125;, <span class="number">1000</span>);</span><br><span class="line">            &#125;).then(</span><br><span class="line">                (data) =&gt; &#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(data);</span><br><span class="line">                &#125;,</span><br><span class="line">                (err) =&gt; &#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(err);</span><br><span class="line">                &#125;</span><br><span class="line">            );</span><br></pre></td></tr></table></figure><h3 id="2-all方法"><a href="#2-all方法" class="headerlink" title="2.all方法"></a>2.all方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.all([<span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;&#125;), <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;&#125;)]);</span><br></pre></td></tr></table></figure><h2 id="九-vuex"><a href="#九-vuex" class="headerlink" title="九.vuex"></a>九.vuex</h2><h3 id="1-初始化"><a href="#1-初始化" class="headerlink" title="1.初始化"></a>1.初始化</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"></span><br><span class="line">Vue.use(Vuex);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">  state: &#123;&#125;,</span><br><span class="line">  mutations: &#123;&#125;,</span><br><span class="line">  actions: &#123;&#125;,</span><br><span class="line">  getters: &#123;&#125;,</span><br><span class="line">  modules: &#123;&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-具体使用"><a href="#2-具体使用" class="headerlink" title="2.具体使用"></a>2.具体使用</h3><blockquote><p>不是响应式想要使用可以使用Vue.set或者Vue.delete方法</p></blockquote><h4 id="1-state-变量"><a href="#1-state-变量" class="headerlink" title="(1).state(变量)"></a>(1).state(变量)</h4><h4 id="2-mutations-方法"><a href="#2-mutations-方法" class="headerlink" title="(2).mutations(方法)"></a>(2).mutations(方法)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">使用  方法(state)&#123;</span><br><span class="line">    state.xxx</span><br><span class="line">&#125;</span><br><span class="line">修改<span class="built_in">this</span>.$store.commit(<span class="string">&#x27;方法名称&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-getters-计算属性"><a href="#3-getters-计算属性" class="headerlink" title="(3).getters(计算属性)"></a>(3).getters(计算属性)</h4><h4 id="4-modules"><a href="#4-modules" class="headerlink" title="(4).modules"></a>(4).modules</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">modules:&#123;</span><br><span class="line">a:&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-action"><a href="#5-action" class="headerlink" title="(5).action"></a>(5).action</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">异步操作</span><br><span class="line"></span><br><span class="line">方法名称(context)&#123;</span><br><span class="line">context.commit(&#39;方法名称&#39;)</span><br><span class="line">&#125;</span><br><span class="line">使用 this.$store.dispatch(&#39;方法名称&#39;)</span><br></pre></td></tr></table></figure><h2 id="十-axios"><a href="#十-axios" class="headerlink" title="十.axios"></a>十.axios</h2><h3 id="1-基本使用-1"><a href="#1-基本使用-1" class="headerlink" title="1.基本使用"></a>1.基本使用</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">axios(&#123;</span><br><span class="line">  url: <span class="string">&quot;http://123.207.32.32:8000/home/multidata&quot;</span>,</span><br><span class="line">  method: <span class="string">&quot;get&quot;</span>,</span><br><span class="line">  parms:&#123;</span><br><span class="line">      </span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">&#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(res);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-并发"><a href="#2-并发" class="headerlink" title="2.并发"></a>2.并发</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">axios</span><br><span class="line">  .all([</span><br><span class="line">    axios(&#123;</span><br><span class="line">      url: <span class="string">&quot;http://123.207.32.32:8000/home/multidata&quot;</span></span><br><span class="line">    &#125;),</span><br><span class="line">    axios(&#123;</span><br><span class="line">      url: <span class="string">&quot;http://123.207.32.32:8000/home/data&quot;</span>,</span><br><span class="line">      params: &#123;</span><br><span class="line">        type: <span class="string">&quot;sell&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  ])</span><br><span class="line">  .then(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(result);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">可以使用spread分割</span><br><span class="line">  .then(</span><br><span class="line">    axios.spread(<span class="function">(<span class="params">res1, res2</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res1);</span><br><span class="line">      <span class="built_in">console</span>.log(res2);</span><br><span class="line">    &#125;)</span><br><span class="line">  );</span><br></pre></td></tr></table></figure><h3 id="3-配置"><a href="#3-配置" class="headerlink" title="3.配置"></a>3.配置</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">全局</span><br><span class="line">axios.defaults.baseURL </span><br><span class="line">axios.defaults.timeout</span><br><span class="line"></span><br><span class="line">创建实例</span><br><span class="line"><span class="keyword">const</span> instance1 = axios.create(&#123;</span><br><span class="line">  baseURL: <span class="string">&quot;http://123.207.32.32:8000&quot;</span>,</span><br><span class="line">  timeout: <span class="number">5000</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">instance1(&#123;</span><br><span class="line">  url: <span class="string">&quot;/home/multidata&quot;</span></span><br><span class="line">&#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(res);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-network文件夹"><a href="#4-network文件夹" class="headerlink" title="4.network文件夹"></a>4.network文件夹</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">最好建立一个network文件专门进行网络请求</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params">config</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> instacne = axios.create(&#123;</span><br><span class="line">      baseURL: <span class="string">&quot;http://152.136.185.210:8000/api/z8&quot;</span>,</span><br><span class="line">      timeout: <span class="number">5000</span>,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送真正的网络请求</span></span><br><span class="line">    instacne(config)</span><br><span class="line">      .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        resolve(res);</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        reject(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">最终版</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params">config</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> instacne = axios.create(&#123;</span><br><span class="line">    baseURL: <span class="string">&quot;http://152.136.185.210:8000/api/z8&quot;</span>,</span><br><span class="line">    timeout: <span class="number">5000</span>,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 发送真正的网络请求</span></span><br><span class="line">  <span class="keyword">return</span> instacne(config); <span class="comment">// 返回值本来就是Promise</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; request &#125; <span class="keyword">from</span> <span class="string">&quot;./network/request&quot;</span>;</span><br><span class="line"></span><br><span class="line">request(&#123;</span><br><span class="line">  url: <span class="string">&quot;/home/multidata&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">  .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h3 id="5-拦截器"><a href="#5-拦截器" class="headerlink" title="5.拦截器"></a>5.拦截器</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params">config</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> instacne = axios.create(&#123;</span><br><span class="line">    baseURL: <span class="string">&quot;http://123.207.32.32:8000&quot;</span>,</span><br><span class="line">    timeout: <span class="number">5000</span></span><br><span class="line">  &#125;);</span><br><span class="line">    <span class="comment">//拦截器</span></span><br><span class="line">  instacne.interceptors.request.use(</span><br><span class="line">    config =&gt; &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(config);</span><br><span class="line">      <span class="keyword">return</span> config;</span><br><span class="line">    &#125;,</span><br><span class="line">    err =&gt; &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;</span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">return</span> instacne(config);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> vue.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> vue.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb基础学习</title>
      <link href="posts/d28fa1b81953/"/>
      <url>posts/d28fa1b81953/</url>
      
        <content type="html"><![CDATA[<h2 id="1-tomcat的配置"><a href="#1-tomcat的配置" class="headerlink" title="1.tomcat的配置"></a>1.tomcat的配置</h2><h3 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h3><p><a href="https://tomcat.apache.org/download-90.cgi?Preferred=https://mirrors.tuna.tsinghua.edu.cn/apache/">tomcat官网下载</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425192907250.png" alt="image-20210425192907250"></p><p>解压到你想要的文件夹</p><p>进入\bin文件夹,打开startup.bat</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425193149448.png" alt="image-20210425193149448"></p><p>访问<a href="http://localhost:8080/">http://localhost:8080/</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425193232982.png" alt="image-20210425193232982"></p><p>成功看到默认</p><h3 id="2-去除乱码"><a href="#2-去除乱码" class="headerlink" title="2.去除乱码"></a>2.去除乱码</h3><p>我们看到上面的打印是乱码的</p><p>打开\conf\logging.properties</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425193359985.png" alt="image-20210425193359985"></p><p>标注的地方修改为GBK即可去除乱码</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425193449206.png" alt="image-20210425193449206"></p><h2 id="2-下载maven"><a href="#2-下载maven" class="headerlink" title="2.下载maven"></a>2.下载maven</h2><p><a href="https://maven.apache.org/download.cgi?Preferred=https://mirrors.tuna.tsinghua.edu.cn/apache/">maven官网下载</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425193745802.png" alt="image-20210425193745802"></p><p>解压</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425193759930.png" alt="image-20210425193759930"></p><h3 id="1-配置环境变量"><a href="#1-配置环境变量" class="headerlink" title="1.配置环境变量"></a>1.配置环境变量</h3><p>MAVEN_HOME</p><p>​    指向maven的根目录如D:\java_web\apache-maven-3.8.1</p><p>M2_HOME </p><p>​    指向maven的根目录下的bin目录如D:\java_web\apache-maven-3.8.1\bin</p><p>在Path中增加%MAVEN_HOME%\bin</p><p>输入mvn -version</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425194235435.png" alt="image-20210425194235435"></p><p>配置完成</p><h3 id="2-添加镜像仓库"><a href="#2-添加镜像仓库" class="headerlink" title="2.添加镜像仓库"></a>2.添加镜像仓库</h3><p>在conf\settings.xml增加如下配置</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425194341266.png" alt="image-20210425194341266"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> &lt;!-- 阿里云中心仓库 --&gt;</span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">       &lt;id&gt;nexus-aliyun&lt;&#x2F;id&gt;</span><br><span class="line">       &lt;mirrorOf&gt;*,!jeecg,!jeecg-snapshots&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">       &lt;name&gt;Nexus aliyun&lt;&#x2F;name&gt;</span><br><span class="line">       &lt;url&gt;http:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&lt;&#x2F;url&gt; </span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br></pre></td></tr></table></figure><h3 id="3-添加本地仓库"><a href="#3-添加本地仓库" class="headerlink" title="3.添加本地仓库"></a>3.添加本地仓库</h3><p>在根目录新建一个maven-repo目录</p><p>在conf\settings.xml增加如下配置</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425194504483.png" alt="image-20210425194504483"></p><h2 id="3-idea在maven中的操作"><a href="#3-idea在maven中的操作" class="headerlink" title="3.idea在maven中的操作"></a>3.idea在maven中的操作</h2><blockquote><p>项目架构管理工具-maven</p><p>Maven: 约定大于配置</p><p>有约束不要去违反</p><p>Maven会规定你要如何编写我们的代码,必须按照这个规范来</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    在build解决maven资源导出(先了解一下)--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-打开设置"><a href="#1-打开设置" class="headerlink" title="1.打开设置"></a>1.打开设置</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425195036950.png" alt="image-20210425195036950"></p><p>创建新项目</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425195326868.png" alt="image-20210425195326868"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425195356211.png" alt="image-20210425195356211"></p><p>在pom.xml中配置引入jsp的相关jar包</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425195518291.png" alt="image-20210425195518291"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jsp-api --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-配置tomcat"><a href="#2-配置tomcat" class="headerlink" title="2.配置tomcat"></a>2.配置tomcat</h3><p>点击右上角</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210427104846978.png" alt="image-20210427104846978"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425195617319.png" alt="image-20210425195617319"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425195620285.png" alt="image-20210425195620285"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425195739478.png" alt="image-20210425195739478"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425195741955.png" alt="image-20210425195741955"></p><p>完成</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425195914109.png" alt="image-20210425195914109"></p><h3 id="3-手动增加java和resources文件夹"><a href="#3-手动增加java和resources文件夹" class="headerlink" title="3.手动增加java和resources文件夹"></a>3.手动增加java和resources文件夹</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425200103728.png" alt="image-20210425200103728"></p><h2 id="4-Servlet"><a href="#4-Servlet" class="headerlink" title="4.Servlet"></a>4.Servlet</h2><blockquote><p>web.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee</span></span></span><br><span class="line"><span class="tag"><span class="string">                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">metadata-complete</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-Servlet简介"><a href="#1-Servlet简介" class="headerlink" title="1 Servlet简介"></a>1 Servlet简介</h3><blockquote><p>sun公司开发动态web的一门技术</p><p>提供一个接口Servlet</p></blockquote><p>实现Servlet的两个类-&gt;HttpServlet和GenericServlet</p><h3 id="2-Servlet"><a href="#2-Servlet" class="headerlink" title="2 Servlet"></a>2 Servlet</h3><blockquote><p>编写自己的实现Servlet接口类来处理请求信息并返回相应,一般通过继承HttpServlet来重写doGet等方法.</p></blockquote><h3 id="3-Maping问题"><a href="#3-Maping问题" class="headerlink" title="3 Maping问题"></a>3 Maping问题</h3><p>​    可以指定一个,多个,通配符映射路径</p><blockquote><p>指定了固有的映射路径优先级最高,如果找不到就走默认的请求</p></blockquote><h3 id="4-ServletContext对象"><a href="#4-ServletContext对象" class="headerlink" title="4 ServletContext对象"></a>4 ServletContext对象</h3><ul><li>共享数据<ul><li>在这个Servlet中保存的数据,可以在另外一个servlet中拿到</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">      ServletContext servletContext = <span class="keyword">this</span>.getServletContext();</span><br><span class="line">      String username = <span class="string">&quot;codelorin&quot;</span>;</span><br><span class="line">      <span class="comment">// 将一个数据保存在Servlet中</span></span><br><span class="line">      servletContext.setAttribute(<span class="string">&quot;username&quot;</span>, username);</span><br><span class="line"></span><br><span class="line">ServletContext servletContext = <span class="keyword">this</span>.getServletContext();</span><br><span class="line">      String username = (String) servletContext.getAttribute(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">      resp.getWriter().print(<span class="string">&quot;username&quot;</span> + <span class="string">&quot;:&quot;</span> + username);</span><br></pre></td></tr></table></figure><ul><li>获取初始化参数</li><li>请求转化</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ServletContext servletContext = <span class="keyword">this</span>.getServletContext();</span><br><span class="line">servletContext.getRequestDispatcher(<span class="string">&quot;/gp&quot;</span>).forward(req,resp);</span><br></pre></td></tr></table></figure><ul><li>properties</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">InputStream resourceAsStream = <span class="keyword">this</span>.getServletContext().getResourceAsStream(<span class="string">&quot;/WEB-INF/classes/db.properties&quot;</span>);</span><br><span class="line"></span><br><span class="line">Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">properties.load(resourceAsStream);</span><br><span class="line">String user = properties.getProperty(<span class="string">&quot;username&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="5-HttpServletResponse"><a href="#5-HttpServletResponse" class="headerlink" title="5 HttpServletResponse"></a>5 HttpServletResponse</h3><blockquote><p>web服务器接收到客户端的http请求,针对这个请求,分别创建了一个代表请求的HttpServletRequest对象,代表响应一个了一个HttpServletResponse</p></blockquote><h4 id="5-1-简单分类"><a href="#5-1-简单分类" class="headerlink" title="5.1.简单分类"></a>5.1.简单分类</h4><ul><li> 发送数据的方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ServletOutputStream <span class="title">getOutputStream</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">PrintWriter <span class="title">getWriter</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span>;</span><br></pre></td></tr></table></figure><h4 id="5-2-常见应用"><a href="#5-2-常见应用" class="headerlink" title="5.2.常见应用"></a>5.2.常见应用</h4><ul><li>输出消息</li><li>下载文件<ul><li>下载文件的文件名</li><li>设置浏览器支持下载的类型</li><li>获取下载的输入流</li><li>创建缓冲区</li><li>获取OutputStream对象</li><li>将FileOutputStream流写入buffer缓冲区</li><li>使用OutputStream将缓冲区的数据输出到客户端</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.获取下载文件的路径</span></span><br><span class="line">String realPath = <span class="string">&quot;D:\\java\\web-study\\httpres\\src\\main\\resources\\1.jpg&quot;</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;下载的路径: &quot;</span> + realPath);</span><br><span class="line"><span class="comment">//2.下载文件的文件名</span></span><br><span class="line">String fileName = realPath.substring(realPath.lastIndexOf(<span class="string">&quot;\\&quot;</span>) + <span class="number">1</span>);</span><br><span class="line"><span class="comment">//3.设置浏览器支持下载的类型</span></span><br><span class="line">resp.setHeader(<span class="string">&quot;Content-disposition&quot;</span>, <span class="string">&quot;attachment;filename&quot;</span> + fileName);</span><br><span class="line"><span class="comment">//4.获取下载的输入流</span></span><br><span class="line">FileInputStream fileInputStream = <span class="keyword">new</span> FileInputStream(realPath);</span><br><span class="line"><span class="comment">//5.创建缓冲区</span></span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="comment">//6.获取OutputStream对象</span></span><br><span class="line">ServletOutputStream out = resp.getOutputStream();</span><br><span class="line"><span class="comment">//7.将FileOutputStream流写入buffer缓冲区,输出到客户端</span></span><br><span class="line"><span class="keyword">while</span> ((len = fileInputStream.read(buffer)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    out.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">&#125;</span><br><span class="line">fileInputStream.close();</span><br><span class="line">out.close();</span><br></pre></td></tr></table></figure><ul><li><p>验证码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">       resp.setHeader(<span class="string">&quot;refresh&quot;</span>, <span class="string">&quot;3&quot;</span>);</span><br><span class="line">  </span><br><span class="line">       <span class="comment">//创建图片</span></span><br><span class="line">       BufferedImage bufferedImage = <span class="keyword">new</span> BufferedImage(<span class="number">80</span>, <span class="number">20</span>, BufferedImage.TYPE_INT_BGR);</span><br><span class="line">       <span class="comment">//得到图片</span></span><br><span class="line">       Graphics2D graphics = (Graphics2D) bufferedImage.getGraphics();</span><br><span class="line">  </span><br><span class="line">       <span class="comment">//设置图片的背景颜色</span></span><br><span class="line">       graphics.setColor(Color.WHITE);</span><br><span class="line">       <span class="comment">//填充背景颜色</span></span><br><span class="line">       graphics.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">20</span>);</span><br><span class="line">       <span class="comment">//给图片写数据</span></span><br><span class="line">       graphics.setColor(Color.BLUE);</span><br><span class="line">       graphics.setFont(<span class="keyword">new</span> Font(<span class="keyword">null</span>, Font.BOLD, <span class="number">20</span>));</span><br><span class="line">       graphics.drawString(makeNum(), <span class="number">0</span>, <span class="number">20</span>);</span><br><span class="line">  </span><br><span class="line">       resp.setContentType(<span class="string">&quot;image/jpeg&quot;</span>);</span><br><span class="line">       resp.setDateHeader(<span class="string">&quot;expires&quot;</span>, -<span class="number">1</span>);</span><br><span class="line">       resp.setHeader(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">       resp.setHeader(<span class="string">&quot;Pragma&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">  </span><br><span class="line">       ImageIO.write(bufferedImage, <span class="string">&quot;jpg&quot;</span>, resp.getOutputStream());</span><br><span class="line">   &#125;</span><br><span class="line">  </span><br><span class="line">   <span class="function"><span class="keyword">private</span> String <span class="title">makeNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       Random random = <span class="keyword">new</span> Random();</span><br><span class="line">       String num = random.nextInt(<span class="number">9999</span>) + <span class="string">&quot;&quot;</span>;</span><br><span class="line">  </span><br><span class="line">       StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span> - num.length(); i++) &#123;</span><br><span class="line">           sb.append(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       String s = sb.toString() + num;</span><br><span class="line">       <span class="keyword">return</span> num;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="5-3-实现重定向"><a href="#5-3-实现重定向" class="headerlink" title="5.3.实现重定向"></a>5.3.实现重定向</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">resp.sendRedirect(<span class="string">&quot;/image&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//可以分解为以下的代码</span></span><br><span class="line">resp.setHeader(<span class="string">&quot;Location&quot;</span>,<span class="string">&quot;/image&quot;</span>);</span><br><span class="line">resp.setStatus(<span class="number">302</span>);</span><br></pre></td></tr></table></figure><p>重定向和转化的区别</p><p>相同点</p><pre><code>页面会发生跳转</code></pre><p>不同点</p><pre><code>请求转发的时候,url不会发生变化重定向时候,url地址栏会发生变化</code></pre><h3 id="6-HttpServletRequest"><a href="#6-HttpServletRequest" class="headerlink" title="6 HttpServletRequest"></a>6 HttpServletRequest</h3><h3 id="7-cookie和session"><a href="#7-cookie和session" class="headerlink" title="7.cookie和session"></a>7.cookie和session</h3><ul><li>保存会话的两种方式</li></ul><blockquote><p>​    cookie</p><p>​    客户端技术(响应,请求)</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">req.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">       <span class="comment">//解决乱码</span></span><br><span class="line">       resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">       PrintWriter out = resp.getWriter();</span><br><span class="line"></span><br><span class="line">       <span class="comment">//获取cookies</span></span><br><span class="line">       Cookie[] cookies = req.getCookies();</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (cookies != <span class="keyword">null</span>) &#123;</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cookies.length; i++) &#123;</span><br><span class="line">               Cookie cookie = cookies[i];</span><br><span class="line">               String name = cookie.getName();</span><br><span class="line">               <span class="keyword">if</span> (name.equals(<span class="string">&quot;lastLoginTime&quot;</span>)) &#123;</span><br><span class="line"></span><br><span class="line">                   <span class="keyword">long</span> lastLoginTime = Long.parseLong(cookie.getValue());</span><br><span class="line">                   Date date = <span class="keyword">new</span> Date(lastLoginTime);</span><br><span class="line">                   out.write(<span class="string">&quot;你的最后一次登录时间&quot;</span> + date.toLocaleString());</span><br><span class="line"></span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           out.write(<span class="string">&quot;这是你第一次访问!&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">&quot;lastLoginTime&quot;</span>, System.currentTimeMillis() + <span class="string">&quot;&quot;</span>);</span><br><span class="line">       resp.addCookie(cookie);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>session</li></ul><blockquote><p>服务端技术,利用这个技术,可以保存用户的会话信息</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">sessionStudy</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html; charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//得到session</span></span><br><span class="line">        HttpSession session = req.getSession();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//往session中存东西</span></span><br><span class="line">        session.setAttribute(<span class="string">&quot;name&quot;</span>, <span class="keyword">new</span> Person(<span class="string">&quot;codelorin&quot;</span>, <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取session的id</span></span><br><span class="line">        String id = session.getId();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (session.isNew()) &#123;</span><br><span class="line">            resp.getWriter().write(<span class="string">&quot;session创建成功&quot;</span> + id);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        resp.getWriter().write(<span class="string">&quot;session已经在服务器中存在了&quot;</span> + id);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//session创建的时候做了什么事情</span></span><br><span class="line">        Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">&quot;JSESSIONID&quot;</span>, id);</span><br><span class="line">        resp.addCookie(cookie);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">sessionStudy2</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html; charset=UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">        HttpSession session = req.getSession();</span><br><span class="line">        Person name = (Person) session.getAttribute(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        resp.getWriter().write(name.toString());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在web.xml可以设置session过期时间</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--   15分钟后过期     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span></span><br><span class="line">        15</span><br><span class="line">    <span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-jsp"><a href="#5-jsp" class="headerlink" title="5.jsp"></a>5.jsp</h2><h3 id="1-什么是jsp"><a href="#1-什么是jsp" class="headerlink" title="1.什么是jsp"></a>1.什么是jsp</h3><blockquote><p>Java Server Pages: Java服务端页面,也和Servlet一样用于动态web.</p></blockquote><h3 id="2-最大的特点"><a href="#2-最大的特点" class="headerlink" title="2.最大的特点"></a>2.最大的特点</h3><ul><li>写JSP就像是在写HTML</li><li>区别<ul><li>HTML只给用户提供动态数据</li><li>JSP页面可以嵌入JAVA代码,为用户提供动态数据</li></ul></li></ul><h3 id="3-JSP原理"><a href="#3-JSP原理" class="headerlink" title="3.JSP原理"></a>3.JSP原理</h3><blockquote><p>JSP到底怎么执行的</p></blockquote><ul><li>代码层没有任何问题</li><li>服务器内部工作</li><li>页面转变成java程序</li></ul><p>本质是就是Servlet</p><p>index_jsp=&gt;HttpJspBase=&gt;HttpServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">_jspInit</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//销毁</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">_jspDestroy</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//JSPService</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">_jspService</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>判断请求</li><li>内置了一些对象</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PageContext pageContext;<span class="comment">//页面上下文</span></span><br><span class="line">HttpSession session;<span class="comment">//session</span></span><br><span class="line">ServletContext application;<span class="comment">//applicationContext </span></span><br><span class="line">ServletConfig config;<span class="comment">//config</span></span><br><span class="line">JspWriter out;<span class="comment">//out</span></span><br><span class="line">Object page = <span class="keyword">this</span>;<span class="comment">//page:当前</span></span><br><span class="line">HttpServletRequest request,<span class="comment">//请求</span></span><br><span class="line">HttpServletResponse response<span class="comment">//相应</span></span><br></pre></td></tr></table></figure><ul><li>以上的对象可以直接在JSP中直接使用</li></ul><p>在jsp页面中,java代码原封不动输出,</p><p>html代码转化为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">out.write(&quot;<span class="tag">&lt;<span class="name">html</span>&gt;</span>\r\n&quot;)</span><br></pre></td></tr></table></figure><p>这样的格式输出到前端!</p><h3 id="4-jsp的依赖"><a href="#4-jsp的依赖" class="headerlink" title="4.jsp的依赖"></a>4.jsp的依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Servlet的依赖        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--JSP的依赖        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--JSTL的依赖        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--standard标签库的依赖        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-基础语法"><a href="#5-基础语法" class="headerlink" title="5.基础语法"></a>5.基础语法</h3><ul><li><p>JSP表达式</p><blockquote><p>用来将程序的输出到客户端</p><p>格式&lt;%= xxx %&gt;</p></blockquote></li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= <span class="keyword">new</span> java.util.Date() %&gt;</span><br></pre></td></tr></table></figure><ul><li><p>JSP脚本片段</p><blockquote><p>格式&lt;% xxx %&gt;</p></blockquote></li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">10</span>;</span><br><span class="line">out.println(x);</span><br><span class="line"></span><br><span class="line">%&gt;</span><br><span class="line">&lt;p&gt;这是一个JSP文档&lt;/p&gt;</span><br><span class="line">&lt;%</span><br><span class="line"><span class="keyword">int</span> y = <span class="number">0</span>;</span><br><span class="line">out.println(y);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><ul><li><p>代码中嵌入HTML元素</p><blockquote><p>格式&lt;% { %&gt;     &lt;%}%&gt;</p></blockquote></li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123; %&gt;</span><br><span class="line">&lt;h1&gt;by codelorin &lt;%= i %&gt;&lt;/h1&gt;</span><br><span class="line">&lt;%</span><br><span class="line">&#125;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>jsp声明</p><blockquote><p>提高作用域,会被编译到jsp生成的java类中.</p><p>其他情况会被编译到_jspServlet方法中</p><p>格式:&lt;%!%&gt;</p></blockquote></li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Loading Servlet&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lorin</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;正在执行方法lorin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>jsp的注释不会再客户端显示,html会</p><h3 id="6-定制错误页面"><a href="#6-定制错误页面" class="headerlink" title="6.定制错误页面"></a>6.定制错误页面</h3><ul><li>jsp中配置</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> errorPage=<span class="string">&quot;Error/500.jsp&quot;</span> %&gt;</span><br></pre></td></tr></table></figure><ul><li>web.xml中配置</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>500<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">location</span>&gt;</span>/Error/500.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-jsp中导包"><a href="#7-jsp中导包" class="headerlink" title="7.jsp中导包"></a>7.jsp中导包</h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.Date&quot;</span> %&gt;</span><br></pre></td></tr></table></figure><h3 id="8-提取公共页面"><a href="#8-提取公共页面" class="headerlink" title="8.提取公共页面"></a>8.提取公共页面</h3><ul><li>变成一个文件</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;Common/header.jsp&quot;</span>%&gt; </span><br></pre></td></tr></table></figure><ul><li>代码引用</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:include page=<span class="string">&quot;Common/header.jsp&quot;</span>/&gt; </span><br></pre></td></tr></table></figure><h3 id="9-九大内置对象"><a href="#9-九大内置对象" class="headerlink" title="9.九大内置对象"></a>9.九大内置对象</h3><ul><li>PageContext 存东西</li><li>Request 存东西</li><li>Response</li><li>Session 存东西</li><li>Application [ServletContext]  存东西</li><li>config [Servlet Config]</li><li>out</li><li>page</li><li>exception</li></ul><blockquote><p>简单demo</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    pageContext.setAttribute(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;codelorin1&quot;</span>);<span class="comment">//保存一个页面中有效  </span></span><br><span class="line">    request.setAttribute(<span class="string">&quot;name1&quot;</span>,<span class="string">&quot;codelorin2&quot;</span>);<span class="comment">//一次请求有效,请求转发有效 新闻</span></span><br><span class="line">    session.setAttribute(<span class="string">&quot;name2&quot;</span>,<span class="string">&quot;codelorin3&quot;</span>);<span class="comment">//保存的数据在一次会话中有效,从打开浏览器到关闭浏览器 购物车</span></span><br><span class="line">    application.setAttribute(<span class="string">&quot;name3&quot;</span>,<span class="string">&quot;codelorin4&quot;</span>);<span class="comment">//保存的数据在服务器中有效,从打开服务器到关闭服务器 聊天记录</span></span><br><span class="line">%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    String name = (String) pageContext.findAttribute(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">    String name1 = (String) pageContext.findAttribute(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">    String name2 = (String) pageContext.findAttribute(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">    String name3 = (String) pageContext.findAttribute(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line"><span class="comment">//el表达式取出值</span></span><br><span class="line">&lt;h1&gt;取出的值为:&lt;/h1&gt;</span><br><span class="line">&lt;h3&gt;$&#123;name&#125;&lt;/h3&gt;</span><br><span class="line">&lt;h3&gt;$&#123;name1&#125;&lt;/h3&gt;</span><br><span class="line">&lt;h3&gt;$&#123;name2&#125;&lt;/h3&gt;</span><br><span class="line">&lt;h3&gt;$&#123;name3&#125;&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;&lt;%= name %&gt;&lt;/h3&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pageContext.forward(<span class="string">&quot;/index&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="10-JSP标签-JSTL标签-EL表达式"><a href="#10-JSP标签-JSTL标签-EL表达式" class="headerlink" title="10.JSP标签,JSTL标签,EL表达式"></a>10.JSP标签,JSTL标签,EL表达式</h3><blockquote><p>需要导入包</p></blockquote><p>EL表达式:</p><ul><li>获取数据</li><li>执行运算</li><li>获取web开发的常用对象</li></ul><p>JSP标签:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:forward page=<span class="string">&quot;index.jsp&quot;</span>&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;name&quot;</span> value=<span class="string">&quot;codelorin&quot;</span>/&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;age&quot;</span> value=<span class="string">&quot;18&quot;</span>/&gt;</span><br><span class="line">&lt;/jsp:forward&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;%--取出参数--%&gt;</span><br><span class="line">&lt;%= request.getParameter(<span class="string">&quot;name&quot;</span>)%&gt;</span><br><span class="line">&lt;%= request.getParameter(<span class="string">&quot;age&quot;</span>)%&gt;</span><br></pre></td></tr></table></figure><p>JSTL标签库</p><blockquote><p>HTML的扩展</p></blockquote><p>核心标签</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%--引入--%&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;jstl_study.jsp&quot;</span> method=<span class="string">&quot;get&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> value=<span class="string">&quot;$&#123;param.username&#125;&quot;</span> placeholder=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;param.username == &#x27;admin&#x27;&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;isAdmin&quot;</span>&gt;</span><br><span class="line">    &lt;c:out value=<span class="string">&quot;管理员欢迎你!&quot;</span>/&gt;</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line">&lt;c:out value=<span class="string">&quot;$&#123;isAdmin&#125;&quot;</span>/&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;c:set <span class="keyword">var</span>=<span class="string">&quot;score&quot;</span> value=<span class="string">&quot;99&quot;</span>/&gt;</span><br><span class="line">&lt;c:choose&gt;</span><br><span class="line">    &lt;c:when test=<span class="string">&quot;$&#123;score&gt;=90&#125;&quot;</span>&gt;</span><br><span class="line">        你的成绩为优秀</span><br><span class="line">    &lt;/c:when&gt;</span><br><span class="line">&lt;/c:choose&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.ArrayList&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;% ArrayList&lt;String&gt; people = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    people.add(<span class="number">0</span>, <span class="string">&quot;lorin&quot;</span>);</span><br><span class="line">    people.add(<span class="number">1</span>, <span class="string">&quot;zou&quot;</span>);</span><br><span class="line">    people.add(<span class="number">2</span>, <span class="string">&quot;jjking&quot;</span>);</span><br><span class="line">    request.setAttribute(<span class="string">&quot;list&quot;</span>, people);</span><br><span class="line"></span><br><span class="line">%&gt;</span><br><span class="line">&lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;people&quot;</span> items=<span class="string">&quot;$&#123;list&#125;&quot;</span>&gt;</span><br><span class="line">    &lt;c:out value=<span class="string">&quot;$&#123;people&#125;&quot;</span>/&gt; &lt;br/&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line"># 遍历变量</span><br><span class="line">&lt;c:forEach var=&quot;people&quot; items=&quot;$&#123;list&#125;&quot; begin=&quot;&quot; end=&quot;&quot; step=&quot;&quot;&gt;&lt;/c:forEach&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="11-JavaBean"><a href="#11-JavaBean" class="headerlink" title="11.JavaBean"></a>11.JavaBean</h3><blockquote><p>实体类</p></blockquote><p>JavaBean有特定的写法:</p><ul><li>必须要有一个无参构造</li><li>属性必须私有化</li><li>必须有对应的get/set方法</li></ul><p>一般用来和数据库的字段做映射 ORM;</p><p>ORM: 对象关系映射</p><ul><li>表-&gt;类</li><li>字段-&gt;属性</li><li>行-&gt;对象</li></ul><table><thead><tr><th align="center">id</th><th align="center">name</th><th align="center">age</th><th align="center">address</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">lorin1</td><td align="center">3</td><td align="center">广州</td></tr><tr><td align="center">2</td><td align="center">lorin2</td><td align="center">5</td><td align="center">广州</td></tr><tr><td align="center">3</td><td align="center">lorin3</td><td align="center">7</td><td align="center">广州</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.pojo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/5/11 11:21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">People</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">People</span><span class="params">(<span class="keyword">int</span> id, String name, <span class="keyword">int</span> age, String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;People&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, address=&#x27;&quot;</span> + address + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="12-MVC三层架构"><a href="#12-MVC三层架构" class="headerlink" title="12.MVC三层架构"></a>12.MVC三层架构</h3><blockquote><p>MVC: Model view Controller 模型 视图 控制器</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210519150632641.png" alt="image-20210519150632641"></p><p>用户可以直接访问控制层,控制层可以直接操作数据库</p><p>servlet-&gt;CURD-&gt;数据库</p><p>弊端:程序十分臃肿,不利于维护</p><p>servlet:处理请求响应,跳转,jdbc,业务逻辑代码</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/codelorin/img/img/image-20210519151034741.png" alt="image-20210519151034741"></p><p>Model</p><ul><li>业务处理:业务逻辑(service)</li><li>数据持久层: CRUD (Dao)</li></ul><p>View</p><ul><li>展示数据</li><li>提供链接发起请求 a form</li></ul><p>Controller</p><ul><li>接受用户请求: (req,session)</li><li>交给业务层</li><li>控制视图跳转</li></ul><h3 id="13-Filter"><a href="#13-Filter" class="headerlink" title="13.Filter"></a>13.Filter</h3><blockquote><p>过滤器,用来过滤网站的数据</p></blockquote><ul><li>处理乱码</li><li>登录</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/5/19 15:47</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;开始&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest req, ServletResponse resp, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        req.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html; charset=UTF-8&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;执行前&quot;</span>);</span><br><span class="line">        chain.doFilter(req, resp);<span class="comment">//拦截放行</span></span><br><span class="line">        System.out.println(<span class="string">&quot;执行后&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;结束&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    页面--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.codelorin.Show<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    两个url 对比--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/show<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/servlet/show<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.codelorin.filter.Demo<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/servlet/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="14-监听器"><a href="#14-监听器" class="headerlink" title="14.监听器"></a>14.监听器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codelorin.listener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSessionEvent;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSessionListener;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> CodeLorin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2021/6/5 14:07</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Listener</span> <span class="keyword">implements</span> <span class="title">HttpSessionListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建session监听</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionCreated</span><span class="params">(HttpSessionEvent se)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(se.getSession().getId());</span><br><span class="line">        ServletContext ctx = se.getSession().getServletContext();</span><br><span class="line">        Integer count = (Integer) ctx.getAttribute(<span class="string">&quot;OnlineCount&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="keyword">null</span>) &#123;</span><br><span class="line">            count = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">            count = count + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ctx.setAttribute(<span class="string">&quot;OnlineCount&quot;</span>, count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//销毁session监听</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionDestroyed</span><span class="params">(HttpSessionEvent se)</span> </span>&#123;</span><br><span class="line">        ServletContext ctx = se.getSession().getServletContext();</span><br><span class="line">        Integer count = (Integer) ctx.getAttribute(<span class="string">&quot;OnlineCount&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="keyword">null</span>) &#123;</span><br><span class="line">            count = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">            count = count - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ctx.setAttribute(<span class="string">&quot;OnlineCount&quot;</span>, count);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> java </category>
          
          <category> jsp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> java </tag>
            
            <tag> servlet </tag>
            
            <tag> jsp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos安装Git</title>
      <link href="posts/0c740b046a61/"/>
      <url>posts/0c740b046a61/</url>
      
        <content type="html"><![CDATA[<h1 id="centos安装Git"><a href="#centos安装Git" class="headerlink" title="centos安装Git"></a>centos安装Git</h1><h2 id="一-yum安装-版本较低"><a href="#一-yum安装-版本较低" class="headerlink" title="一.yum安装,版本较低"></a>一.yum安装,版本较低</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure><h2 id="二-源码构建"><a href="#二-源码构建" class="headerlink" title="二.源码构建"></a>二.源码构建</h2><p><a href="https://mirrors.edge.kernel.org/pub/software/scm/git/">git官方下载链接</a></p><p>1.解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf git-2.31.1.tar.gz</span><br></pre></td></tr></table></figure><p>2.安装可能所需的依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc-c++ perl-ExtUtils-MakeMaker</span><br></pre></td></tr></table></figure><p>3.安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd git-2.31.1</span><br><span class="line">make configure</span><br><span class="line">./configure --prefix=/usr/local/git</span><br><span class="line">make profix=/usr/local/git</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>4.加入环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p>没有yum install vim</p><p>G移到尾部增加</p><p>i进入编辑模式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> git</span></span><br><span class="line">export GIT_HOME=/usr/local/git</span><br><span class="line">export PATH=$PATH:$GIT_HOME/bin</span><br></pre></td></tr></table></figure><p>ese : wq保存</p><p>刷新环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>5.完成安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425101846554.png" alt="image-20210425101846554"></p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
          <category> centos </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> 环境搭建 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos安装java</title>
      <link href="posts/c1b49f6cc382/"/>
      <url>posts/c1b49f6cc382/</url>
      
        <content type="html"><![CDATA[<h1 id="Centos安装java"><a href="#Centos安装java" class="headerlink" title="Centos安装java"></a>Centos安装java</h1><h2 id="1-创建文件"><a href="#1-创建文件" class="headerlink" title="1.创建文件"></a>1.创建文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/</span><br><span class="line">mkdir java</span><br><span class="line">cd java</span><br></pre></td></tr></table></figure><h2 id="2-解压"><a href="#2-解压" class="headerlink" title="2.解压"></a>2.解压</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf /root/jdk-8u161-linux-x64.tar.gz -C ./</span><br></pre></td></tr></table></figure><h2 id="3-编辑环境变量"><a href="#3-编辑环境变量" class="headerlink" title="3.编辑环境变量"></a>3.编辑环境变量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;profile</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>尾部追加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/usr/local/java/jdk1.8.0_161</span><br><span class="line">CLASSPATH=$JAVA_HOME/lib/</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line">export PATH JAVA_HOME CLASSPATH</span><br></pre></td></tr></table></figure><h2 id="4-刷新"><a href="#4-刷新" class="headerlink" title="4.刷新"></a>4.刷新</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h2 id="5-完成安装"><a href="#5-完成安装" class="headerlink" title="5.完成安装"></a>5.完成安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br><span class="line">javac</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425103459894.png" alt="image-20210425103459894"></p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
          <category> centos </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> 环境搭建 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos安装Node.js</title>
      <link href="posts/e928bde0b9fd/"/>
      <url>posts/e928bde0b9fd/</url>
      
        <content type="html"><![CDATA[<h1 id="Centos安装Node-js"><a href="#Centos安装Node-js" class="headerlink" title="Centos安装Node.js"></a>Centos安装Node.js</h1><p>1.下载Node.js</p><p><a href="https://nodejs.org/en/download/">Node.js官网下载</a></p><p>2.新建文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/</span><br><span class="line">mkdir node</span><br><span class="line">cd node</span><br></pre></td></tr></table></figure><p>3.解压node.js</p><p>我上传到了/root目录,其他目录也是可以的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xJvf /root/node-v14.16.1-linux-x64.tar.xz -C ./</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.环境变量</p><p>编辑~/.bash_profile文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br></pre></td></tr></table></figure><p>末尾追加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Node.js</span></span><br><span class="line">export PATH=/usr/local/node/node-v14.16.1-linux-x64/bin:$PATH</span><br></pre></td></tr></table></figure><p>刷新</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425102715528.png" alt="image-20210425102715528"></p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
          <category> centos </category>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> 环境搭建 </tag>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos安装Python3环境</title>
      <link href="posts/ce035e3e001e/"/>
      <url>posts/ce035e3e001e/</url>
      
        <content type="html"><![CDATA[<h1 id="Centos安装Python3环境"><a href="#Centos安装Python3环境" class="headerlink" title="Centos安装Python3环境"></a>Centos安装Python3环境</h1><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425095236594.png" alt="image-20210425095236594"></p><p>先看看有没有,有的话可以跳过</p><p><a href="https://www.python.org/downloads/source/">Python官网下载</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425100513844.png" alt="image-20210425100513844"></p><p>这样的就是</p><p>1.上传python3到/root目录,解压文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf Python-3.8.6.tgz</span><br></pre></td></tr></table></figure><p>2.下载预备环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlit-devel readline-devel tk-devel gcc make</span><br></pre></td></tr></table></figure><p>3.安装</p><blockquote><p>这里制定安装目录为/usr/local/python3</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd Python-3.8.6</span><br><span class="line">./configure prefix=/usr/local/python3</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p><del>等好久..</del></p><p>4.设置软链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/python3/bin/python3 /usr/bin/python3</span><br><span class="line">ln -s /usr/local/python3/bin/pip3 /usr/bin/pip3</span><br></pre></td></tr></table></figure><p>5.安装成功</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425100212427.png" alt="image-20210425100212427"></p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
          <category> centos </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> centos </tag>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos安装Docker</title>
      <link href="posts/78a32cbab478/"/>
      <url>posts/78a32cbab478/</url>
      
        <content type="html"><![CDATA[<h1 id="Centos安装Docker"><a href="#Centos安装Docker" class="headerlink" title="Centos安装Docker"></a>Centos安装Docker</h1><h2 id="1-yum安装依赖"><a href="#1-yum安装依赖" class="headerlink" title="1.yum安装依赖"></a>1.yum安装依赖</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils</span><br></pre></td></tr></table></figure><h2 id="2-配置镜像"><a href="#2-配置镜像" class="headerlink" title="2.配置镜像"></a>2.配置镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line">sudo sed -i &#x27;s/download.docker.com/mirrors.aliyun.com\/docker-ce/g&#x27; /etc/yum.repos.d/docker-ce.repo</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-安装"><a href="#3-安装" class="headerlink" title="3.安装"></a>3.安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><h2 id="4-开启服务"><a href="#4-开启服务" class="headerlink" title="4.开启服务"></a>4.开启服务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable docker</span><br><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><h2 id="3-查看安装结果"><a href="#3-查看安装结果" class="headerlink" title="3.查看安装结果"></a>3.查看安装结果</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure><h2 id="4-开机启动"><a href="#4-开机启动" class="headerlink" title="4.开机启动"></a>4.开机启动</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker.service</span><br></pre></td></tr></table></figure><h2 id="5-配置DOCKER镜像"><a href="#5-配置DOCKER镜像" class="headerlink" title="5.配置DOCKER镜像"></a>5.配置DOCKER镜像</h2><p>输入一下命令即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://hub-mirror.c.163.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="6-安装成功"><a href="#6-安装成功" class="headerlink" title="6.安装成功"></a>6.安装成功</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425112226262.png" alt="image-20210425112226262"></p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
          <category> centos </category>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> docker </tag>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html+css学习笔记</title>
      <link href="posts/7a7f03249715/"/>
      <url>posts/7a7f03249715/</url>
      
        <content type="html"><![CDATA[<h1 id="html-css学习笔记"><a href="#html-css学习笔记" class="headerlink" title="html+css学习笔记"></a>html+css学习笔记</h1><h2 id="一-实体-转义字符"><a href="#一-实体-转义字符" class="headerlink" title="一.实体(转义字符)"></a>一.实体(转义字符)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">&amp;nbsp;</span> 空格</span><br><span class="line"><span class="symbol">&amp;gt;</span> 大于</span><br><span class="line"><span class="symbol">&amp;lt;</span> 小于</span><br><span class="line"><span class="symbol">&amp;copy;</span> 版权</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210218200551204.png" alt="image-20210218200551204"></p><h2 id="二-标签"><a href="#二-标签" class="headerlink" title="二.标签"></a>二.标签</h2><h3 id="1-meta标签"><a href="#1-meta标签" class="headerlink" title="1.meta标签"></a>1.meta标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">meta标签主要用来设置网页的一些元元素</span><br><span class="line"></span><br><span class="line">charset 制定页面的字符集</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">name 制定的数据的名称 keywords关键字 description描述</span><br><span class="line"> <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;5;url=https://www.baidu.com&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">content 制定的数据的内容</span><br></pre></td></tr></table></figure><h3 id="2-其他标签"><a href="#2-其他标签" class="headerlink" title="2.其他标签"></a>2.其他标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">行内元素</span><br><span class="line"></span><br><span class="line">强调 斜体 em</span><br><span class="line">强调 粗体 strong</span><br><span class="line">长引用 换行 blockquote</span><br><span class="line">段引用 &quot;&quot; q</span><br><span class="line">换行 br</span><br><span class="line">选择文字 span</span><br><span class="line"></span><br><span class="line">块元素布局标签</span><br><span class="line">标题标签 h1 h2 h3 p </span><br><span class="line">分组标签 hgroud</span><br><span class="line">网页的头部 header</span><br><span class="line">网页的主体部分 main</span><br><span class="line">网页的页脚 footer</span><br><span class="line">网页中的导航 nav</span><br><span class="line">和主体相关的 aside</span><br><span class="line">文章 article</span><br><span class="line">独立的区块 section</span><br><span class="line">主要布局元素 div</span><br><span class="line">主要  p</span><br></pre></td></tr></table></figure><h3 id="3-块和行内"><a href="#3-块和行内" class="headerlink" title="3.块和行内"></a>3.块和行内</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">块元素 布局</span><br><span class="line">行内元素 包裹文字</span><br><span class="line">一般会在块元素中放行内元素,而不会在行内元素中放块元素</span><br><span class="line">p元素不能放任何的块元素</span><br></pre></td></tr></table></figure><h3 id="4-列表"><a href="#4-列表" class="headerlink" title="4.列表"></a>4.列表</h3><h4 id="1-有序列表"><a href="#1-有序列表" class="headerlink" title="(1).有序列表"></a>(1).有序列表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ol&gt;</span><br><span class="line">    &lt;li&gt;123&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;li&gt;1234&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ol&gt;</span><br></pre></td></tr></table></figure><h4 id="2-无序列表"><a href="#2-无序列表" class="headerlink" title="(2).无序列表"></a>(2).无序列表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li&gt;123&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;li&gt;1234&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br></pre></td></tr></table></figure><h4 id="3-定义列表"><a href="#3-定义列表" class="headerlink" title="(3).定义列表"></a>(3).定义列表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dl&gt;</span><br><span class="line">    &lt;dt&gt;1&lt;&#x2F;dt&gt;</span><br><span class="line">    &lt;dd&gt;The first&lt;&#x2F;dd&gt;</span><br><span class="line">    &lt;dt&gt;2&lt;&#x2F;dt&gt;</span><br><span class="line">    &lt;dd&gt;The Second&lt;&#x2F;dd&gt;</span><br><span class="line">&lt;&#x2F;dl&gt;</span><br></pre></td></tr></table></figure><h3 id="5-超链接"><a href="#5-超链接" class="headerlink" title="5.超链接"></a>5.超链接</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com/&quot;</span>&gt;</span>baidu<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">属性 </span><br><span class="line">href 地址</span><br><span class="line"># 回到顶部</span><br><span class="line">javascript:; 占位符</span><br><span class="line"></span><br><span class="line">target </span><br><span class="line">_self 默认值</span><br><span class="line">_blank 新标签</span><br></pre></td></tr></table></figure><h3 id="6-图片"><a href="#6-图片" class="headerlink" title="6.图片"></a>6.图片</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">src 路径</span><br><span class="line">alt 描述</span><br><span class="line">width 宽度</span><br><span class="line">height 高度</span><br><span class="line">base64</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="7-内联框架"><a href="#7-内联框架" class="headerlink" title="7.内联框架"></a>7.内联框架</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe</span><br><span class="line">    src=&quot;https://www.baidu.com/s?ie=UTF-8&amp;wd=tr&quot;</span><br><span class="line">    width=&quot;500&quot;</span><br><span class="line">    height=&quot;500&quot;</span><br><span class="line">    frameborder=&quot;0&quot;</span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-音频-amp-视频"><a href="#8-音频-amp-视频" class="headerlink" title="8.音频&amp;视频"></a>8.音频&amp;视频</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">audio src</span><br><span class="line">属性</span><br><span class="line">是否允许控制 controls</span><br><span class="line">自动播放 autoplay</span><br><span class="line">循环播放 loop</span><br><span class="line"></span><br><span class="line">兼容性</span><br><span class="line">        &lt;audio controls&gt;</span><br><span class="line">            你的浏览器不支持</span><br><span class="line">            &lt;source src&#x3D;&quot;&quot; &#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;audio&gt;</span><br><span class="line">        </span><br><span class="line">    </span><br></pre></td></tr></table></figure><h2 id="三-css基础"><a href="#三-css基础" class="headerlink" title="三.css基础"></a>三.css基础</h2><h3 id="1-基础"><a href="#1-基础" class="headerlink" title="1.基础"></a>1.基础</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">选择器</span><br><span class="line">声明块</span><br><span class="line">p &#123;</span><br><span class="line">    color: red;</span><br><span class="line">    font-size: 20px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-常用选择器"><a href="#2-常用选择器" class="headerlink" title="2.常用选择器"></a>2.常用选择器</h3><h4 id="1-id选择器"><a href="#1-id选择器" class="headerlink" title="(1).id选择器"></a>(1).id选择器</h4><h4 id="2-class选择器"><a href="#2-class选择器" class="headerlink" title="(2).class选择器 ."></a>(2).class选择器 .</h4><h4 id="3-通配选择器"><a href="#3-通配选择器" class="headerlink" title="(3).通配选择器 *"></a>(3).通配选择器 *</h4><h4 id="4-复合选择器"><a href="#4-复合选择器" class="headerlink" title="(4).复合选择器"></a>(4).复合选择器</h4><p>​            交集选择器 连这些 div.red</p><p>​            并集选择器 ,连起来</p><h4 id="5-关系选择器"><a href="#5-关系选择器" class="headerlink" title="(5).关系选择器"></a>(5).关系选择器</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 子代选择器 */</span></span><br><span class="line"><span class="selector-tag">div</span> &gt; <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 后代选择器 */</span></span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 选择下一个兄弟 */</span></span><br><span class="line"><span class="selector-tag">p</span> + <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 下的所有 */</span></span><br><span class="line"><span class="selector-tag">p</span> ~ <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-属性选择器"><a href="#6-属性选择器" class="headerlink" title="(6).属性选择器"></a>(6).属性选择器</h4><p>​        </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[title]</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[title=<span class="string">&quot;abc&quot;</span>]</span></span><br><span class="line"><span class="comment">/* 开头 */</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[title^=<span class="string">&quot;abc&quot;</span>]</span> </span><br><span class="line"><span class="comment">/* 结尾 */</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[title$=<span class="string">&quot;abc&quot;</span>]</span></span><br><span class="line"><span class="comment">/* 有就行 */</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[title*=<span class="string">&quot;abc&quot;</span>]</span></span><br></pre></td></tr></table></figure><h4 id="7-伪类选择器"><a href="#7-伪类选择器" class="headerlink" title="(7).伪类选择器"></a>(7).伪类选择器</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> <span class="selector-pseudo">:first</span>-child 第一个元素 </span><br><span class="line"> <span class="selector-pseudo">:last-child</span> 最后一个元素 </span><br><span class="line"> <span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) 第<span class="number">2</span>个元素 n就表示全部 <span class="number">2</span>n偶数</span><br><span class="line"></span><br><span class="line"> <span class="selector-pseudo">:first</span>-of-type  第一个元素同类型</span><br><span class="line"> <span class="selector-pseudo">:only-of-type</span> 唯一元素</span><br><span class="line"> <span class="selector-pseudo">:last-of-type</span> 最后一个元素</span><br><span class="line"> <span class="selector-pseudo">:not</span>() 把指定元素去除</span><br><span class="line"> </span><br><span class="line"><span class="selector-pseudo">:empty</span> 空元素</span><br><span class="line"><span class="comment">/*超链接的伪类*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> 没访问过的链接 正常的链接</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> 访问过的链接</span><br><span class="line"><span class="comment">/*其他标签可以使用*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> 移动到上面</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> 鼠标点击</span><br></pre></td></tr></table></figure><h4 id="8-伪元素"><a href="#8-伪元素" class="headerlink" title="(8).伪元素"></a>(8).伪元素</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">第一个元素</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::first-letter</span> &#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line">第一行</span><br><span class="line"><span class="selector-pseudo">::first-line</span> </span><br><span class="line">选中的</span><br><span class="line"><span class="selector-pseudo">::selection</span></span><br><span class="line">元素的最后</span><br><span class="line"><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">元素的开始</span><br><span class="line"><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="3-样式的继承"><a href="#3-样式的继承" class="headerlink" title="3.样式的继承"></a>3.样式的继承</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">背景一些不会被继承</span><br></pre></td></tr></table></figure><h3 id="4-选择器的权重"><a href="#4-选择器的权重" class="headerlink" title="4.选择器的权重"></a>4.选择器的权重</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">内联</span><br><span class="line">id</span><br><span class="line">类和伪类选择器</span><br><span class="line">元素选择器</span><br><span class="line">通配选择器</span><br><span class="line">继承的样式</span><br><span class="line">!important 最高优先级</span><br></pre></td></tr></table></figure><h3 id="5-像素和百分比"><a href="#5-像素和百分比" class="headerlink" title="5.像素和百分比"></a>5.像素和百分比</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">子元素可以设置相对于父元素的百分比</span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">            .box1 &#123;</span><br><span class="line"><span class="css">                <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">                <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">                <span class="attribute">background-color</span>: orange;</span></span><br><span class="line">            &#125;</span><br><span class="line">            .box2 &#123;</span><br><span class="line"><span class="css">                <span class="attribute">width</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">                <span class="attribute">height</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">                <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">em </span><br><span class="line">     1em = 1font-size</span><br><span class="line">     1em = 16px</span><br><span class="line">     em随着字体大小而改变</span><br><span class="line">rem     </span><br><span class="line">     rem相对于根元素html字体大小来计算</span><br></pre></td></tr></table></figure><h3 id="6-颜色"><a href="#6-颜色" class="headerlink" title="6.颜色"></a>6.颜色</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">rgb</span><br><span class="line">红绿蓝</span><br><span class="line">rgb(255,255,255) 白色</span><br><span class="line"></span><br><span class="line">rgba a表示透明度 0透明 0.5半透明 1不透明</span><br><span class="line"></span><br><span class="line">十六进制表示 红2 绿2 蓝2</span><br><span class="line">#ff0000</span><br><span class="line"></span><br><span class="line">HSL</span><br><span class="line">色相 0-360</span><br><span class="line">饱和度0%-100%</span><br><span class="line">亮度0%-100%</span><br><span class="line">HSLA</span><br></pre></td></tr></table></figure><h2 id="四-css进阶"><a href="#四-css进阶" class="headerlink" title="四.css进阶"></a>四.css进阶</h2><h3 id="1-文档流"><a href="#1-文档流" class="headerlink" title="1.文档流"></a>1.文档流</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">块元素</span><br><span class="line">块元素在页面独占一行</span><br><span class="line">默认宽度是父元素的全部(把父元素撑满)</span><br><span class="line">默认高度是被内容撑开(子元素)</span><br><span class="line"></span><br><span class="line">行内元素</span><br><span class="line">行内元素不会独占一行,只占自身的大小</span><br><span class="line">行内元素在页面从左向右水平排列,一行占不玩则会换行</span><br><span class="line">默认宽高被内容撑开</span><br></pre></td></tr></table></figure><h3 id="2-盒子模型"><a href="#2-盒子模型" class="headerlink" title="2.盒子模型"></a>2.盒子模型</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">盒子大小 = 内容区+边距+内边距</span><br><span class="line">1.内容区(content)</span><br><span class="line"></span><br><span class="line">width height决定内容区的大小</span><br><span class="line"></span><br><span class="line">2.内边距(padding)</span><br><span class="line">内边距会影响盒子的大小</span><br><span class="line">背景颜色会延伸到内边距上</span><br><span class="line"></span><br><span class="line">3.边框(border)</span><br><span class="line"></span><br><span class="line">border-width: 10px;(默认3px) </span><br><span class="line">4个值 上 右 下 左(顺时针)</span><br><span class="line">3个值 上 左右 下</span><br><span class="line">2个值 上下 左右</span><br><span class="line">1个值 上下左右</span><br><span class="line">         border-top-width</span><br><span class="line">         border-bottom-width</span><br><span class="line">         border-left-width</span><br><span class="line"></span><br><span class="line"> border-color: red;</span><br><span class="line">可以指定4个值</span><br><span class="line"></span><br><span class="line"> border-style: solid;</span><br><span class="line">solid 实线</span><br><span class="line">dotted 虚线</span><br><span class="line">dashed 双线</span><br><span class="line">double 双线</span><br><span class="line">简写:</span><br><span class="line">border: 10px orange solid;</span><br><span class="line"></span><br><span class="line">4.外边距(margin)</span><br><span class="line"></span><br><span class="line">不会影响可见框的大小</span><br><span class="line">但是会影响盒子的位置</span><br><span class="line"></span><br><span class="line">左上边框影响自己位置</span><br><span class="line">右下边框影响其他元素</span><br></pre></td></tr></table></figure><h3 id="3-盒子的水平布局"><a href="#3-盒子的水平布局" class="headerlink" title="3.盒子的水平布局"></a>3.盒子的水平布局</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">元素在水平布局的位置由</span><br><span class="line">margin-left</span><br><span class="line">border-left</span><br><span class="line">padding-left</span><br><span class="line">width</span><br><span class="line">padding-right</span><br><span class="line">border-right</span><br><span class="line">margin-right</span><br><span class="line">以上8个相加为父元素的content区的宽度</span><br><span class="line">不满足浏览器会配置margin-right来配平</span><br><span class="line"></span><br><span class="line">三个值可以设置为auto,设置为auto的浏览器会调整它的值使得等式成立</span><br><span class="line">margin-right</span><br><span class="line">margin-left</span><br><span class="line">width</span><br><span class="line">水平居中</span><br><span class="line">width:xxx</span><br><span class="line">margin 0 auto</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-盒子的垂直布局"><a href="#4-盒子的垂直布局" class="headerlink" title="4.盒子的垂直布局"></a>4.盒子的垂直布局</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">子元素的大小如果超过了父元素则会溢出</span><br><span class="line"></span><br><span class="line">可以使用overflow属性来设置父元素处理溢出的子元素</span><br><span class="line">overflow: hidden;</span><br><span class="line">overflow: scroll(auto自动处理);</span><br></pre></td></tr></table></figure><h3 id="5-盒子垂直外边距的折叠"><a href="#5-盒子垂直外边距的折叠" class="headerlink" title="5.盒子垂直外边距的折叠"></a>5.盒子垂直外边距的折叠</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">垂直外边距会发生重叠现象</span><br><span class="line">兄弟元素 绝对值大听谁的 一正一负取两者的和</span><br><span class="line">父子元素 子元素会传递给父元素 必须处理</span><br></pre></td></tr></table></figure><h3 id="6-行内元素的盒子模型"><a href="#6-行内元素的盒子模型" class="headerlink" title="6.行内元素的盒子模型"></a>6.行内元素的盒子模型</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">行内元素无法设置width height 由内容决定</span><br><span class="line">垂直方向的padding border margin不会影响页面的布局</span><br><span class="line"></span><br><span class="line">display设置元素是行内元素还是块元素</span><br><span class="line">属性:</span><br><span class="line">inline block</span><br><span class="line">inline-block行内块元素可以设置宽高又不会独占一行</span><br><span class="line">table 表格</span><br><span class="line">none 元素不在页面中显示,不占位置</span><br><span class="line"></span><br><span class="line"> visibility: hidden;不显示占位置</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="7-浏览器默认"><a href="#7-浏览器默认" class="headerlink" title="7.浏览器默认"></a>7.浏览器默认</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">去除 li的点</span><br><span class="line">list-style:none</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="8-练习"><a href="#8-练习" class="headerlink" title="8.练习"></a>8.练习</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="9-盒子大小"><a href="#9-盒子大小" class="headerlink" title="9.盒子大小"></a>9.盒子大小</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">box-sizing:用来设置盒子尺寸的计算方式</span><br><span class="line">默认值:content-box 用宽度高度来设置内容区的大小</span><br><span class="line"> :border-box:宽度高度用来设置整个盒子的大小(width height为内容区边距内边距的大小,设置边距和内边距会减小空间)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="10-轮廓-阴影和圆角"><a href="#10-轮廓-阴影和圆角" class="headerlink" title="10.轮廓 阴影和圆角"></a>10.轮廓 阴影和圆角</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">outline:设置元素的轮廓线 用法和border一样</span><br><span class="line">和border不一样不会影响可见框的大小</span><br><span class="line"></span><br><span class="line">box-shadow:用来设置元素的阴影效果</span><br><span class="line">第一个值10px(向右偏移) </span><br><span class="line">第二个值10px(向下偏移) </span><br><span class="line">第三个值10px(模糊半径) </span><br><span class="line">第四个值颜色</span><br><span class="line"></span><br><span class="line">border-radius:</span><br><span class="line">半径</span><br><span class="line">border-top-left-radius:</span><br><span class="line">第一个值x轴半径</span><br><span class="line">第二个值y轴半径</span><br><span class="line">border-radius:</span><br><span class="line">圆形 50%</span><br></pre></td></tr></table></figure><h3 id="11-浮动"><a href="#11-浮动" class="headerlink" title="11.浮动"></a>11.浮动</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">float:</span><br><span class="line">默认值:none(不是浮动)</span><br><span class="line"> :left(元素向左浮动)</span><br><span class="line"> :right(元素向右浮动)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">浮动的特点:</span><br><span class="line">1.元素设置浮动之后,水平布局不需要强制成立,会完全从文档流中脱离</span><br><span class="line">(1).脱离文档流之后(块元素行内元素变成对方)</span><br><span class="line">块元素不会独占一行</span><br><span class="line">块元素的宽度和高度默认被内容撑开</span><br><span class="line">行内元素脱离文档流变成了块元素</span><br><span class="line"></span><br><span class="line">2.设置浮动之后元素会向父元素的左侧或者右侧偏移</span><br><span class="line">3.浮动元素默认不会从父元素从移出</span><br><span class="line">4.浮动元素向左或向右移动时,不会超出它前面的其他浮动元素</span><br><span class="line">5.浮动元素的上面是一个没有浮动的元素,则浮动元素无法上移</span><br><span class="line">6.浮动元素不会超过它上边浮动的兄弟元素</span><br><span class="line">7.浮动元素不会盖住文字</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="12-网页的布局"><a href="#12-网页的布局" class="headerlink" title="12.网页的布局"></a>12.网页的布局</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">垂直布局看块元素 水平布局看浮动</span><br></pre></td></tr></table></figure><h3 id="13-高度塌陷和BFC"><a href="#13-高度塌陷和BFC" class="headerlink" title="13.高度塌陷和BFC"></a>13.高度塌陷和BFC</h3><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">父元素是由子元素撑开的</span><br><span class="line">当子元素浮动以后,将会脱离文档流导致子元素从文档流中脱离</span><br><span class="line">将会无法撑起父元素的高度,导致父元素的高度丢失</span><br><span class="line"></span><br><span class="line">父元素的高度丢失,其下面的元素会自动上移,导致页面布局混乱,必须要进行处理.</span><br><span class="line"></span><br><span class="line">BFC:</span><br><span class="line">开启bfc会使改元素变成独立的布局区域</span><br><span class="line">特点:</span><br><span class="line">1.开启BFC不会被浮动元素所覆盖</span><br><span class="line">2.开启BFC子元素和父元素的外边距不会重叠</span><br><span class="line">3.开启BFC元素可以包含浮动的子元素</span><br><span class="line"></span><br><span class="line">/* float: left; */</span><br><span class="line">/* display: inline-block; */</span><br><span class="line">(以上两种不推荐)</span><br><span class="line"></span><br><span class="line">/* overflow: hidden; */</span><br><span class="line"></span><br><span class="line">clear:</span><br><span class="line">清楚由于其他元素浮动导致当前元素的影响(原理margin-top)</span><br><span class="line">可选值:</span><br><span class="line">left(清除向左元素的影响)</span><br><span class="line">right(清除向右元素的影响)</span><br><span class="line">both(清除两侧最大的影响)</span><br><span class="line">解决高度塌陷完美方案</span><br><span class="line">            .box1::after &#123;</span><br><span class="line">                content: &quot;&quot;;</span><br><span class="line">                display: block;</span><br><span class="line">                clear: both;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure></blockquote><h3 id="14-clearfix"><a href="#14-clearfix" class="headerlink" title="14.clearfix"></a>14.clearfix</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">解决外边距问题</span><br><span class="line">            .box1::before &#123;</span><br><span class="line">                content: &quot;&quot;;</span><br><span class="line">                display: table;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">clearfix可以同时解决外边距重叠和高度塌陷的问题</span><br><span class="line">            .clearfix::before,</span><br><span class="line">            .clearfix::after &#123;</span><br><span class="line">                content: &quot;&quot;;</span><br><span class="line">                display: table;</span><br><span class="line">                clear: both;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h3 id="15-定位"><a href="#15-定位" class="headerlink" title="15.定位"></a>15.定位</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">position:</span><br><span class="line">可选值:</span><br><span class="line">static默认值,没开启定位</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">relative 相对定位</span><br><span class="line">1.参照自己在文档流中的位置进行定位</span><br><span class="line">2.会提升元素的层级</span><br><span class="line">3.不会脱离文档流</span><br><span class="line">可选值:</span><br><span class="line">                top</span><br><span class="line">                left</span><br><span class="line">                right</span><br><span class="line">                bottom</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">absolute 绝对定位</span><br><span class="line">1.元素从文档流中脱离</span><br><span class="line">2.会改变元素的性质,行内变成块,块的宽高被内容撑开</span><br><span class="line">3.会提升元素的层级</span><br><span class="line">包含快:</span><br><span class="line">1.离当前元素最近的祖先块元素</span><br><span class="line">2.离他最近开启了定位的祖先元素</span><br><span class="line">3.都没有开启定位的祖先元素则相对于根元素</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fixed 固定定位</span><br><span class="line">1.和绝对定位差不多</span><br><span class="line">2.永远参照于浏览器的视口进行定位</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sticky 粘滞定位</span><br><span class="line">一定top之后粘滞住了</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">开启了绝对定位之后水平布局的等式增加了left和right</span><br><span class="line">    9个值中没有auto,自动调整right</span><br><span class="line">    有auto,自动调整auto</span><br><span class="line">可以设置成auto的值 margin width left right</span><br><span class="line"></span><br><span class="line">垂直方向也必须要满足了且增加了top bottom</span><br><span class="line">垂直水平居中</span><br><span class="line">                position: absolute;</span><br><span class="line">                margin: auto;</span><br><span class="line">                left: 0;</span><br><span class="line">                right: 0;</span><br><span class="line">                top: 0;</span><br><span class="line">                bottom: 0;</span><br><span class="line"></span><br><span class="line">优先显示靠下的元素</span><br><span class="line">开启了定位的元素z-index设置元素的层级,层级越高优先显示</span><br><span class="line"> 祖先的元素的层级再高也不会盖住后代元素</span><br></pre></td></tr></table></figure><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h3 id="16-字体"><a href="#16-字体" class="headerlink" title="16.字体"></a>16.字体</h3><h4 id="1-字体库"><a href="#1-字体库" class="headerlink" title="(1).字体库"></a>(1).字体库</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">font-size: 40px;</span><br><span class="line">color: red;</span><br><span class="line">font-family: &quot;&quot;;字体</span><br><span class="line"></span><br><span class="line">fontawesome 类名使用 i标签引入</span><br><span class="line"></span><br><span class="line">        li::before&#123;</span><br><span class="line">            /* </span><br><span class="line">                通过伪元素来设置图标字体</span><br><span class="line">                    1.找到要设置图标的元素通过before或after选中</span><br><span class="line">                    2.在content中设置字体的编码</span><br><span class="line">                    3.设置字体的样式</span><br><span class="line">                        fab</span><br><span class="line">                        font-family: &#x27;Font Awesome 5 Brands&#x27;;</span><br><span class="line"></span><br><span class="line">                        fas</span><br><span class="line">                        font-family: &#x27;Font Awesome 5 Free&#x27;;</span><br><span class="line">                        font-weight: 900; </span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">            content: &#x27;\f1b0&#x27;;</span><br><span class="line">           font-family: &#x27;Font Awesome 5 Brands&#x27;;</span><br><span class="line">            font-family: &#x27;Font Awesome 5 Free&#x27;;</span><br><span class="line">            font-weight: 900; </span><br><span class="line">            color: blue;</span><br><span class="line">            margin-right: 10px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">阿里巴巴矢量库</span><br><span class="line"></span><br><span class="line">        i.iconfont&#123;</span><br><span class="line">            font-size: 100px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        p::before&#123;</span><br><span class="line">            content: &#x27;\e625&#x27;;</span><br><span class="line">            font-family: &#x27;iconfont&#x27;;</span><br><span class="line">            font-size: 100px;</span><br><span class="line">        &#125;</span><br><span class="line">实体:</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont&quot;</span>&gt;</span><span class="symbol">&amp;#xe61c;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont&quot;</span>&gt;</span><span class="symbol">&amp;#xe622;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont&quot;</span>&gt;</span><span class="symbol">&amp;#xe623;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-qitalaji&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-行高"><a href="#2-行高" class="headerlink" title="(2).行高"></a>(2).行高</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">如果是整数则是字体指定的倍数</span><br><span class="line"> /* 设置行高，没有设置高度 使文字垂直居中 */</span><br><span class="line">line-height: 30px;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-字体简写"><a href="#3-字体简写" class="headerlink" title="(3).字体简写"></a>(3).字体简写</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">font: 字体大小/行高 字体族</span><br><span class="line"></span><br><span class="line">以下两个可以写到上面简写的最前面</span><br><span class="line">font-weight:字重</span><br><span class="line">可选值:</span><br><span class="line">bold(100-900)加粗</span><br><span class="line">normmal</span><br><span class="line">font-style:</span><br><span class="line">可选值:</span><br><span class="line">normal</span><br><span class="line">italic斜体</span><br></pre></td></tr></table></figure><h3 id="17-文本"><a href="#17-文本" class="headerlink" title="17.文本"></a>17.文本</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">text-align 文本的水平对齐</span><br><span class="line">    可选值：</span><br><span class="line">        left 左侧对齐</span><br><span class="line">         right 右对齐</span><br><span class="line">        center 居中对齐</span><br><span class="line">        justify 两端对齐</span><br><span class="line">vertical-align 设置元素垂直对齐的方式</span><br><span class="line">     可选值：</span><br><span class="line">          baseline 默认值 基线对齐</span><br><span class="line">          top 顶部对齐</span><br><span class="line">          bottom 底部对齐</span><br><span class="line">          middle 居中对齐</span><br><span class="line">text-decoration 设置文本修饰</span><br><span class="line">     可选值：</span><br><span class="line">        none 什么都没有</span><br><span class="line">        underline 下划线</span><br><span class="line">        line-through 删除线</span><br><span class="line">        overline 上划线</span><br><span class="line"> white-space 设置网页如何处理空白</span><br><span class="line">      可选值：</span><br><span class="line">          normal 正常</span><br><span class="line">          nowrap 不换行</span><br><span class="line">          pre 保留空白</span><br><span class="line">多余的内容设置省略号</span><br><span class="line"> width: 200px;</span><br><span class="line">            white-space: nowrap;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">            text-overflow: ellipsis;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="18-背景"><a href="#18-背景" class="headerlink" title="18.背景"></a>18.背景</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">background-color: ; </span><br><span class="line">background-image: url(&quot;&quot;);</span><br><span class="line"></span><br><span class="line">background-repeat 用来设置背景的重复方式</span><br><span class="line"> 可选值：</span><br><span class="line">      repeat 默认值 ， 背景会沿着x轴 y轴双方向重复</span><br><span class="line">      repeat-x 沿着x轴方向重复</span><br><span class="line">      repeat-y 沿着y轴方向重复</span><br><span class="line">      no-repeat 背景图片不重复</span><br><span class="line"></span><br><span class="line"> background-position 用来设置背景图片的位置</span><br><span class="line"> 设置方式：</span><br><span class="line">        通过 top left right bottom center 几个表示方位的词来设置背景图片的位置</span><br><span class="line">        使用方位词时必须要同时指定两个值，如果只写一个则第二个默认就是center</span><br><span class="line">        通过偏移量来指定背景图片的位置：</span><br><span class="line">        水平方向的偏移量 垂直方向变量</span><br><span class="line"></span><br><span class="line">设置背景的范围 </span><br><span class="line">background-clip </span><br><span class="line">  可选值：</span><br><span class="line">       border-box 默认值，背景会出现在边框的下边</span><br><span class="line">       padding-box 背景不会出现在边框，只出现在内容区和内边距</span><br><span class="line">       content-box 背景只会出现在内容区</span><br><span class="line"></span><br><span class="line">background-origin 背景图片的偏移量计算的原点</span><br><span class="line">        padding-box 默认值，background-position从内边距处开始计算</span><br><span class="line">        content-box 背景图片的偏移量从内容区处计算</span><br><span class="line">        border-box 背景图片的变量从边框处开始计算</span><br><span class="line"></span><br><span class="line">background-size 设置背景图片的大小</span><br><span class="line">         第一个值表示宽度 </span><br><span class="line">         第二个值表示高度</span><br><span class="line">            - 如果只写一个，则第二个值默认是 auto</span><br><span class="line">                    cover 图片的比例不变，将元素铺满</span><br><span class="line">                    contain 图片比例不变，将图片在元素中完整显示</span><br><span class="line"></span><br><span class="line">background-attachment</span><br><span class="line">        - 背景图片是否跟随元素移动</span><br><span class="line">        - 可选值：</span><br><span class="line">              scroll 默认值 背景图片会跟随元素移动</span><br><span class="line">              fixed 背景会固定在页面中，不会随元素移动</span><br><span class="line"></span><br><span class="line">background: url(&#x27;./img/2.jpg&#x27;) #bfa  center center/contain border-box content-box no-repeat ;</span><br><span class="line">        注意：</span><br><span class="line">            background-size必须写在background-position的后边，并且使用/隔开</span><br><span class="line">            background-position/background-size</span><br><span class="line">background-origin background-clip 两个样式 ，orgin要在clip的前边</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">解决图片闪烁的问题：</span><br><span class="line">            可以将多个小图片统一保存到一个大图片中，然后通过调整background-position来显示的图片</span><br><span class="line">            这样图片会同时加载到网页中 就可以有效的避免出现闪烁的问题</span><br><span class="line">            这个技术在网页中应用十分广泛，被称为CSS-Sprite，这种图我们称为雪碧图</span><br><span class="line"></span><br><span class="line">        雪碧图的使用步骤：</span><br><span class="line">            1.先确定要使用的图标</span><br><span class="line">            2.测量图标的大小</span><br><span class="line">            3.根据测量结果创建一个元素</span><br><span class="line">            4.将雪碧图设置为元素的背景图片</span><br><span class="line">            5.设置一个偏移量以显示正确的图片</span><br><span class="line"></span><br><span class="line">        雪碧图的特点：</span><br><span class="line">            一次性将多个图片加载进页面，降低请求的次数，加快访问速度，提升用户的体验            </span><br></pre></td></tr></table></figure><h3 id="19-表格"><a href="#19-表格" class="headerlink" title="19.表格"></a>19.表格</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">tr:行</span><br><span class="line">td:单元格</span><br><span class="line">rowspan:合并纵向单元格</span><br><span class="line">colspan:合并横向单元格</span><br><span class="line"><span class="comment">&lt;!-- 在table中使用tr表示表格中的一行，有几个tr就有几行 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 在tr中使用td表示一个单元格，有几个td就有几个单元格 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>A1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>B1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>C1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>D1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>A2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>B2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>C2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- rowspan 纵向的合并单元格 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>D2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>A3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>B3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>C3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>A4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>B4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">                    colspan 横向的合并单元格</span></span><br><span class="line"><span class="comment">                 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>C4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">长表格:</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="20-表单"><a href="#20-表单" class="headerlink" title="20.表单"></a>20.表单</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;target.html&quot;</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- autocomplete=&quot;off&quot; 补全 </span></span><br><span class="line"><span class="comment">                readonly 只读 会提交</span></span><br><span class="line"><span class="comment">                disabled 禁用 不会提交</span></span><br><span class="line"><span class="comment">                autofocus 获取焦点</span></span><br><span class="line"><span class="comment">           --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">span</span>&gt;</span>用户<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">span</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">&lt;!-- 单选框 --&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- checked默认选中 --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;rem&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">&lt;!-- 多选框 --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;2&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;3&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- 下拉列表 --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;select&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;11&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;111&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> /&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="21-过渡"><a href="#21-过渡" class="headerlink" title="21.过渡"></a>21.过渡</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">transition: </span><br><span class="line">1.property</span><br><span class="line">方式 all</span><br><span class="line">2.duration</span><br><span class="line">秒数</span><br><span class="line">3.timing-function</span><br><span class="line">过渡的持续函数</span><br><span class="line">ease</span><br><span class="line">linear</span><br><span class="line">ease-in</span><br><span class="line">ease-out</span><br><span class="line">ease-in-out</span><br><span class="line">cubic-bezier()制定时序函数</span><br><span class="line">steps()分步执行过渡效果 </span><br><span class="line">4.delay</span><br><span class="line">过渡效果的延迟</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="22-动画"><a href="#22-动画" class="headerlink" title="22.动画"></a>22.动画</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">@keyframes test&#123;</span><br><span class="line">from&#123;&#125;</span><br><span class="line">to&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">            /* animation-name: 要对当前元素生效的关键帧的名字 */</span><br><span class="line">            /* animation-name: test; */</span><br><span class="line"></span><br><span class="line">            /* animation-duration: 动画的执行时间 */</span><br><span class="line">            /* animation-duration: 4s; */</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">            /* 动画的延时 */</span><br><span class="line">            /* animation-delay: 2s; */</span><br><span class="line"></span><br><span class="line">            /* animation-timing-function: ease-in-out; */</span><br><span class="line"></span><br><span class="line">            /* </span><br><span class="line">            animation-iteration-count 动画执行的次数 </span><br><span class="line">                可选值：</span><br><span class="line">                    次数</span><br><span class="line">                    infinite 无限执行</span><br><span class="line">            */</span><br><span class="line">            /* animation-iteration-count: 1; */</span><br><span class="line"></span><br><span class="line">            /*</span><br><span class="line">             animation-direction</span><br><span class="line">                指定动画运行的方向</span><br><span class="line">                    可选值：</span><br><span class="line">                    normal 默认值  从 from 向 to运行 每次都是这样 </span><br><span class="line">                    reverse 从 to 向 from 运行 每次都是这样 </span><br><span class="line">                    alternate 从 from 向 to运行 重复执行动画时反向执行</span><br><span class="line">                    alternate-reverse 从 to 向 from运行 重复执行动画时反向执行</span><br><span class="line"></span><br><span class="line">            */</span><br><span class="line">            /* animation-direction: alternate-reverse; */</span><br><span class="line"></span><br><span class="line">            /* </span><br><span class="line">                animation-play-state: 设置动画的执行状态 </span><br><span class="line">                可选值：</span><br><span class="line">                    running 默认值 动画执行</span><br><span class="line">                    paused 动画暂停</span><br><span class="line">            */</span><br><span class="line">            /* animation-play-state: paused; */</span><br><span class="line"></span><br><span class="line">            /* </span><br><span class="line">            animation-fill-mode: 动画的填充模式</span><br><span class="line">                可选值：</span><br><span class="line">                    none 默认值 动画执行完毕元素回到原来位置</span><br><span class="line">                    forwards 动画执行完毕元素会停止在动画结束的位置</span><br><span class="line">                    backwards 动画延时等待时，元素就会处于开始位置</span><br><span class="line">                    both 结合了forwards 和 backwards</span><br><span class="line">            */</span><br><span class="line">            /* animation-fill-mode: both; */</span><br></pre></td></tr></table></figure><h3 id="23-变形"><a href="#23-变形" class="headerlink" title="23.变形"></a>23.变形</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">         /* </span><br><span class="line">             变形就是指通过CSS来改变元素的形状或位置</span><br><span class="line">             -   变形不会影响到页面的布局</span><br><span class="line">             - transform 用来设置元素的变形效果</span><br><span class="line">                 - 平移：</span><br><span class="line">                     translateX() 沿着x轴方向平移</span><br><span class="line">                     translateY() 沿着y轴方向平移</span><br><span class="line">                     translateZ() 沿着z轴方向平移</span><br><span class="line">                         - 平移元素，百分比是相对于自身计算的</span><br><span class="line">         */</span><br><span class="line">         /* transform: translateY(-100px); */</span><br><span class="line">居中</span><br><span class="line">         color: orange;</span><br><span class="line">         position: absolute;</span><br><span class="line">         /* </span><br><span class="line">             这种居中方式，只适用于元素的大小确定</span><br><span class="line">         top: 0;</span><br><span class="line">         left: 0;</span><br><span class="line">         bottom: 0;</span><br><span class="line">         right: 0;</span><br><span class="line">         margin: auto; */</span><br><span class="line"></span><br><span class="line">         left: 50%;</span><br><span class="line">         top: 50%;</span><br><span class="line">         transform: translateX(-50%) translateY(-50%);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         /* </span><br><span class="line">             对元素进行缩放的函数：</span><br><span class="line">                 scaleX() 水平方向缩放</span><br><span class="line">                 scaleY() 垂直方向缩放</span><br><span class="line">                 scale() 双方向的缩放</span><br><span class="line">         */</span><br><span class="line">         transform:scale(2)</span><br></pre></td></tr></table></figure><h3 id="24-弹性布局"><a href="#24-弹性布局" class="headerlink" title="24.弹性布局"></a>24.弹性布局</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">主轴:弹性元素排列的方向为主轴</span><br><span class="line">侧轴:主轴垂直的方向称为侧轴</span><br><span class="line"></span><br><span class="line">display:flex;</span><br><span class="line">display:inline-flex;</span><br><span class="line"></span><br><span class="line">flex-direction:</span><br><span class="line">row</span><br><span class="line">row-reverse</span><br><span class="line">column</span><br><span class="line">column-reverse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flex-grow:0</span><br><span class="line">弹性元素的伸展系数</span><br><span class="line"></span><br><span class="line">flex-shrink:1</span><br><span class="line">收缩系数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            /* flex-wrap: </span><br><span class="line">                设置弹性元素是否在弹性容器中自动换行</span><br><span class="line">                可选值：</span><br><span class="line">                    nowrap 默认值，元素不会自动换行</span><br><span class="line">                    wrap 元素沿着辅轴方向自动换行</span><br><span class="line">                    wrap-reverse 元素沿着辅轴反方向换行</span><br><span class="line">            */</span><br><span class="line"></span><br><span class="line">            /* flex-wrap: wrap-reverse; */</span><br><span class="line"></span><br><span class="line">            /* flex-flow:  wrap 和 direction 的简写属性 */</span><br><span class="line">            /* flex-flow: row wrap; */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            /*  </span><br><span class="line">                justify-content</span><br><span class="line">                    - 如何分配主轴上的空白空间（主轴上的元素如何排列）</span><br><span class="line">                    - 可选值：</span><br><span class="line">                        flex-start 元素沿着主轴起边排列</span><br><span class="line">                        flex-end 元素沿着主轴终边排列</span><br><span class="line">                        center 元素居中排列</span><br><span class="line">                        space-around 空白分布到元素两侧</span><br><span class="line">                        space-between 空白均匀分布到元素间</span><br><span class="line">                        space-evenly 空白分布到元素的单侧</span><br><span class="line"></span><br><span class="line">            *//* align-content: 辅轴空白空间的分布 */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            /* justify-content: center; */</span><br><span class="line"></span><br><span class="line">            /*</span><br><span class="line">             align-items: </span><br><span class="line">                - 元素在辅轴上如何对齐</span><br><span class="line">                - 元素间的关系</span><br><span class="line">                    - 可选值：</span><br><span class="line">                        stretch 默认值，将元素的长度设置为相同的值</span><br><span class="line">                        flex-start 元素不会拉伸，沿着辅轴起边对齐</span><br><span class="line">                        flex-end 沿着辅轴的终边对齐</span><br><span class="line">                        center 居中对齐</span><br><span class="line">                        baseline 基线对齐</span><br><span class="line">             */</span><br><span class="line">     /*  /* align-self: 用来覆盖当前弹性元素上的align-items */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                元素基础长度</span><br><span class="line"></span><br><span class="line">                flex-basis 指定的是元素在主轴上的基础长度</span><br><span class="line">                    如果主轴是 横向的 则 该值指定的就是元素的宽度</span><br><span class="line">                    如果主轴是 纵向的 则 该值指定的是就是元素的高度</span><br><span class="line">                    - 默认值是 auto，表示参考元素自身的高度或宽度</span><br><span class="line">                    - 如果传递了一个具体的数值，则以该值为准</span><br><span class="line">            */</span><br><span class="line">            /* flex-basis: auto; */</span><br><span class="line"></span><br><span class="line">            /* </span><br><span class="line">                flex 可以设置弹性元素所有的三个样式</span><br><span class="line">                    flex 增长 缩减 基础;</span><br><span class="line">                        initial &quot;flex: 0 1 auto&quot;.</span><br><span class="line">                        auto  &quot;flex: 1 1 auto&quot;</span><br><span class="line">                        none &quot;flex: 0 0 auto&quot; 弹性元素没有弹性</span><br><span class="line">            */</span><br><span class="line">order制定排列顺序</span><br></pre></td></tr></table></figure><h3 id="25-grid布局"><a href="#25-grid布局" class="headerlink" title="25.grid布局"></a>25.grid布局</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">display: grid</span><br><span class="line"></span><br><span class="line">grid-template-columns: 100px 100px 100px;</span><br><span class="line">grid-template-columns: 1fr 1fr 1fr;</span><br><span class="line"></span><br><span class="line">coluumn-gap:</span><br><span class="line">列间距</span><br><span class="line">row-gap:</span><br><span class="line">行间距</span><br><span class="line">gap</span><br><span class="line">统一设置</span><br><span class="line"></span><br><span class="line">            .wrapper &#123;</span><br><span class="line">                display: grid;</span><br><span class="line">                grid-template-areas:</span><br><span class="line">                    &quot;header header header&quot;</span><br><span class="line">                    &quot;sidebar content content&quot;</span><br><span class="line">                    &quot;footer footer footer&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">            header &#123;</span><br><span class="line">                grid-area: header;</span><br><span class="line">            &#125;</span><br><span class="line">            main &#123;</span><br><span class="line">                grid-area: content;</span><br><span class="line">            &#125;</span><br><span class="line">            aside &#123;</span><br><span class="line">                grid-area: sidebar;</span><br><span class="line">            &#125;</span><br><span class="line">            footer &#123;</span><br><span class="line">                grid-area: footer;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">justify-items</span><br><span class="line">end start center</span><br><span class="line">align-items</span><br></pre></td></tr></table></figure><h3 id="26-移动端"><a href="#26-移动端" class="headerlink" title="26.移动端"></a>26.移动端</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">默认情况下，移动端的像素比就是  <span class="number">980</span>/移动端宽度  （<span class="number">980</span>/<span class="number">750</span>）</span><br><span class="line"> </span><br><span class="line">1px = <span class="number">2</span>移动端像素</span><br><span class="line">100vm = 一个视口宽度</span><br><span class="line">1vw = <span class="number">1</span>%视口宽度</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* </span></span><br><span class="line"><span class="comment">                网页中字体大小最小是12px，不能设置一个比12像素还小的字体</span></span><br><span class="line"><span class="comment">                    如果我们设置了一个小于12px的字体，则字体自动设置为12</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                0.1333333vw = 1px</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                5.3333vw = 40px 用这个</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">100vw = 750px(设计图的像素) <span class="number">0.</span>1333333333333333vw = 1px</span><br><span class="line">font-size: <span class="number">5.</span>3333vw;</span><br><span class="line"><span class="number">1</span> rem = <span class="number">1</span> html的字体大小</span><br><span class="line"><span class="number">1</span> rem = <span class="number">40</span> px(设计图)</span><br></pre></td></tr></table></figure><h3 id="27-媒体查询"><a href="#27-媒体查询" class="headerlink" title="27.媒体查询"></a>27.媒体查询</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> 查询规则&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">查询规则:</span><br><span class="line">all</span><br><span class="line">    print</span><br><span class="line">    screen</span><br><span class="line">    speech</span><br><span class="line">前面加上only兼容</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">             媒体特性：</span><br><span class="line">                width 视口的宽度</span><br><span class="line">                height 视口的高度</span><br><span class="line"></span><br><span class="line">                min-width 视口的最小宽度（视口大于指定宽度时生效）</span><br><span class="line">                max-width 视口的最大宽度（视口小于指定宽度时生效）</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">         @media (max-width: <span class="number">500px</span>)&#123;</span><br><span class="line">             body&#123;</span><br><span class="line">                </span><br><span class="line">             &#125;</span><br><span class="line">         &#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         样式切换的分界点，我们称其为断点，也就是网页的样式会在这个点时发生变化</span><br><span class="line">         一般比较常用的断点</span><br><span class="line"></span><br><span class="line">         小于768 超小屏幕 max-width=768px</span><br><span class="line">         大于768 小屏幕   min-width=768px</span><br><span class="line">         大于992 中型屏幕 min-width=992px</span><br><span class="line">         大于1200 大屏幕  min-width=1200px</span><br><span class="line">         </span><br><span class="line">         <span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">500px</span>) <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">700px</span>)&#123;</span><br><span class="line">             <span class="selector-tag">body</span>&#123;</span><br><span class="line">                <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> html </category>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> css </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS学习笔记</title>
      <link href="posts/ab311c4833ec/"/>
      <url>posts/ab311c4833ec/</url>
      
        <content type="html"><![CDATA[<h1 id="JS学习笔记"><a href="#JS学习笔记" class="headerlink" title="JS学习笔记"></a>JS学习笔记</h1><h2 id="一-javascript简介"><a href="#一-javascript简介" class="headerlink" title="一. javascript简介"></a>一. javascript简介</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">javascript三个部分组成</span><br><span class="line">ECMAScript 标准</span><br><span class="line">DOM 网页</span><br><span class="line">BOM浏览器</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="二-输出"><a href="#二-输出" class="headerlink" title="二. 输出"></a>二. 输出</h2><h3 id="1-定义变量方式"><a href="#1-定义变量方式" class="headerlink" title="1.定义变量方式"></a>1.定义变量方式</h3><p>(1).const 常量 块作用域</p><p>(2).let 变量 块作用域</p><p>(3).var 变量 全局作用域</p><h3 id="2-格式化输出"><a href="#2-格式化输出" class="headerlink" title="2.格式化输出"></a>2.格式化输出</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> word1 = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> word2 = <span class="string">&quot;World&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;word1&#125;</span>,<span class="subst">$&#123;word2&#125;</span>`</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;%s,%s&#x27;</span>,word1,word2);</span><br></pre></td></tr></table></figure><h3 id="3-一些基本的操作"><a href="#3-一些基本的操作" class="headerlink" title="3.一些基本的操作"></a>3.一些基本的操作</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;Hello&quot;</span>); 输出到body中</span><br><span class="line">alert(<span class="string">&quot;Hello!&quot;</span>);弹窗</span><br><span class="line">prompt()输入框函数</span><br></pre></td></tr></table></figure><h2 id="三-数据类型"><a href="#三-数据类型" class="headerlink" title="三. 数据类型"></a>三. 数据类型</h2><p>typeof检查一个数据类型</p><h3 id="1-String"><a href="#1-String" class="headerlink" title="1.String"></a>1.String</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;Hello World!&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="2-Number"><a href="#2-Number" class="headerlink" title="2.Number"></a>2.Number</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="number">123</span>;</span><br><span class="line">最大值是 <span class="built_in">Number</span>.MAX_VALUE 超过了最大值则是 <span class="literal">Infinity</span>(正无穷)</span><br><span class="line">大于<span class="number">0</span>的最小值是 <span class="built_in">Number</span>.MIN_VALUE </span><br><span class="line">不是一个数字 <span class="literal">NaN</span></span><br><span class="line"></span><br><span class="line"><span class="number">0.1</span>+<span class="number">0.2</span>=<span class="number">0.300000004</span></span><br><span class="line">所以不要用js进行精确要求高的运算</span><br></pre></td></tr></table></figure><h3 id="3-Boolean"><a href="#3-Boolean" class="headerlink" title="3.Boolean"></a>3.Boolean</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">true</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="4-Null"><a href="#4-Null" class="headerlink" title="4.Null"></a>4.Null</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="literal">null</span> 返回object</span><br><span class="line"><span class="literal">null</span>表示一个空的对象</span><br></pre></td></tr></table></figure><h3 id="5-Undefined"><a href="#5-Undefined" class="headerlink" title="5.Undefined"></a>5.Undefined</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">声明一个变量不赋值则是<span class="literal">undefined</span></span><br></pre></td></tr></table></figure><h3 id="6-Object"><a href="#6-Object" class="headerlink" title="6.Object"></a>6.Object</h3><h3 id="7-强制转化"><a href="#7-强制转化" class="headerlink" title="7.强制转化"></a>7.强制转化</h3><h4 id="1-字符串"><a href="#1-字符串" class="headerlink" title="(1).字符串"></a>(1).字符串</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">toString() 转化成字符串方法(<span class="literal">null</span>和<span class="literal">undefined</span>不行)</span><br><span class="line"><span class="built_in">String</span>() 转化成字符串函数(<span class="literal">null</span>和<span class="literal">undefined</span>行)</span><br><span class="line">对于字符串和数字<span class="built_in">String</span>函数会自动转化成字符串,而<span class="literal">null</span>和<span class="literal">undefined</span>会转化为<span class="string">&quot;null&quot;</span>和<span class="string">&quot;undefined&quot;</span></span><br></pre></td></tr></table></figure><h4 id="2-数字"><a href="#2-数字" class="headerlink" title="(2).数字"></a>(2).数字</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Number</span>()函数</span><br><span class="line">字符串 and <span class="literal">undefined</span>转化为<span class="literal">NaN</span></span><br><span class="line">空字符串或空格转化为<span class="number">0</span></span><br><span class="line"><span class="literal">null</span> <span class="number">0</span> </span><br><span class="line"><span class="literal">true</span> <span class="number">1</span> </span><br><span class="line"><span class="literal">false</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">下面的方法可以对付<span class="string">&quot;234px&quot;</span>这种</span><br><span class="line"><span class="built_in">parseInt</span>()</span><br><span class="line"><span class="built_in">parseFloat</span>()</span><br><span class="line"></span><br><span class="line"><span class="number">16</span>进制 0x</span><br><span class="line"><span class="number">8</span>进制 <span class="number">0</span></span><br><span class="line"><span class="number">2</span>进制 0b</span><br><span class="line"><span class="built_in">parseInt</span>(a,进制)</span><br></pre></td></tr></table></figure><h4 id="3-Boolean-1"><a href="#3-Boolean-1" class="headerlink" title="(3).Boolean"></a>(3).Boolean</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Boolean</span>()</span><br><span class="line">除了<span class="number">0</span> <span class="literal">NaN</span> 空字符串 <span class="literal">null</span> <span class="literal">undefined</span>都是<span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="四-对象"><a href="#四-对象" class="headerlink" title="四.对象"></a>四.对象</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line"><span class="keyword">let</span> obj = &#123;<span class="attr">name</span>:<span class="string">&quot;ByLorin&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">obj.name = <span class="string">&quot;ByLorin&quot;</span>;</span><br><span class="line">obj.maths = <span class="number">123</span>;</span><br><span class="line">obj.temp = <span class="number">1</span>;</span><br><span class="line">obj[<span class="string">&quot;temp&quot;</span>] = <span class="number">123</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> obj.temp;</span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-方法"><a href="#1-方法" class="headerlink" title="1.方法"></a>1.方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">obj.getName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-枚举"><a href="#2-枚举" class="headerlink" title="2.枚举"></a>2.枚举</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">    <span class="built_in">console</span>.log(obj[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-工厂模式"><a href="#3-工厂模式" class="headerlink" title="3.工厂模式"></a>3.工厂模式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createPerson</span>(<span class="params">name, maths, temp</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">    obj.name = name;</span><br><span class="line">    obj.maths = maths;</span><br><span class="line">    obj.temp = temp;</span><br><span class="line">    obj.fun = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        alert(<span class="built_in">this</span>.name);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(createPerson(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), createPerson(<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>));</span><br></pre></td></tr></table></figure><h3 id="4-构造函数"><a href="#4-构造函数" class="headerlink" title="4.构造函数"></a>4.构造函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">1.立刻创建一个新的对象</span><br><span class="line">2.将新建对象设置为函数中的this,在构造函数中可以使用this来引用新的对象</span><br><span class="line">3.执行函数的代码</span><br><span class="line">4.将对象最为返回值返回</span><br><span class="line"></span><br><span class="line">instanceof 检测一个对象是否是一个类的实例</span><br><span class="line">所有的对象都是Object的后代</span><br><span class="line"></span><br><span class="line">一.</span><br><span class="line">function Person(name)&#123;</span><br><span class="line">    this.name &#x3D; name;</span><br><span class="line">    this.fun &#x3D; function () &#123;</span><br><span class="line">        alert(this.name);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line">let per &#x3D; new Person(123);</span><br><span class="line">console.log(per);</span><br><span class="line">二.</span><br><span class="line">构造函数会为每一个对象创建不同的方法,这没有必要</span><br><span class="line">function Person(name)&#123;</span><br><span class="line">    this.name &#x3D; name;</span><br><span class="line">    this.fun &#x3D; fun;</span><br><span class="line">&#125;</span><br><span class="line">function fun () &#123;</span><br><span class="line">        alert(this.name);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-原型对象"><a href="#5-原型对象" class="headerlink" title="5.原型对象"></a>5.原型对象</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210224143655634.png" alt="image-20210224143655634"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">上面的定义在全局作用域很不安全</span><br><span class="line"> </span><br><span class="line"> 我们创建的每一个函数解析器都会增加prototype属性</span><br><span class="line"> 这个属性对应一个对象,这个对象就是我们所谓的原型对象</span><br><span class="line"> 如果作为普通函数调用,没作用</span><br><span class="line"> 当函数以构造函数调用时,它所创建的对象都会有一个隐藏的属性指向prototype</span><br><span class="line"> 可以通过__protot__来访问该属性</span><br><span class="line"> Person.prototype == person.__protot__</span><br><span class="line"> </span><br><span class="line"> 原型对象是一个公共区域,所有的类的实例都可以访问到这个原型对象</span><br><span class="line"> 访问对象的方法或者属性,对象自己找,找不到去原型对象找</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyClass</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">MyClass.prototype.a = <span class="number">123</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> mc = <span class="keyword">new</span> MyClass();</span><br><span class="line"><span class="built_in">console</span>.log(mc.a);</span><br><span class="line"></span><br><span class="line">检测对象有没有属性</span><br><span class="line"><span class="string">&quot;a&quot;</span> <span class="keyword">in</span> mc -&gt;<span class="literal">true</span></span><br><span class="line"><span class="keyword">in</span>原型里有也返回<span class="literal">true</span></span><br><span class="line">hasOwnProperty自己有才返回<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">原型对象也是对象,也有原型</span><br><span class="line">当我们使用一个对象的属性或方法时,会现在自身中寻找,</span><br><span class="line">自身中如果有,则直接使用,</span><br><span class="line">如果没有则去原型对象中寻找,如果原型对象中有,则使用</span><br><span class="line">如果没有则去原型的原型中寻找,直到找到 <span class="built_in">Object</span>象的原型,</span><br><span class="line"><span class="built_in">Object</span>对象的原型没有原型,如果在Objetct原型中依然没有找到,则返回<span class="literal">undefined</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(mc.__proto__.__proto__.hasOwnProperty(<span class="string">&quot;hasOwnProperty&quot;</span>));</span><br><span class="line">原型的原型里有</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-toString"><a href="#1-toString" class="headerlink" title="(1).toString()"></a>(1).toString()</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">    <span class="built_in">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> per = <span class="keyword">new</span> Person(<span class="string">&quot;lorin&quot;</span>, <span class="number">19</span>);</span><br><span class="line"><span class="built_in">console</span>.log(per);</span><br><span class="line"></span><br><span class="line">修改原型中的toString方法</span><br><span class="line">per.prototype.toString = <span class="function"><span class="keyword">function</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;test&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-三种对象"><a href="#6-三种对象" class="headerlink" title="6.三种对象"></a>6.三种对象</h3><h4 id="1-内建对象"><a href="#1-内建对象" class="headerlink" title="(1).内建对象"></a>(1).内建对象</h4><h5 id="数组"><a href="#数组" class="headerlink" title="- 数组"></a>- 数组</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">数组 <span class="built_in">Array</span> 性能比普通对象要好,我们在开发中常用数组来储存一些数据</span><br><span class="line"><span class="keyword">let</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line"><span class="keyword">let</span> arr[];</span><br><span class="line"></span><br><span class="line">方法:</span><br><span class="line">push向末尾添加一个或多个元素,返回新数组的长度</span><br><span class="line">    pop 删除末尾的元素,返回被删除的元素</span><br><span class="line">    unshift 向开始添加一个或多个元素,返回新数组的长度</span><br><span class="line">    shift 删除开始的元素,返回被删除的元素</span><br><span class="line">    </span><br><span class="line">forEach: </span><br><span class="line">第一个参数是value</span><br><span class="line">        第二个参数是下标</span><br><span class="line">        第三个是数组对象</span><br><span class="line">    arr.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">value, index,arr_obj</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(index);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">slice:</span><br><span class="line">可以从数组提取制定元素,类似python的切片</span><br><span class="line">arr.slice(<span class="number">0</span>, <span class="number">2</span>)</span><br><span class="line">splice:</span><br><span class="line">删除数组的制定元素,会影响远数组,并将删除的元素返回</span><br><span class="line">第一个开始位置的index,</span><br><span class="line">        第二个为删除的数量,</span><br><span class="line">        第三个参数及以后可以传递新的元素会自动插入index之后</span><br><span class="line">arr.splice(<span class="number">0</span>,<span class="number">2</span>)</span><br><span class="line">concat:</span><br><span class="line">连接两个或多个数组,并将新数组返回</span><br><span class="line">不会影响远数组</span><br><span class="line">join:</span><br><span class="line">python一样</span><br><span class="line">    sort:</span><br><span class="line">使用unicode进行排序,对数字进行排序可能会错误</span><br><span class="line">arr.sort(<span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;&#125;);</span><br><span class="line">返回大于<span class="number">0</span>元素交换位置</span><br><span class="line">        小于<span class="number">0</span>元素位置不变</span><br><span class="line">        等于<span class="number">0</span>元素相等,位置不变</span><br><span class="line">            <span class="number">1.</span></span><br><span class="line">            arr.sort(<span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (a &lt; b) &#123;</span><br><span class="line">                    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (a &gt; b) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="number">2.</span></span><br><span class="line">            arr.sort(<span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> a - b;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="number">3.</span></span><br><span class="line">            arr.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a - b);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">    reverse:</span><br><span class="line"> </span><br></pre></td></tr></table></figure><h5 id="Date"><a href="#Date" class="headerlink" title="-Date"></a>-Date</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> date1 = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">&quot;12/03/2016 11:10:30&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(date1);</span><br><span class="line">格式:月份/日/年 时:分:秒</span><br><span class="line"></span><br><span class="line">方法:</span><br><span class="line">getDate</span><br><span class="line">    获取当前日期是几日</span><br><span class="line">    </span><br><span class="line">    getDay</span><br><span class="line">    获取星期几 <span class="number">0</span>-<span class="number">6</span>周日开始</span><br><span class="line">    </span><br><span class="line">    getMonth</span><br><span class="line">    获取月份 <span class="number">0</span>-<span class="number">11</span>一月开始</span><br><span class="line">    </span><br><span class="line">    getFullYear</span><br><span class="line">    获取年份</span><br><span class="line">    </span><br><span class="line">    getTime</span><br><span class="line">     time = <span class="built_in">Date</span>.now();</span><br><span class="line">    时间戳</span><br><span class="line">   </span><br></pre></td></tr></table></figure><h5 id="Math"><a href="#Math" class="headerlink" title="-Math"></a>-Math</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PI 圆周率</span><br><span class="line">abs绝对值</span><br><span class="line">ceil 向上取整</span><br><span class="line">floor 向下取整</span><br><span class="line">round 四舍五入</span><br><span class="line">random 随机数<span class="number">0</span>-<span class="number">1</span></span><br><span class="line"><span class="built_in">Math</span>.round(<span class="built_in">Math</span>.round() * <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">max</span><br><span class="line">min</span><br><span class="line">pow</span><br><span class="line">sqrt</span><br></pre></td></tr></table></figure><h4 id="2-宿主对象"><a href="#2-宿主对象" class="headerlink" title="(2).宿主对象"></a>(2).宿主对象</h4><h4 id="3-自定义对象"><a href="#3-自定义对象" class="headerlink" title="(3).自定义对象"></a>(3).自定义对象</h4><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h2 id="五-函数"><a href="#五-函数" class="headerlink" title="五.函数"></a>五.函数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 函数名(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">立即执行函数</span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="built_in">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fun.call();</span><br><span class="line">fun.apply();</span><br><span class="line">fun();</span><br><span class="line"><span class="comment">// 都会调用函数执行,调用call或者apply可以制定一个对象为第一个参数</span></span><br><span class="line"><span class="comment">// 这个时候对象会成为函数执行的this</span></span><br><span class="line"><span class="comment">// call形参依次传递 apply封装成数组 </span></span><br><span class="line"></span><br><span class="line">在调用函数的时候,浏览器每次都会传递两个隐含的参数</span><br><span class="line"><span class="number">1.</span><span class="built_in">this</span></span><br><span class="line"><span class="number">2.</span><span class="built_in">arguments</span></span><br><span class="line">类数组对象</span><br><span class="line">传递的实参在<span class="built_in">arguments</span>中保存,<span class="built_in">arguments</span>.length可以获取实参的长度,也可以获取实参</span><br><span class="line">属性callee对应函数对象</span><br></pre></td></tr></table></figure><h2 id="六-作用域"><a href="#六-作用域" class="headerlink" title="六.作用域"></a>六.作用域</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params"></span>)会在所有代码前被声明</span></span><br><span class="line"><span class="function"><span class="title">var</span> 也会,但是不会赋值</span></span><br></pre></td></tr></table></figure><h2 id="七-this"><a href="#七-this" class="headerlink" title="七.this"></a>七.this</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">调用函数都会传递<span class="built_in">this</span></span><br><span class="line"><span class="built_in">this</span>指向的是一个对象</span><br><span class="line">这个对象我们称为函数执行的上下文</span><br><span class="line">根据函数的调用方式不同,<span class="built_in">this</span>会指向不同的对象</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>函数形式调用,<span class="built_in">this</span>指向windows</span><br><span class="line"><span class="number">2.</span>方法形式调用,<span class="built_in">this</span>指向调用方法的对象</span><br><span class="line"><span class="number">3.</span>构造函数调用后,<span class="built_in">this</span>就是新创建的那个对象</span><br><span class="line"><span class="number">4.</span>call apply调用,<span class="built_in">this</span>是制定的对象</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>.name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> obj = &#123; <span class="attr">name</span>: <span class="string">&quot;ByLorin&quot;</span>, <span class="attr">getName</span>: fun &#125;;</span><br><span class="line"><span class="keyword">let</span> obj2 = &#123; <span class="attr">name</span>: <span class="string">&quot;ByCode&quot;</span>, <span class="attr">getName</span>: fun &#125;;</span><br><span class="line">obj.getName();</span><br><span class="line">obj2.getName();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="八-垃圾回收"><a href="#八-垃圾回收" class="headerlink" title="八.垃圾回收"></a>八.垃圾回收</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">当一个对象没有任何的变量或者属性对它进行引用,我们永远无法操作该对象,这种对象就是垃圾</span><br><span class="line">JS中自动的垃圾回收机制,会自动将这些垃圾对象从内存从销毁</span><br><span class="line">我们不需要也不能进行垃圾回收的操作</span><br><span class="line"></span><br><span class="line">我们只要把不要用的对象设置为<span class="literal">null</span></span><br><span class="line"><span class="keyword">let</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line"></span><br><span class="line">obj = <span class="literal">null</span></span><br></pre></td></tr></table></figure><h2 id="九-字符串"><a href="#九-字符串" class="headerlink" title="九.字符串"></a>九.字符串</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">在底层是以字符串数组储存的</span><br><span class="line">length属性</span><br><span class="line"></span><br><span class="line">方法:</span><br><span class="line">charAt();</span><br><span class="line">获取指定位置的字符</span><br><span class="line">    </span><br><span class="line">    charCodeAt();</span><br><span class="line">获取指定位置unicode</span><br><span class="line">    </span><br><span class="line">    fromCharCode(); </span><br><span class="line">    unicode 到字符</span><br><span class="line">    </span><br><span class="line">    concat();连接字符串</span><br><span class="line">indexOf();有该内容会返回第一次出现的索引</span><br><span class="line">      如果没有则返回-<span class="number">1</span></span><br><span class="line">  第二个参数为开始查找的位置</span><br><span class="line">    lastIndexOf()</span><br><span class="line">从后往前找其他和上面一样</span><br><span class="line">    slice()&amp;substring()截取</span><br><span class="line">    </span><br><span class="line">    substring()不接受负值,-值变为<span class="number">0</span></span><br><span class="line"></span><br><span class="line">split()</span><br><span class="line">    toUpperCase()</span><br><span class="line">    toLowerCase()</span><br></pre></td></tr></table></figure><h2 id="10-正则表达式"><a href="#10-正则表达式" class="headerlink" title="10.正则表达式"></a>10.正则表达式</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210224182118499.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210224182307245.png" alt="image-20210224182307245"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210224183645544.png" alt="image-20210224183645544"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210224184729165.png" alt="image-20210224184729165"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;正则表达式&quot;</span>,<span class="string">&quot;匹配模式&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/正则表达式/</span>匹配模式</span><br><span class="line">i 忽略大小写</span><br><span class="line">g 全局匹配</span><br><span class="line"></span><br><span class="line">正则表达式</span><br><span class="line">[^]除了</span><br><span class="line">/^/开头</span><br><span class="line">/$/结尾</span><br><span class="line"> </span><br><span class="line">正则表达式的方法:</span><br><span class="line">test()</span><br><span class="line">使用这个方法可以用来检查一个字符串是否符合正则表达式的规则</span><br><span class="line">如果符合则返回<span class="literal">true</span>,否则返回fa1se</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">split</span><br><span class="line">replace</span><br><span class="line">search</span><br><span class="line">match</span><br><span class="line"></span><br><span class="line">练习:</span><br><span class="line">手机号</span><br><span class="line">    <span class="number">1</span> <span class="number">3</span> <span class="number">467891234</span></span><br><span class="line">/^<span class="number">1</span>[<span class="number">3</span>-<span class="number">9</span>][<span class="number">0</span>-<span class="number">9</span>]&#123;<span class="number">9</span>&#125;$/</span><br><span class="line">        </span><br><span class="line">    /^\s*|\s*$/</span><br><span class="line">开头或结尾的空格</span><br><span class="line">    </span><br><span class="line">    邮箱</span><br><span class="line">  ^\w&#123;<span class="number">3</span>,&#125;(\.\w+)*@[A-z0-<span class="number">9</span>]+(\[A-z]&#123;<span class="number">2</span>,<span class="number">5</span>&#125;)&#123;<span class="number">1</span>,<span class="number">2</span>&#125;$</span><br></pre></td></tr></table></figure><h2 id="11-DOM"><a href="#11-DOM" class="headerlink" title="11.DOM"></a>11.DOM</h2><h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">D-<span class="built_in">document</span></span><br><span class="line">O-<span class="built_in">Object</span></span><br><span class="line">M-Model</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&quot;btn&quot;</span>);</span><br><span class="line">btn.innerHTML = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-事件"><a href="#2-事件" class="headerlink" title="2.事件"></a>2.事件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&quot;btn&quot;</span>);</span><br><span class="line">btn.click = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">//</span></span><br><span class="line">&#125;;</span><br><span class="line">点击事件</span><br><span class="line">onclick=<span class="string">&quot;js代码&quot;</span></span><br><span class="line">双击事件</span><br><span class="line">ondbclick</span><br><span class="line">鼠标移动</span><br><span class="line">onmousemove</span><br><span class="line">页面记载完成</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-文档的加载"><a href="#3-文档的加载" class="headerlink" title="3.文档的加载"></a>3.文档的加载</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">自上而下加载</span><br><span class="line"></span><br><span class="line">页面记载完成</span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-获取元素节点"><a href="#4-获取元素节点" class="headerlink" title="4.获取元素节点"></a>4.获取元素节点</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>文档</span><br><span class="line">getElementById</span><br><span class="line">getElementsByTagName</span><br><span class="line">getElementsByName</span><br><span class="line"></span><br><span class="line">innerHTML用于获取元素内部的HTML代码</span><br><span class="line">对于自结束标签,这个属性没有意义</span><br><span class="line"></span><br><span class="line">innerText获取内部的文本内容,会去除HTML代码</span><br><span class="line"></span><br><span class="line">如果需要读取元素节点属性</span><br><span class="line">直接使用元素,属性名</span><br><span class="line">例子:元素.id元素,name元素.value</span><br><span class="line"></span><br><span class="line">注意:<span class="class"><span class="keyword">class</span>属性不能采用这种方式</span></span><br><span class="line"><span class="class">读取<span class="title">class</span>属性时需要使用元素.<span class="title">className</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">2.元素节点的子节点</span></span><br><span class="line"><span class="class">方法</span></span><br><span class="line"><span class="class">(1).<span class="title">getElementsByTagName</span></span></span><br><span class="line"><span class="class"><span class="title">let</span> <span class="title">city</span> </span>= <span class="built_in">document</span>.getElementById(<span class="string">&quot;city&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> lis = city.getElementsByTagName(<span class="string">&quot;li&quot;</span>);</span><br><span class="line">属性</span><br><span class="line">(<span class="number">2</span>).childNodes</span><br><span class="line">会获取文本节点在内的全部子节点</span><br><span class="line">标签间的空白也会计算</span><br><span class="line">(<span class="number">3</span>).firstchlid</span><br><span class="line">第一个子节点</span><br><span class="line">(<span class="number">4</span>).lastchlid</span><br><span class="line">最后一个子节点</span><br><span class="line">(<span class="number">5</span>).children</span><br><span class="line">子元素</span><br><span class="line">(<span class="number">6</span>).firstElementChild;</span><br><span class="line">第一个子元素</span><br><span class="line">(<span class="number">7</span>).lastElementChild;</span><br><span class="line">最后一个子元素</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>父节点或者兄弟节点</span><br><span class="line">parentNode</span><br><span class="line">父节点</span><br><span class="line">previousSibling</span><br><span class="line">前一个兄弟节点</span><br><span class="line">nextSibling</span><br><span class="line">后一个兄弟节点</span><br><span class="line"></span><br><span class="line">previousElementSibling</span><br><span class="line">前一个兄弟元素</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>补充</span><br><span class="line"><span class="built_in">document</span>.body</span><br><span class="line"><span class="built_in">document</span>.documentElement</span><br><span class="line"><span class="built_in">document</span>.all</span><br><span class="line"><span class="built_in">document</span>.getElementsByClassName</span><br><span class="line"></span><br><span class="line">css选择器</span><br><span class="line"><span class="built_in">document</span>.querySelector</span><br><span class="line"><span class="built_in">document</span>.querySelectorAll</span><br></pre></td></tr></table></figure><h3 id="5-增删改"><a href="#5-增删改" class="headerlink" title="5.增删改"></a>5.增删改</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加一个li元素</span></span><br><span class="line"><span class="keyword">let</span> li = <span class="built_in">document</span>.createElement(<span class="string">&quot;li&quot;</span>);</span><br><span class="line"><span class="comment">// 添加一个文本节点</span></span><br><span class="line"><span class="keyword">let</span> gzText = <span class="built_in">document</span>.createTextNode(<span class="string">&quot;广州&quot;</span>);</span><br><span class="line"><span class="comment">// 把文本设置成li的子节点</span></span><br><span class="line">li.appendChild(gzText);</span><br><span class="line"></span><br><span class="line">以上可以最优成:</span><br><span class="line"><span class="keyword">let</span> li = <span class="built_in">document</span>.createElement(<span class="string">&quot;li&quot;</span>);</span><br><span class="line">li.innerHTML = <span class="string">&quot;广州&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取city</span></span><br><span class="line"><span class="keyword">let</span> city = <span class="built_in">document</span>.getElementById(<span class="string">&quot;city&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//插入li到city的后面</span></span><br><span class="line">city.appendChild(li);</span><br><span class="line"></span><br><span class="line"><span class="comment">//插入li到bj的前面</span></span><br><span class="line">city.insertBefore(li, bj);</span><br><span class="line"></span><br><span class="line"><span class="comment">//li替换bj</span></span><br><span class="line">city.replaceChild(li, bj);</span><br><span class="line"></span><br><span class="line"><span class="comment">//city中删除bj</span></span><br><span class="line">city.removeChild(bj);</span><br><span class="line">最优:</span><br><span class="line">bj.parentNode.removeChild(bj);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="6-操作css"><a href="#6-操作css" class="headerlink" title="6.操作css"></a>6.操作css</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>内联样式</span><br><span class="line">元素名.style.width = <span class="string">&quot;300px&quot;</span>;</span><br><span class="line"><span class="number">2.</span>读样式</span><br><span class="line">getStyle()</span><br><span class="line">元素.currentStyle.样式名-&gt;IE</span><br><span class="line">getComputedStyle()这个方法来获取元素当前的样式</span><br><span class="line">这个方法是<span class="built_in">window</span>的方法，可以直接使用,返回一个css对象</span><br><span class="line">需要两个参数</span><br><span class="line">第一个：要获取样式的元素</span><br><span class="line">第二个：可以传递一个伪元素，一般都传<span class="literal">null</span></span><br><span class="line">getComputedStyle(box1,<span class="literal">null</span>).backgroundColor</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * 定义一个函数，用来获取指定元素的当前的样式</span></span><br><span class="line"><span class="comment">             * 参数：</span></span><br><span class="line"><span class="comment">             * obj 要获取样式的元素</span></span><br><span class="line"><span class="comment">             * name 要获取的样式名</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">getStyle</span>(<span class="params">obj, name</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">window</span>.getComputedStyle) &#123;</span><br><span class="line">                    <span class="comment">//正常浏览器的方式，具有getComputedStyle()方法</span></span><br><span class="line">                    <span class="keyword">return</span> getComputedStyle(obj, <span class="literal">null</span>)[name];</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//IE8的方式，没有getComputedStyle()方法</span></span><br><span class="line">                    <span class="keyword">return</span> obj.currentStyle[name];</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line"><span class="number">3.</span>其他样式属性的操作</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="7-事件对象"><a href="#7-事件对象" class="headerlink" title="7.事件对象"></a>7.事件对象</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">                 * onmousemove</span></span><br><span class="line"><span class="comment">                 * - 该事件将会在鼠标在元素中移动时被触发</span></span><br><span class="line"><span class="comment">                 *</span></span><br><span class="line"><span class="comment">                 * 事件对象</span></span><br><span class="line"><span class="comment">                 * - 当事件的响应函数被触发时，浏览器每次都会将一个事件对象作为实参传递进响应函数,</span></span><br><span class="line"><span class="comment">                 * 在事件对象中封装了当前事件相关的一切信息，比如：鼠标的坐标  键盘哪个按键被按下  鼠标滚轮滚动的方向</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line"></span><br><span class="line">                a.onmousemove = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">                    <span class="comment">//解决事件对象的兼容性问题</span></span><br><span class="line"></span><br><span class="line">                    event = event || <span class="built_in">window</span>.event;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">/*</span></span><br><span class="line"><span class="comment">                     * clientX可以获取鼠标指针的水平坐标</span></span><br><span class="line"><span class="comment">                     * cilentY可以获取鼠标指针的垂直坐标</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    <span class="keyword">var</span> x = event.clientX;</span><br><span class="line">                    <span class="keyword">var</span> y = event.clientY;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//alert(&quot;x = &quot;+x + &quot; , y = &quot;+y);</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">//在showMsg中显示鼠标的坐标</span></span><br><span class="line">                    showMsg.innerHTML = <span class="string">&quot;x = &quot;</span> + x + <span class="string">&quot; , y = &quot;</span> + y;&#125;</span><br><span class="line"><span class="number">2.</span></span><br><span class="line">                <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">                    <span class="comment">//解决兼容问题</span></span><br><span class="line">                    event = event || <span class="built_in">window</span>.event;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//获取滚动条滚动的距离</span></span><br><span class="line">                    <span class="comment">/*</span></span><br><span class="line"><span class="comment">                     * chrome认为浏览器的滚动条是body的，可以通过body.scrollTop来获取</span></span><br><span class="line"><span class="comment">                     * 火狐等浏览器认为浏览器的滚动条是html的，</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    <span class="keyword">var</span> st = <span class="built_in">document</span>.body.scrollTop || <span class="built_in">document</span>.documentElement.scrollTop;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">var</span> sl = <span class="built_in">document</span>.body.scrollLeft || <span class="built_in">document</span>.documentElement.scrollLeft;</span><br><span class="line">                    <span class="comment">//var st = document.documentElement.scrollTop;</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">//获取到鼠标的坐标</span></span><br><span class="line">                    <span class="comment">/*</span></span><br><span class="line"><span class="comment">                     * clientX和clientY</span></span><br><span class="line"><span class="comment">                     * 用于获取鼠标在当前的可见窗口的坐标</span></span><br><span class="line"><span class="comment">                     * div的偏移量，是相对于整个页面的</span></span><br><span class="line"><span class="comment">                     *</span></span><br><span class="line"><span class="comment">                     * pageX和pageY可以获取鼠标相对于当前页面的坐标</span></span><br><span class="line"><span class="comment">                     * 但是这个两个属性在IE8中不支持，所以如果需要兼容IE8，则不要使用</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    <span class="keyword">var</span> left = event.clientX;</span><br><span class="line">                    <span class="keyword">var</span> top = event.clientY;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//设置div的偏移量</span></span><br><span class="line">                    box1.style.left = left + sl + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">                    box1.style.top = top + st + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">                    </span><br><span class="line"><span class="number">3.</span>事件的冒泡</span><br><span class="line"></span><br><span class="line">所谓的冒泡指的就是事件的向上传导，当后代元素上的事件被触发时，其祖先元素的相同事件也会被触发</span><br><span class="line">在开发中大部分情况冒泡都是有用的,如果不希望发生事件冒泡可以通过事件对象来取消冒泡</span><br><span class="line">     event.cancelBubble = <span class="literal">true</span>;</span><br><span class="line">                    </span><br><span class="line"><span class="number">4.</span>事件的委派</span><br><span class="line"></span><br><span class="line">指将事件统一绑定给元素的共同的祖先元素，这样当后代元素上的事件触发时，会一直冒泡到祖先元素</span><br><span class="line">从而通过祖先元素的响应函数来处理事件。</span><br><span class="line">事件委派是利用了冒泡，通过委派可以减少事件绑定的次数，提高程序的性能</span><br><span class="line">解决新添加类型的元素在之前已经绑定好事件</span><br><span class="line">                <span class="comment">//为ul绑定一个单击响应函数</span></span><br><span class="line">                u1.onclick = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">                    event = event || <span class="built_in">window</span>.event;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">/*</span></span><br><span class="line"><span class="comment">                     * target</span></span><br><span class="line"><span class="comment">                     * - event中的target表示的触发事件的对象</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    <span class="comment">//alert(event.target);</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">//如果触发事件的对象是我们期望的元素，则执行否则不执行</span></span><br><span class="line">                    <span class="keyword">if</span> (event.target.className == <span class="string">&quot;link&quot;</span>) &#123;</span><br><span class="line">                        alert(<span class="string">&quot;我是ul的单击响应函数&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;;</span><br><span class="line"> <span class="number">5.</span>事件的绑定</span><br><span class="line"> 可以绑定多个</span><br><span class="line"> btn01.addEventListener(<span class="string">&quot;click&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">alert(<span class="number">1</span>);</span><br><span class="line">&#125;,<span class="literal">false</span>);</span><br><span class="line"> 第一个参数:事件</span><br><span class="line"> 第二个参数:回调函数</span><br><span class="line"> 第三个函数:是否捕获触发事件</span><br><span class="line"> </span><br><span class="line"> <span class="number">6.</span>事件的传播</span><br><span class="line"> 微软认为事件应该是由内向外传播</span><br><span class="line"> 事件在冒泡阶段执行</span><br><span class="line"> 网景应该应该从外向内传播</span><br><span class="line"> </span><br><span class="line">W3C综合了两个公司的方案，将事件传播分成了三个阶段</span><br><span class="line"><span class="number">1.</span>捕获阶段</span><br><span class="line">在捕获阶段时从最外层的祖先元素，向目标元素进行事件的捕获，但是默认此时不会触发事件</span><br><span class="line"><span class="number">2.</span>目标阶段</span><br><span class="line">事件捕获到目标元素，捕获结束开始在目标元素上触发事件</span><br><span class="line"><span class="number">3.</span>冒泡阶段</span><br><span class="line">事件从目标元素向他的祖先元素传递，依次触发祖先元素上的事件</span><br><span class="line">如果希望在捕获阶段就触发事件，可以将addEventListener()的第三个参数设置为<span class="literal">true</span></span><br><span class="line">一般情况下我们不会希望在捕获阶段触发事件，所以这个参数一般都是<span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="8-事件"><a href="#8-事件" class="headerlink" title="8.事件"></a>8.事件</h3><h4 id="1-拖拽"><a href="#1-拖拽" class="headerlink" title="1.拖拽"></a>1.拖拽</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drag</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line"><span class="comment">//当鼠标在被拖拽元素上按下时，开始拖拽  onmousedown</span></span><br><span class="line">obj.onmousedown = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置box1捕获所有鼠标按下的事件</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * setCapture()</span></span><br><span class="line"><span class="comment"> * - 只有IE支持，但是在火狐中调用时不会报错，</span></span><br><span class="line"><span class="comment"> * 而如果使用chrome调用，会报错</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/*if(box1.setCapture)&#123;</span></span><br><span class="line"><span class="comment">box1.setCapture();</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line">obj.setCapture &amp;&amp; obj.setCapture();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">event = event || <span class="built_in">window</span>.event;</span><br><span class="line"><span class="comment">//div的偏移量 鼠标.clentX - 元素.offsetLeft</span></span><br><span class="line"><span class="comment">//div的偏移量 鼠标.clentY - 元素.offsetTop</span></span><br><span class="line"><span class="keyword">var</span> ol = event.clientX - obj.offsetLeft;</span><br><span class="line"><span class="keyword">var</span> ot = event.clientY - obj.offsetTop;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//为document绑定一个onmousemove事件</span></span><br><span class="line"><span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">event = event || <span class="built_in">window</span>.event;</span><br><span class="line"><span class="comment">//当鼠标移动时被拖拽元素跟随鼠标移动 onmousemove</span></span><br><span class="line"><span class="comment">//获取鼠标的坐标</span></span><br><span class="line"><span class="keyword">var</span> left = event.clientX - ol;</span><br><span class="line"><span class="keyword">var</span> top = event.clientY - ot;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改box1的位置</span></span><br><span class="line">obj.style.left = left+<span class="string">&quot;px&quot;</span>;</span><br><span class="line">obj.style.top = top+<span class="string">&quot;px&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//为document绑定一个鼠标松开事件</span></span><br><span class="line"><span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//当鼠标松开时，被拖拽元素固定在当前位置onmouseup</span></span><br><span class="line"><span class="comment">//取消document的onmousemove事件</span></span><br><span class="line"><span class="built_in">document</span>.onmousemove = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">//取消document的onmouseup事件</span></span><br><span class="line"><span class="built_in">document</span>.onmouseup = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">//当鼠标松开时，取消对事件的捕获</span></span><br><span class="line">obj.releaseCapture &amp;&amp; obj.releaseCapture();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 当我们拖拽一个网页中的内容时，浏览器会默认去搜索引擎中搜索内容，</span></span><br><span class="line"><span class="comment"> * 此时会导致拖拽功能的异常，这个是浏览器提供的默认行为，</span></span><br><span class="line"><span class="comment"> * 如果不希望发生这个行为，则可以通过return false来取消默认行为</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 但是这招对IE8不起作用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="2-滚轮"><a href="#2-滚轮" class="headerlink" title="2.滚轮"></a>2.滚轮</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取id为box1的div</span></span><br><span class="line">               <span class="keyword">var</span> box1 = <span class="built_in">document</span>.getElementById(<span class="string">&quot;box1&quot;</span>);</span><br><span class="line"></span><br><span class="line">               <span class="comment">//为box1绑定一个鼠标滚轮滚动的事件</span></span><br><span class="line">               <span class="comment">/*</span></span><br><span class="line"><span class="comment">                * onmousewheel鼠标滚轮滚动的事件，会在滚轮滚动时触发，</span></span><br><span class="line"><span class="comment">                * 但是火狐不支持该属性</span></span><br><span class="line"><span class="comment">                *</span></span><br><span class="line"><span class="comment">                * 在火狐中需要使用 DOMMouseScroll 来绑定滚动事件</span></span><br><span class="line"><span class="comment">                * 注意该事件需要通过addEventListener()函数来绑定</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line"></span><br><span class="line">               box1.onmousewheel = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">                   event = event || <span class="built_in">window</span>.event;</span><br><span class="line"></span><br><span class="line">                   <span class="comment">//event.wheelDelta 可以获取鼠标滚轮滚动的方向</span></span><br><span class="line">                   <span class="comment">//向上滚 120   向下滚 -120</span></span><br><span class="line">                   <span class="comment">//wheelDelta这个值我们不看大小，只看正负</span></span><br><span class="line"></span><br><span class="line">                   <span class="comment">//alert(event.wheelDelta);</span></span><br><span class="line"></span><br><span class="line">                   <span class="comment">//wheelDelta这个属性火狐中不支持</span></span><br><span class="line">                   <span class="comment">//在火狐中使用event.detail来获取滚动的方向</span></span><br><span class="line">                   <span class="comment">//向上滚 -3  向下滚 3</span></span><br><span class="line">                   <span class="comment">//alert(event.detail);</span></span><br><span class="line"></span><br><span class="line">                   <span class="comment">/*</span></span><br><span class="line"><span class="comment">                    * 当鼠标滚轮向下滚动时，box1变长</span></span><br><span class="line"><span class="comment">                    * 当滚轮向上滚动时，box1变短</span></span><br><span class="line"><span class="comment">                    */</span></span><br><span class="line">                   <span class="comment">//判断鼠标滚轮滚动的方向</span></span><br><span class="line">                   <span class="keyword">if</span> (event.wheelDelta &gt; <span class="number">0</span> || event.detail &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                       <span class="comment">//向上滚，box1变短</span></span><br><span class="line">                       box1.style.height = box1.clientHeight - <span class="number">10</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">                   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                       <span class="comment">//向下滚，box1变长</span></span><br><span class="line">                       box1.style.height = box1.clientHeight + <span class="number">10</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">                   &#125;</span><br><span class="line"></span><br><span class="line">                   <span class="comment">/*</span></span><br><span class="line"><span class="comment">                    * 使用addEventListener()方法绑定响应函数，取消默认行为时不能使用return false</span></span><br><span class="line"><span class="comment">                    * 需要使用event来取消默认行为event.preventDefault();</span></span><br><span class="line"><span class="comment">                    * 但是IE8不支持event.preventDefault();这个玩意，如果直接调用会报错</span></span><br><span class="line"><span class="comment">                    */</span></span><br><span class="line">                   event.preventDefault &amp;&amp; event.preventDefault();</span><br><span class="line"></span><br><span class="line">                   <span class="comment">/*</span></span><br><span class="line"><span class="comment">                    * 当滚轮滚动时，如果浏览器有滚动条，滚动条会随之滚动，</span></span><br><span class="line"><span class="comment">                    * 这是浏览器的默认行为，如果不希望发生，则可以取消默认行为</span></span><br><span class="line"><span class="comment">                    */</span></span><br><span class="line">                   <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">               &#125;;</span><br></pre></td></tr></table></figure><h4 id="3-键盘"><a href="#3-键盘" class="headerlink" title="3.键盘"></a>3.键盘</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 键盘事件：</span></span><br><span class="line"><span class="comment"> * onkeydown</span></span><br><span class="line"><span class="comment"> * - 按键被按下</span></span><br><span class="line"><span class="comment"> * - 对于onkeydown来说如果一直按着某个按键不松手，则事件会一直触发</span></span><br><span class="line"><span class="comment"> * - 当onkeydown连续触发时，第一次和第二次之间会间隔稍微长一点，其他的会非常的快</span></span><br><span class="line"><span class="comment"> * 这种设计是为了防止误操作的发生。</span></span><br><span class="line"><span class="comment"> * onkeyup</span></span><br><span class="line"><span class="comment"> * - 按键被松开</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> *  键盘事件一般都会绑定给一些可以获取到焦点的对象或者是document</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.onkeydown = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">event = event || <span class="built_in">window</span>.event;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 可以通过keyCode来获取按键的编码</span></span><br><span class="line"><span class="comment"> * 通过它可以判断哪个按键被按下</span></span><br><span class="line"><span class="comment"> * 除了keyCode，事件对象中还提供了几个属性</span></span><br><span class="line"><span class="comment"> * altKey</span></span><br><span class="line"><span class="comment"> * ctrlKey</span></span><br><span class="line"><span class="comment"> * shiftKey</span></span><br><span class="line"><span class="comment"> * - 这个三个用来判断alt ctrl 和 shift是否被按下</span></span><br><span class="line"><span class="comment"> * 如果按下则返回true，否则返回false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//console.log(event.keyCode);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//判断一个y是否被按下</span></span><br><span class="line"><span class="comment">//判断y和ctrl是否同时被按下</span></span><br><span class="line"><span class="keyword">if</span>(event.keyCode === <span class="number">89</span> &amp;&amp; event.ctrlKey)&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;ctrl和y都被按下了&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*document.onkeyup = function()&#123;</span></span><br><span class="line"><span class="comment">console.log(&quot;按键松开了&quot;);</span></span><br><span class="line"><span class="comment">&#125;;*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取input</span></span><br><span class="line"><span class="keyword">var</span> input = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;input&quot;</span>)[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">input.onkeydown = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">event = event || <span class="built_in">window</span>.event;</span><br><span class="line"></span><br><span class="line"><span class="comment">//console.log(event.keyCode);</span></span><br><span class="line"><span class="comment">//数字 48 - 57</span></span><br><span class="line"><span class="comment">//使文本框中不能输入数字</span></span><br><span class="line"><span class="keyword">if</span>(event.keyCode &gt;= <span class="number">48</span> &amp;&amp; event.keyCode &lt;= <span class="number">57</span>)&#123;</span><br><span class="line"><span class="comment">//在文本框中输入内容，属于onkeydown的默认行为</span></span><br><span class="line"><span class="comment">//如果在onkeydown中取消了默认行为，则输入的内容，不会出现在文本框中</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="12-BOM"><a href="#12-BOM" class="headerlink" title="12.BOM"></a>12.BOM</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * BOM</span></span><br><span class="line"><span class="comment"> * - 浏览器对象模型</span></span><br><span class="line"><span class="comment"> * - BOM可以使我们通过JS来操作浏览器</span></span><br><span class="line"><span class="comment"> * - 在BOM中为我们提供了一组对象，用来完成对浏览器的操作</span></span><br><span class="line"><span class="comment"> * - BOM对象</span></span><br><span class="line"><span class="comment"> * Window</span></span><br><span class="line"><span class="comment"> * - 代表的是整个浏览器的窗口，同时window也是网页中的全局对象</span></span><br><span class="line"><span class="comment"> * Navigator</span></span><br><span class="line"><span class="comment"> * - 代表的当前浏览器的信息，通过该对象可以来识别不同的浏览器</span></span><br><span class="line"><span class="comment"> * Location</span></span><br><span class="line"><span class="comment"> * - 代表当前浏览器的地址栏信息，通过Location可以获取地址栏信息，或者操作浏览器跳转页面</span></span><br><span class="line"><span class="comment"> * History</span></span><br><span class="line"><span class="comment"> * - 代表浏览器的历史记录，可以通过该对象来操作浏览器的历史记录</span></span><br><span class="line"><span class="comment"> * 由于隐私原因，该对象不能获取到具体的历史记录，只能操作浏览器向前或向后翻页</span></span><br><span class="line"><span class="comment"> * 而且该操作只在当次访问时有效</span></span><br><span class="line"><span class="comment"> * Screen</span></span><br><span class="line"><span class="comment"> * - 代表用户的屏幕的信息，通过该对象可以获取到用户的显示器的相关的信息</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 这些BOM对象在浏览器中都是作为window对象的属性保存的，</span></span><br><span class="line"><span class="comment"> * 可以通过window对象来使用，也可以直接使用</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">navigator:</span><br><span class="line"></span><br><span class="line">navigator.userAgent</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">history:</span><br><span class="line"><span class="comment">//获取按钮对象</span></span><br><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&quot;btn&quot;</span>);</span><br><span class="line"></span><br><span class="line">btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * length</span></span><br><span class="line"><span class="comment"> * - 属性，可以获取到当成访问的链接数量</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//alert(history.length);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * back()</span></span><br><span class="line"><span class="comment"> * - 可以用来回退到上一个页面，作用和浏览器的回退按钮一样</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//history.back();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * forward()</span></span><br><span class="line"><span class="comment"> * - 可以跳转下一个页面，作用和浏览器的前进按钮一样</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//history.forward();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * go()</span></span><br><span class="line"><span class="comment"> * - 可以用来跳转到指定的页面</span></span><br><span class="line"><span class="comment"> * - 它需要一个整数作为参数</span></span><br><span class="line"><span class="comment"> * 1:表示向前跳转一个页面 相当于forward()</span></span><br><span class="line"><span class="comment"> * 2:表示向前跳转两个页面</span></span><br><span class="line"><span class="comment"> * -1:表示向后跳转一个页面</span></span><br><span class="line"><span class="comment"> * -2:表示向后跳转两个页面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">history.go(-<span class="number">2</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">location:</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取按钮对象</span></span><br><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&quot;btn&quot;</span>);</span><br><span class="line"></span><br><span class="line">btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果直接打印location，则可以获取到地址栏的信息（当前页面的完整路径）</span></span><br><span class="line"><span class="comment">//alert(location);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 如果直接将location属性修改为一个完整的路径，或相对路径</span></span><br><span class="line"><span class="comment"> * 则我们页面会自动跳转到该路径，并且会生成相应的历史记录</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//location = &quot;http://www.baidu.com&quot;;</span></span><br><span class="line"><span class="comment">//location = &quot;01.BOM.html&quot;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * assign()</span></span><br><span class="line"><span class="comment"> * - 用来跳转到其他的页面，作用和直接修改location一样</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//location.assign(&quot;http://www.baidu.com&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * reload()</span></span><br><span class="line"><span class="comment"> * - 用于重新加载当前页面，作用和刷新按钮一样</span></span><br><span class="line"><span class="comment"> * - 如果在方法中传递一个true，作为参数，则会强制清空缓存刷新页面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//location.reload(true);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * replace()</span></span><br><span class="line"><span class="comment"> * - 可以使用一个新的页面替换当前页面，调用完毕也会跳转页面</span></span><br><span class="line"><span class="comment"> * 不会生成历史记录，不能使用回退按钮回退</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">location.replace(<span class="string">&quot;01.BOM.html&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="13-定时器"><a href="#13-定时器" class="headerlink" title="13.定时器"></a>13.定时器</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * setInterval()</span></span><br><span class="line"><span class="comment"> * - 定时调用</span></span><br><span class="line"><span class="comment"> * - 可以将一个函数，每隔一段时间执行一次</span></span><br><span class="line"><span class="comment"> * - 参数：</span></span><br><span class="line"><span class="comment"> * 1.回调函数，该函数会每隔一段时间被调用一次</span></span><br><span class="line"><span class="comment"> * 2.每次调用间隔的时间，单位是毫秒</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * - 返回值：</span></span><br><span class="line"><span class="comment"> * 返回一个Number类型的数据</span></span><br><span class="line"><span class="comment"> * 这个数字用来作为定时器的唯一标识</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> timer = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">count.innerHTML = num++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(num == <span class="number">11</span>)&#123;</span><br><span class="line"><span class="comment">//关闭定时器</span></span><br><span class="line"><span class="built_in">clearInterval</span>(timer);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;,<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//console.log(timer);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//clearInterval()可以用来关闭一个定时器</span></span><br><span class="line"><span class="comment">//方法中需要一个定时器的标识作为参数，这样将关闭标识对应的定时器</span></span><br><span class="line"><span class="comment">//clearInterval(timer);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//开启一个定时器</span></span><br><span class="line"><span class="comment">/*setInterval(function()&#123;</span></span><br><span class="line"><span class="comment">console.log(num++);</span></span><br><span class="line"><span class="comment">&#125;,3000);*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 延时调用，</span></span><br><span class="line"><span class="comment"> * 延时调用一个函数不马上执行，而是隔一段时间以后在执行，而且只会执行一次</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 延时调用和定时调用的区别，定时调用会执行多次，而延时调用只会执行一次</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 延时调用和定时调用实际上是可以互相代替的，在开发中可以根据自己需要去选择</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> timer = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(num++);</span><br><span class="line">&#125;,<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用clearTimeout()来关闭一个延时调用</span></span><br><span class="line"><span class="built_in">clearTimeout</span>(timer);</span><br></pre></td></tr></table></figure><h2 id="14-JSON"><a href="#14-JSON" class="headerlink" title="14.JSON"></a>14.JSON</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * JSON</span></span><br><span class="line"><span class="comment"> * - JS中的对象只有JS自己认识，其他的语言都不认识</span></span><br><span class="line"><span class="comment"> * - JSON就是一个特殊格式的字符串，这个字符串可以被任意的语言所识别，</span></span><br><span class="line"><span class="comment"> * 并且可以转换为任意语言中的对象，JSON在开发中主要用来数据的交互</span></span><br><span class="line"><span class="comment"> * - JSON</span></span><br><span class="line"><span class="comment"> * - JavaScript Object Notation JS对象表示法</span></span><br><span class="line"><span class="comment"> * - JSON和JS对象的格式一样，只不过JSON字符串中的属性名必须加双引号</span></span><br><span class="line"><span class="comment"> * 其他的和JS语法一致</span></span><br><span class="line"><span class="comment"> * JSON分类：</span></span><br><span class="line"><span class="comment"> * 1.对象 &#123;&#125;</span></span><br><span class="line"><span class="comment"> * 2.数组 []</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * JSON中允许的值：</span></span><br><span class="line"><span class="comment"> * 1.字符串</span></span><br><span class="line"><span class="comment"> * 2.数值</span></span><br><span class="line"><span class="comment"> * 3.布尔值</span></span><br><span class="line"><span class="comment"> * 4.null</span></span><br><span class="line"><span class="comment"> * 5.对象</span></span><br><span class="line"><span class="comment"> * 6.数组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个对象</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = <span class="string">&#x27;[1,2,3,&quot;hello&quot;,true]&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj2 = <span class="string">&#x27;&#123;&quot;arr&quot;:[1,2,3]&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr2 =<span class="string">&#x27;[&#123;&quot;name&quot;:&quot;孙悟空&quot;,&quot;age&quot;:18,&quot;gender&quot;:&quot;男&quot;&#125;,&#123;&quot;name&quot;:&quot;孙悟空&quot;,&quot;age&quot;:18,&quot;gender&quot;:&quot;男&quot;&#125;]&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 将JSON字符串转换为JS中的对象</span></span><br><span class="line"><span class="comment"> * 在JS中，为我们提供了一个工具类，就叫JSON</span></span><br><span class="line"><span class="comment"> * 这个对象可以帮助我们将一个JSON转换为JS对象，也可以将一个JS对象转换为JSON</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> json = <span class="string">&#x27;&#123;&quot;name&quot;:&quot;孙悟空&quot;,&quot;age&quot;:18,&quot;gender&quot;:&quot;男&quot;&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * json --&gt; js对象</span></span><br><span class="line"><span class="comment"> *  JSON.parse()</span></span><br><span class="line"><span class="comment"> * - 可以将以JSON字符串转换为js对象</span></span><br><span class="line"><span class="comment"> * - 它需要一个JSON字符串作为参数，会将该字符串转换为JS对象并返回</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> o = <span class="built_in">JSON</span>.parse(json);</span><br><span class="line"><span class="keyword">var</span> o2 = <span class="built_in">JSON</span>.parse(arr);</span><br><span class="line"></span><br><span class="line"><span class="comment">//console.log(o.gender);</span></span><br><span class="line"><span class="comment">//console.log(o2[1]);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj3 = &#123;<span class="attr">name</span>:<span class="string">&quot;猪八戒&quot;</span> , <span class="attr">age</span>:<span class="number">28</span> , <span class="attr">gender</span>:<span class="string">&quot;男&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * JS对象 ---&gt; JSON</span></span><br><span class="line"><span class="comment"> * JSON.stringify()</span></span><br><span class="line"><span class="comment"> * - 可以将一个JS对象转换为JSON字符串</span></span><br><span class="line"><span class="comment"> * - 需要一个js对象作为参数，会返回一个JSON字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> str = <span class="built_in">JSON</span>.stringify(obj3);</span><br><span class="line"><span class="comment">//console.log(str);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * JSON这个对象在IE7及以下的浏览器中不支持，所以在这些浏览器中调用时会报错</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> str3 = <span class="string">&#x27;&#123;&quot;name&quot;:&quot;孙悟空&quot;,&quot;age&quot;:18,&quot;gender&quot;:&quot;男&quot;&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">JSON</span>.parse(str3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos系统环境搭建</title>
      <link href="posts/2dfcc54038e4/"/>
      <url>posts/2dfcc54038e4/</url>
      
        <content type="html"><![CDATA[<h2 id="一-虚拟机安装Centos"><a href="#一-虚拟机安装Centos" class="headerlink" title="一.虚拟机安装Centos"></a>一.虚拟机安装Centos</h2><blockquote><p>可以选择带GUI版本和命令版</p></blockquote><p><a href="https://mirrors.aliyun.com/centos/7/isos/x86_64/">阿里云centos7下载镜像</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425085945252.png" alt="image-20210425085945252"></p><p>这里建议选择命令行版本最小化安装吧,<del>GUI版本没啥好的.</del></p><ol><li>首先ctrl+N新建一个虚拟机</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425090529936.png" alt="image-20210425090529936"></p><ol start="2"><li>选择.iso镜像</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425090622607.png" alt="image-20210425090622607"></p><ol start="3"><li><p>修改虚拟机名称和安装位置</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425090718759.png" alt="image-20210425090718759"></p></li><li><p>选择虚拟机硬盘大小,看实际需求选择</p><p> <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425091019326.png" alt="image-20210425091019326"></p></li><li><p>完成打开虚拟机</p></li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425091040739.png" alt="image-20210425091040739"></p><ol start="6"><li>等待一会安装完成进入配置界面</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425091310671.png" alt="image-20210425091310671"></p><ol start="7"><li><p>选择英文或者往下拉选择简体中文</p></li><li><p>点击网络配置一下网络和修改一下主机名字</p><p>8.1首先在左边虚拟机右键选择设置进入</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425091812373.png" alt="image-20210425091812373"></p><blockquote><p>在家里用有路由器可以选择桥接复制状态，然后在路由器中配置静态ip</p><p>当然也可以使用NAT模式</p></blockquote><p>8.2配置ip</p><p>这里点击配置选择静态ip,设置一个路由器下的静态ip或NAT.</p><p>记得DNS要选择正确(比如114.114.114.114),我这里选择的是路由器的网关,要不到时候可能会异常</p></li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425092705835.png" alt="image-20210425092705835"></p><p>​        忘记设置可以使用下面的方法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line"></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=824ec4bd-a9ae-4410-8346-17ce7f3dd111</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.31.21</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.31.1</span><br><span class="line">DNS1=119.29.29.29</span><br><span class="line"></span><br><span class="line">systemctl restart network.service</span><br></pre></td></tr></table></figure><p>​                8.点击安装,设置root密码</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425092135913.png" alt="image-20210425092135913"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425092207540.png" alt="image-20210425092207540"></p><p>当然你也可以创建一个新用户</p><p>完成安装</p><p>9.登录成功</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425093024602.png" alt="image-20210425093024602"></p><h2 id="二-配置SSH"><a href="#二-配置SSH" class="headerlink" title="二.配置SSH"></a>二.配置SSH</h2><p>1.安装 网络工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools</span><br></pre></td></tr></table></figure><p>2.看看ip配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>出现前面配置的ip就可以了</p><p>3.查看ssh版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -V</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425094118082.png" alt="image-20210425094118082"></p><p>4.ssh登录</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/image-20210425094234388.png" alt="image-20210425094234388"></p><p>接受并保存</p><h2 id="三-安装python3环境"><a href="#三-安装python3环境" class="headerlink" title="三.安装python3环境"></a>三.安装python3环境</h2><p><a href="https://www.codelorin.cn/posts/ce035e3e001e/">python3</a></p><h2 id="四-安装Node-js环境"><a href="#四-安装Node-js环境" class="headerlink" title="四.安装Node.js环境"></a>四.安装Node.js环境</h2><p><a href="https://www.codelorin.cn/posts/e928bde0b9fd/">Node.js</a></p><h2 id="五-安装git"><a href="#五-安装git" class="headerlink" title="五.安装git"></a>五.安装git</h2><p><a href="https://www.codelorin.cn/posts/0c740b046a61/">git</a></p><h2 id="六-安装java"><a href="#六-安装java" class="headerlink" title="六.安装java"></a>六.安装java</h2><p><a href="https://www.codelorin.cn/posts/c1b49f6cc382/">java</a></p><h2 id="七-安装docker"><a href="#七-安装docker" class="headerlink" title="七.安装docker"></a>七.安装docker</h2><p><a href="https://www.codelorin.cn/posts/78a32cbab478/">docker</a></p><h2 id="八-下载软件打包"><a href="#八-下载软件打包" class="headerlink" title="八.下载软件打包"></a>八.下载软件打包</h2><p>链接：<a href="https://pan.baidu.com/s/1TRPoB2_hxPSFbYh_Xep6DQ">https://pan.baidu.com/s/1TRPoB2_hxPSFbYh_Xep6DQ</a><br>提取码：6666 </p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
          <category> centos </category>
          
          <category> 虚拟机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> 环境搭建 </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为你的hexo博客添加全局吸底并且收入侧边栏的Aplayer</title>
      <link href="posts/28649b6f0095/"/>
      <url>posts/28649b6f0095/</url>
      
        <content type="html"><![CDATA[<h1 id="为你的hexo博客添加全局吸底并且收入侧边栏的Aplayer"><a href="#为你的hexo博客添加全局吸底并且收入侧边栏的Aplayer" class="headerlink" title="为你的hexo博客添加全局吸底并且收入侧边栏的Aplayer"></a>为你的hexo博客添加全局吸底并且收入侧边栏的Aplayer</h1><blockquote><p>最终效果</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/20210429142541.png" alt="image-20210429142000885"></p><h2 id="1-收入侧边栏"><a href="#1-收入侧边栏" class="headerlink" title="1.收入侧边栏"></a>1.收入侧边栏</h2><p><img src= "/img/loading.gif" data-lazy-src="https://z3.ax1x.com/2021/04/29/gFqsET.png" alt="image-20210429134930335"></p><p>找到butterfly配置文件APlayer.min.css把他下载下来,上图第一个</p><p>复制代码进入<a href="https://tool.oschina.net/codeformat/css%E6%A0%BC%E5%BC%8F%E5%8C%96">https://tool.oschina.net/codeformat/css格式化</a></p><p>由于.aplayer-body已经开启了fixed定位,只要简单修改一下left并设置最高优先级即可收入侧边栏</p><p>我们只需要在css中加入以下代码即可实现收入侧边栏</p><p>在代码最后加入即可</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.aplayer</span><span class="selector-class">.aplayer-narrow</span> <span class="selector-class">.aplayer-body</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">66px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.aplayer-body</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0px</span> <span class="meta">!important</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-歌词颜色修改"><a href="#2-歌词颜色修改" class="headerlink" title="2.歌词颜色修改"></a>2.歌词颜色修改</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-lrc</span> <span class="selector-tag">p</span><span class="selector-class">.aplayer-lrc-current</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>:<span class="number">1</span>;</span><br><span class="line">    <span class="attribute">overflow</span>:visible;</span><br><span class="line">    <span class="attribute">height</span>:auto<span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">min-height</span>:<span class="number">16px</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>找到如上代码修改如下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-lrc</span> <span class="selector-tag">p</span><span class="selector-class">.aplayer-lrc-current</span> &#123;</span><br><span class="line">    <span class="comment">/* 大小 */</span></span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="comment">/* 颜色 */</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#1b82f1</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: visible;</span><br><span class="line">    <span class="attribute">height</span>: auto <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-lrc</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#666</span>;</span><br><span class="line">    <span class="attribute">line-height</span>:<span class="number">16px</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">16px</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">transition</span>:all .<span class="number">5s</span> ease-out;</span><br><span class="line">    <span class="attribute">opacity</span>:.<span class="number">4</span>;</span><br><span class="line">    <span class="attribute">overflow</span>:hidden</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再修改上面css样式为</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-lrc</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#777</span>;</span><br><span class="line">    <span class="attribute">line-height</span>:<span class="number">16px</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">16px</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span><span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">transition</span>:all .<span class="number">5s</span> ease-out;</span><br><span class="line">    <span class="attribute">opacity</span>:.<span class="number">4</span>;</span><br><span class="line">    <span class="attribute">overflow</span>:hidden</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-最后"><a href="#3-最后" class="headerlink" title="3.最后"></a>3.最后</h2><p>保存这个css,替换主题配置文件中的Aplayer.min.css即可</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/CodeLorin/img/img/20210429142549.png" alt="image-20210429134930335"></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> butterfly </category>
          
          <category> aplayer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
            <tag> aplayer </tag>
            
            <tag> 魔改 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HelloWorld</title>
      <link href="posts/d5bec4482fb2/"/>
      <url>posts/d5bec4482fb2/</url>
      
        <content type="html"><![CDATA[<p>by CodeLorin</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> daily </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
